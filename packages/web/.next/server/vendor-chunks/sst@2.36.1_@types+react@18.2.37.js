"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/sst@2.36.1_@types+react@18.2.37";
exports.ids = ["vendor-chunks/sst@2.36.1_@types+react@18.2.37"];
exports.modules = {

/***/ "(rsc)/../../node_modules/.pnpm/sst@2.36.1_@types+react@18.2.37/node_modules/sst/node/config/index.js":
/*!******************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/sst@2.36.1_@types+react@18.2.37/node_modules/sst/node/config/index.js ***!
  \******************************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Config: () => (/* binding */ Config)\n/* harmony export */ });\n/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/index.js */ \"(rsc)/../../node_modules/.pnpm/sst@2.36.1_@types+react@18.2.37/node_modules/sst/node/util/index.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_util_index_js__WEBPACK_IMPORTED_MODULE_0__]);\n_util_index_js__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nconst Config = /* @__PURE__ */ (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.createProxy)(\"Config\");\nconst metadata = parseMetadataEnvironment();\nconst parameters = flattenValues((0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.getVariables2)(\"Parameter\"));\nconst secrets = flattenValues((0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.getVariables2)(\"Secret\"));\nObject.assign(Config, metadata, parameters, secrets);\n///////////////\n// Functions\n///////////////\nfunction parseMetadataEnvironment() {\n    return {\n        APP: process.env.SST_APP,\n        STAGE: process.env.SST_STAGE\n    };\n}\nfunction flattenValues(configValues) {\n    const acc = {};\n    Object.keys(configValues).forEach((name)=>{\n        acc[name] = configValues[name].value;\n    });\n    return acc;\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL3NzdEAyLjM2LjFfQHR5cGVzK3JlYWN0QDE4LjIuMzcvbm9kZV9tb2R1bGVzL3NzdC9ub2RlL2NvbmZpZy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUE4RDtBQUN2RCxNQUFNRSxTQUFTLGFBQWEsR0FBR0YsMkRBQVdBLENBQUMsVUFBVTtBQUM1RCxNQUFNRyxXQUFXQztBQUNqQixNQUFNQyxhQUFhQyxjQUFjTCw2REFBYUEsQ0FBQztBQUMvQyxNQUFNTSxVQUFVRCxjQUFjTCw2REFBYUEsQ0FBQztBQUM1Q08sT0FBT0MsTUFBTSxDQUFDUCxRQUFRQyxVQUFVRSxZQUFZRTtBQUM1QyxlQUFlO0FBQ2YsWUFBWTtBQUNaLGVBQWU7QUFDZixTQUFTSDtJQUNMLE9BQU87UUFDSE0sS0FBS0MsUUFBUUMsR0FBRyxDQUFDQyxPQUFPO1FBQ3hCQyxPQUFPSCxRQUFRQyxHQUFHLENBQUNHLFNBQVM7SUFDaEM7QUFDSjtBQUNBLFNBQVNULGNBQWNVLFlBQVk7SUFDL0IsTUFBTUMsTUFBTSxDQUFDO0lBQ2JULE9BQU9VLElBQUksQ0FBQ0YsY0FBY0csT0FBTyxDQUFDLENBQUNDO1FBQy9CSCxHQUFHLENBQUNHLEtBQUssR0FBR0osWUFBWSxDQUFDSSxLQUFLLENBQUNDLEtBQUs7SUFDeEM7SUFDQSxPQUFPSjtBQUNYIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9zc3RAMi4zNi4xX0B0eXBlcytyZWFjdEAxOC4yLjM3L25vZGVfbW9kdWxlcy9zc3Qvbm9kZS9jb25maWcvaW5kZXguanM/NDVjOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVQcm94eSwgZ2V0VmFyaWFibGVzMiB9IGZyb20gXCIuLi91dGlsL2luZGV4LmpzXCI7XG5leHBvcnQgY29uc3QgQ29uZmlnID0gLyogQF9fUFVSRV9fICovIGNyZWF0ZVByb3h5KFwiQ29uZmlnXCIpO1xuY29uc3QgbWV0YWRhdGEgPSBwYXJzZU1ldGFkYXRhRW52aXJvbm1lbnQoKTtcbmNvbnN0IHBhcmFtZXRlcnMgPSBmbGF0dGVuVmFsdWVzKGdldFZhcmlhYmxlczIoXCJQYXJhbWV0ZXJcIikpO1xuY29uc3Qgc2VjcmV0cyA9IGZsYXR0ZW5WYWx1ZXMoZ2V0VmFyaWFibGVzMihcIlNlY3JldFwiKSk7XG5PYmplY3QuYXNzaWduKENvbmZpZywgbWV0YWRhdGEsIHBhcmFtZXRlcnMsIHNlY3JldHMpO1xuLy8vLy8vLy8vLy8vLy8vXG4vLyBGdW5jdGlvbnNcbi8vLy8vLy8vLy8vLy8vL1xuZnVuY3Rpb24gcGFyc2VNZXRhZGF0YUVudmlyb25tZW50KCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIEFQUDogcHJvY2Vzcy5lbnYuU1NUX0FQUCxcbiAgICAgICAgU1RBR0U6IHByb2Nlc3MuZW52LlNTVF9TVEFHRSxcbiAgICB9O1xufVxuZnVuY3Rpb24gZmxhdHRlblZhbHVlcyhjb25maWdWYWx1ZXMpIHtcbiAgICBjb25zdCBhY2MgPSB7fTtcbiAgICBPYmplY3Qua2V5cyhjb25maWdWYWx1ZXMpLmZvckVhY2goKG5hbWUpID0+IHtcbiAgICAgICAgYWNjW25hbWVdID0gY29uZmlnVmFsdWVzW25hbWVdLnZhbHVlO1xuICAgIH0pO1xuICAgIHJldHVybiBhY2M7XG59XG4iXSwibmFtZXMiOlsiY3JlYXRlUHJveHkiLCJnZXRWYXJpYWJsZXMyIiwiQ29uZmlnIiwibWV0YWRhdGEiLCJwYXJzZU1ldGFkYXRhRW52aXJvbm1lbnQiLCJwYXJhbWV0ZXJzIiwiZmxhdHRlblZhbHVlcyIsInNlY3JldHMiLCJPYmplY3QiLCJhc3NpZ24iLCJBUFAiLCJwcm9jZXNzIiwiZW52IiwiU1NUX0FQUCIsIlNUQUdFIiwiU1NUX1NUQUdFIiwiY29uZmlnVmFsdWVzIiwiYWNjIiwia2V5cyIsImZvckVhY2giLCJuYW1lIiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/.pnpm/sst@2.36.1_@types+react@18.2.37/node_modules/sst/node/config/index.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/.pnpm/sst@2.36.1_@types+react@18.2.37/node_modules/sst/node/util/index.js":
/*!****************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/sst@2.36.1_@types+react@18.2.37/node_modules/sst/node/util/index.js ***!
  \****************************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createProxy: () => (/* binding */ createProxy),\n/* harmony export */   getVariables2: () => (/* binding */ getVariables2)\n/* harmony export */ });\n/* harmony import */ var _aws_sdk_client_ssm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/client-ssm */ \"(rsc)/../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/SSMClient.js\");\n/* harmony import */ var _aws_sdk_client_ssm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/client-ssm */ \"(rsc)/../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/commands/GetParametersCommand.js\");\n\nconst ssm = new _aws_sdk_client_ssm__WEBPACK_IMPORTED_MODULE_0__.SSMClient({\n    region: process.env.SST_REGION\n});\n// Example:\n// {\n//   Bucket: {\n//     myBucket: {\n//       name: \"my-bucket\",\n//     }\n//   }\n// }\nlet allVariables = {};\n// NOTE: in some setups, top level await must be assigned to a variable,\n//       otherwise it would throw a top level await error.\n//       https://discord.com/channels/983865673656705025/1089184080534446110\nconst _placeholder = await parseEnvironment();\nfunction createProxy(constructName) {\n    const result = new Proxy({}, {\n        get (target, prop) {\n            if (typeof prop === \"string\") {\n                // If SST_APP and SST_STAGE are not set, it is likely the\n                // user is using an older version of SST.\n                // Note: cannot run this check at the top level b/c SvelteKit\n                //       run code analysis after build. The code analysis runs\n                //       the top level code, and would fail b/c \"SST_APP\" and\n                //       \"SST_STAGE\" are undefined at build time.\n                if (!process.env.SST_APP) {\n                    throw new Error(buildMissingBuiltInEnvError());\n                }\n                // normalize prop to convert kebab cases like `my-table` to `my_table`\n                const normProp = normalizeId(prop);\n                if (!(normProp in target)) {\n                    throw new Error(`Cannot use ${constructName}.${String(prop)}. Please make sure it is bound to this function.`);\n                }\n                return Reflect.get(target, normProp);\n            }\n            return Reflect.get(target, prop);\n        }\n    });\n    Object.assign(result, getVariables2(constructName));\n    return result;\n}\nfunction getVariables2(constructName) {\n    return allVariables[constructName] || {};\n}\nasync function parseEnvironment() {\n    const variablesFromSsm = [];\n    const variablesFromSecret = [];\n    Object.keys(process.env).filter((name)=>name.startsWith(\"SST_\")).forEach((name)=>{\n        const variable = parseEnvName(name);\n        // Ignore if env var is not in the correct format\n        if (!variable.constructName || !variable.constructId || !variable.propName) {\n            return;\n        }\n        const value = process.env[name];\n        if (value === \"__FETCH_FROM_SSM__\") {\n            variablesFromSsm.push(variable);\n        } else if (value.startsWith(\"__FETCH_FROM_SECRET__:\")) {\n            variablesFromSecret.push([\n                variable,\n                value.split(\":\")[1]\n            ]);\n        } else {\n            storeVariable(variable, value);\n        }\n    });\n    // Fetch values from SSM\n    await fetchValuesFromSSM(variablesFromSsm);\n    // Fetch values from Secrets\n    variablesFromSecret.forEach(([variable, secretName])=>{\n        const value = allVariables[\"Secret\"]?.[secretName]?.value;\n        if (value) {\n            storeVariable(variable, value);\n        }\n    });\n    return allVariables;\n}\nasync function fetchValuesFromSSM(variablesFromSsm) {\n    // Get all env vars that need to be fetched from SSM\n    const ssmPaths = variablesFromSsm.map((variable)=>buildSsmPath(variable));\n    if (ssmPaths.length === 0) return;\n    // Fetch\n    const results = await loadSecrets(ssmPaths);\n    results.validParams.forEach((item)=>{\n        const variable = parseSsmPath(item.Name);\n        storeVariable(variable, item.Value);\n    });\n    // Get all fallback values to be fetched\n    const ssmFallbackPaths = results.invalidParams.map((name)=>parseSsmPath(name)).filter((variable)=>variable.constructName === \"Secret\").map((variable)=>buildSsmFallbackPath(variable));\n    if (ssmFallbackPaths.length === 0) return;\n    // Fetch fallback values\n    const fallbackResults = await loadSecrets(ssmFallbackPaths);\n    fallbackResults.validParams.forEach((item)=>{\n        const variable = parseSsmFallbackPath(item.Name);\n        storeVariable(variable, item.Value);\n    });\n    // Throw error if any values are missing\n    const missingSecrets = fallbackResults.invalidParams.map((name)=>parseSsmFallbackPath(name)).filter((variable)=>variable.constructName === \"Secret\").map((variable)=>variable.constructId);\n    if (missingSecrets.length > 0) {\n        throw new Error(`The following secret values are not set in the \"${process.env.SST_STAGE} stage\": ${missingSecrets.join(\", \")}`);\n    }\n}\nasync function loadSecrets(paths) {\n    // Split paths into chunks of 10\n    const chunks = [];\n    for(let i = 0; i < paths.length; i += 10){\n        chunks.push(paths.slice(i, i + 10));\n    }\n    // Fetch secrets\n    const validParams = [];\n    const invalidParams = [];\n    await Promise.all(chunks.map(async (chunk)=>{\n        const command = new _aws_sdk_client_ssm__WEBPACK_IMPORTED_MODULE_1__.GetParametersCommand({\n            Names: chunk,\n            WithDecryption: true\n        });\n        const result = await ssm.send(command);\n        validParams.push(...result.Parameters || []);\n        invalidParams.push(...result.InvalidParameters || []);\n    }));\n    return {\n        validParams,\n        invalidParams\n    };\n}\nfunction parseEnvName(env) {\n    const [_SST, constructName, propName, ...idParts] = env.split(\"_\");\n    return {\n        constructName,\n        constructId: idParts.join(\"_\"),\n        propName\n    };\n}\nfunction parseSsmPath(path) {\n    const prefix = ssmPrefix();\n    const parts = path.substring(prefix.length).split(\"/\");\n    return {\n        constructName: parts[0],\n        constructId: parts[1],\n        propName: parts[2]\n    };\n}\nfunction parseSsmFallbackPath(path) {\n    const parts = path.split(\"/\");\n    return {\n        constructName: parts[4],\n        constructId: parts[5],\n        propName: parts[6]\n    };\n}\nfunction buildSsmPath(data) {\n    return `${ssmPrefix()}${data.constructName}/${data.constructId}/${data.propName}`;\n}\nfunction buildSsmFallbackPath(data) {\n    return `/sst/${process.env.SST_APP}/.fallback/${data.constructName}/${data.constructId}/${data.propName}`;\n}\nfunction normalizeId(name) {\n    return name.replace(/-/g, \"_\");\n}\nfunction ssmPrefix() {\n    return process.env.SST_SSM_PREFIX || \"\";\n}\nfunction storeVariable(variable, value) {\n    const { constructId: id, constructName: c, propName: prop } = variable;\n    allVariables[c] = allVariables[c] || {};\n    allVariables[c][id] = allVariables[c][id] || {};\n    allVariables[c][id][prop] = value;\n}\nfunction buildMissingBuiltInEnvError() {\n    // Build environment => building SSR sites\n    if (process.env.SST) {\n        return [\n            \"\",\n            `Cannot access bound resources. This usually happens if the \"sst/node\" package is used at build time. For example:`,\n            \"\",\n            `  - The \"sst/node\" package is used inside the \"getStaticProps()\" function of a Next.js app.`,\n            `  - The \"sst/node\" package is used at the top level outside of the \"load()\" function of a SvelteKit app.`,\n            \"\",\n            `Please wrap your build script with \"sst bind\". For example, \"sst bind next build\".`,\n            \"\"\n        ].join(\"\\n\");\n    }\n    // Lambda/CodeBuild environment => Function/Job or SSR function\n    if (process.env.AWS_LAMBDA_FUNCTION_NAME || process.env.CODEBUILD_BUILD_ARN) {\n        return `Cannot access bound resources. This usually happens if you are using an older version of SST. Please update SST to the latest version.`;\n    }\n    // Unknown environment => client-side code\n    return `Cannot access bound resources. This usually happens if the \"sst/node\" package is used on the client-side. Ensure that it's only called in your server functions.`;\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } }, 1);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/.pnpm/sst@2.36.1_@types+react@18.2.37/node_modules/sst/node/util/index.js\n");

/***/ })

};
;