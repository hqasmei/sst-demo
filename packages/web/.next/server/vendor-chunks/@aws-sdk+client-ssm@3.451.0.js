"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@aws-sdk+client-ssm@3.451.0";
exports.ids = ["vendor-chunks/@aws-sdk+client-ssm@3.451.0"];
exports.modules = {

/***/ "(rsc)/../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/SSMClient.js":
/*!******************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/SSMClient.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SSMClient: () => (/* binding */ SSMClient),\n/* harmony export */   __Client: () => (/* reexport safe */ _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_9__.Client)\n/* harmony export */ });\n/* harmony import */ var _aws_sdk_middleware_host_header__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/middleware-host-header */ \"(rsc)/../../node_modules/.pnpm/@aws-sdk+middleware-host-header@3.451.0/node_modules/@aws-sdk/middleware-host-header/dist-es/index.js\");\n/* harmony import */ var _aws_sdk_middleware_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/middleware-logger */ \"(rsc)/../../node_modules/.pnpm/@aws-sdk+middleware-logger@3.451.0/node_modules/@aws-sdk/middleware-logger/dist-es/index.js\");\n/* harmony import */ var _aws_sdk_middleware_recursion_detection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-sdk/middleware-recursion-detection */ \"(rsc)/../../node_modules/.pnpm/@aws-sdk+middleware-recursion-detection@3.451.0/node_modules/@aws-sdk/middleware-recursion-detection/dist-es/index.js\");\n/* harmony import */ var _aws_sdk_middleware_signing__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @aws-sdk/middleware-signing */ \"(rsc)/../../node_modules/.pnpm/@aws-sdk+middleware-signing@3.451.0/node_modules/@aws-sdk/middleware-signing/dist-es/index.js\");\n/* harmony import */ var _aws_sdk_middleware_user_agent__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @aws-sdk/middleware-user-agent */ \"(rsc)/../../node_modules/.pnpm/@aws-sdk+middleware-user-agent@3.451.0/node_modules/@aws-sdk/middleware-user-agent/dist-es/index.js\");\n/* harmony import */ var _smithy_config_resolver__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @smithy/config-resolver */ \"(rsc)/../../node_modules/.pnpm/@smithy+config-resolver@2.0.18/node_modules/@smithy/config-resolver/dist-es/index.js\");\n/* harmony import */ var _smithy_middleware_content_length__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @smithy/middleware-content-length */ \"(rsc)/../../node_modules/.pnpm/@smithy+middleware-content-length@2.0.15/node_modules/@smithy/middleware-content-length/dist-es/index.js\");\n/* harmony import */ var _smithy_middleware_endpoint__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @smithy/middleware-endpoint */ \"(rsc)/../../node_modules/.pnpm/@smithy+middleware-endpoint@2.2.0/node_modules/@smithy/middleware-endpoint/dist-es/index.js\");\n/* harmony import */ var _smithy_middleware_retry__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @smithy/middleware-retry */ \"(rsc)/../../node_modules/.pnpm/@smithy+middleware-retry@2.0.20/node_modules/@smithy/middleware-retry/dist-es/index.js\");\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @smithy/smithy-client */ \"(rsc)/../../node_modules/.pnpm/@smithy+smithy-client@2.1.15/node_modules/@smithy/smithy-client/dist-es/index.js\");\n/* harmony import */ var _endpoint_EndpointParameters__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./endpoint/EndpointParameters */ \"(rsc)/../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/endpoint/EndpointParameters.js\");\n/* harmony import */ var _runtimeConfig__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./runtimeConfig */ \"(rsc)/../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/runtimeConfig.js\");\n/* harmony import */ var _runtimeExtensions__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./runtimeExtensions */ \"(rsc)/../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/runtimeExtensions.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass SSMClient extends _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_9__.Client {\n    constructor(...[configuration]){\n        const _config_0 = (0,_runtimeConfig__WEBPACK_IMPORTED_MODULE_10__.getRuntimeConfig)(configuration || {});\n        const _config_1 = (0,_endpoint_EndpointParameters__WEBPACK_IMPORTED_MODULE_11__.resolveClientEndpointParameters)(_config_0);\n        const _config_2 = (0,_smithy_config_resolver__WEBPACK_IMPORTED_MODULE_5__.resolveRegionConfig)(_config_1);\n        const _config_3 = (0,_smithy_middleware_endpoint__WEBPACK_IMPORTED_MODULE_7__.resolveEndpointConfig)(_config_2);\n        const _config_4 = (0,_smithy_middleware_retry__WEBPACK_IMPORTED_MODULE_8__.resolveRetryConfig)(_config_3);\n        const _config_5 = (0,_aws_sdk_middleware_host_header__WEBPACK_IMPORTED_MODULE_0__.resolveHostHeaderConfig)(_config_4);\n        const _config_6 = (0,_aws_sdk_middleware_signing__WEBPACK_IMPORTED_MODULE_3__.resolveAwsAuthConfig)(_config_5);\n        const _config_7 = (0,_aws_sdk_middleware_user_agent__WEBPACK_IMPORTED_MODULE_4__.resolveUserAgentConfig)(_config_6);\n        const _config_8 = (0,_runtimeExtensions__WEBPACK_IMPORTED_MODULE_12__.resolveRuntimeExtensions)(_config_7, configuration?.extensions || []);\n        super(_config_8);\n        this.config = _config_8;\n        this.middlewareStack.use((0,_smithy_middleware_retry__WEBPACK_IMPORTED_MODULE_8__.getRetryPlugin)(this.config));\n        this.middlewareStack.use((0,_smithy_middleware_content_length__WEBPACK_IMPORTED_MODULE_6__.getContentLengthPlugin)(this.config));\n        this.middlewareStack.use((0,_aws_sdk_middleware_host_header__WEBPACK_IMPORTED_MODULE_0__.getHostHeaderPlugin)(this.config));\n        this.middlewareStack.use((0,_aws_sdk_middleware_logger__WEBPACK_IMPORTED_MODULE_1__.getLoggerPlugin)(this.config));\n        this.middlewareStack.use((0,_aws_sdk_middleware_recursion_detection__WEBPACK_IMPORTED_MODULE_2__.getRecursionDetectionPlugin)(this.config));\n        this.middlewareStack.use((0,_aws_sdk_middleware_signing__WEBPACK_IMPORTED_MODULE_3__.getAwsAuthPlugin)(this.config));\n        this.middlewareStack.use((0,_aws_sdk_middleware_user_agent__WEBPACK_IMPORTED_MODULE_4__.getUserAgentPlugin)(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0Bhd3Mtc2RrK2NsaWVudC1zc21AMy40NTEuMC9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY2xpZW50LXNzbS9kaXN0LWVzL1NTTUNsaWVudC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBZ0c7QUFDbkM7QUFDeUI7QUFDQTtBQUNPO0FBQy9CO0FBQ2E7QUFDUDtBQUNVO0FBQ2xCO0FBQ3FCO0FBQ1I7QUFDVjtBQUMzQztBQUNiLE1BQU1tQixrQkFBa0JMLHlEQUFRQTtJQUNuQ00sWUFBWSxHQUFHLENBQUNDLGNBQWMsQ0FBRTtRQUM1QixNQUFNQyxZQUFZTCxpRUFBa0JBLENBQUNJLGlCQUFpQixDQUFDO1FBQ3ZELE1BQU1FLFlBQVlSLDhGQUErQkEsQ0FBQ087UUFDbEQsTUFBTUUsWUFBWWhCLDRFQUFtQkEsQ0FBQ2U7UUFDdEMsTUFBTUUsWUFBWWYsa0ZBQXFCQSxDQUFDYztRQUN4QyxNQUFNRSxZQUFZZCw0RUFBa0JBLENBQUNhO1FBQ3JDLE1BQU1FLFlBQVkxQix3RkFBdUJBLENBQUN5QjtRQUMxQyxNQUFNRSxZQUFZdkIsaUZBQW9CQSxDQUFDc0I7UUFDdkMsTUFBTUUsWUFBWXRCLHNGQUFzQkEsQ0FBQ3FCO1FBQ3pDLE1BQU1FLFlBQVlaLDZFQUF3QkEsQ0FBQ1csV0FBV1IsZUFBZVUsY0FBYyxFQUFFO1FBQ3JGLEtBQUssQ0FBQ0Q7UUFDTixJQUFJLENBQUNFLE1BQU0sR0FBR0Y7UUFDZCxJQUFJLENBQUNHLGVBQWUsQ0FBQ0MsR0FBRyxDQUFDdkIsd0VBQWNBLENBQUMsSUFBSSxDQUFDcUIsTUFBTTtRQUNuRCxJQUFJLENBQUNDLGVBQWUsQ0FBQ0MsR0FBRyxDQUFDekIseUZBQXNCQSxDQUFDLElBQUksQ0FBQ3VCLE1BQU07UUFDM0QsSUFBSSxDQUFDQyxlQUFlLENBQUNDLEdBQUcsQ0FBQ2xDLG9GQUFtQkEsQ0FBQyxJQUFJLENBQUNnQyxNQUFNO1FBQ3hELElBQUksQ0FBQ0MsZUFBZSxDQUFDQyxHQUFHLENBQUNoQywyRUFBZUEsQ0FBQyxJQUFJLENBQUM4QixNQUFNO1FBQ3BELElBQUksQ0FBQ0MsZUFBZSxDQUFDQyxHQUFHLENBQUMvQixvR0FBMkJBLENBQUMsSUFBSSxDQUFDNkIsTUFBTTtRQUNoRSxJQUFJLENBQUNDLGVBQWUsQ0FBQ0MsR0FBRyxDQUFDOUIsNkVBQWdCQSxDQUFDLElBQUksQ0FBQzRCLE1BQU07UUFDckQsSUFBSSxDQUFDQyxlQUFlLENBQUNDLEdBQUcsQ0FBQzVCLGtGQUFrQkEsQ0FBQyxJQUFJLENBQUMwQixNQUFNO0lBQzNEO0lBQ0FHLFVBQVU7UUFDTixLQUFLLENBQUNBO0lBQ1Y7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQGF3cy1zZGsrY2xpZW50LXNzbUAzLjQ1MS4wL25vZGVfbW9kdWxlcy9AYXdzLXNkay9jbGllbnQtc3NtL2Rpc3QtZXMvU1NNQ2xpZW50LmpzPzFkMTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0SG9zdEhlYWRlclBsdWdpbiwgcmVzb2x2ZUhvc3RIZWFkZXJDb25maWcsIH0gZnJvbSBcIkBhd3Mtc2RrL21pZGRsZXdhcmUtaG9zdC1oZWFkZXJcIjtcbmltcG9ydCB7IGdldExvZ2dlclBsdWdpbiB9IGZyb20gXCJAYXdzLXNkay9taWRkbGV3YXJlLWxvZ2dlclwiO1xuaW1wb3J0IHsgZ2V0UmVjdXJzaW9uRGV0ZWN0aW9uUGx1Z2luIH0gZnJvbSBcIkBhd3Mtc2RrL21pZGRsZXdhcmUtcmVjdXJzaW9uLWRldGVjdGlvblwiO1xuaW1wb3J0IHsgZ2V0QXdzQXV0aFBsdWdpbiwgcmVzb2x2ZUF3c0F1dGhDb25maWcsIH0gZnJvbSBcIkBhd3Mtc2RrL21pZGRsZXdhcmUtc2lnbmluZ1wiO1xuaW1wb3J0IHsgZ2V0VXNlckFnZW50UGx1Z2luLCByZXNvbHZlVXNlckFnZW50Q29uZmlnLCB9IGZyb20gXCJAYXdzLXNkay9taWRkbGV3YXJlLXVzZXItYWdlbnRcIjtcbmltcG9ydCB7IHJlc29sdmVSZWdpb25Db25maWcgfSBmcm9tIFwiQHNtaXRoeS9jb25maWctcmVzb2x2ZXJcIjtcbmltcG9ydCB7IGdldENvbnRlbnRMZW5ndGhQbHVnaW4gfSBmcm9tIFwiQHNtaXRoeS9taWRkbGV3YXJlLWNvbnRlbnQtbGVuZ3RoXCI7XG5pbXBvcnQgeyByZXNvbHZlRW5kcG9pbnRDb25maWcgfSBmcm9tIFwiQHNtaXRoeS9taWRkbGV3YXJlLWVuZHBvaW50XCI7XG5pbXBvcnQgeyBnZXRSZXRyeVBsdWdpbiwgcmVzb2x2ZVJldHJ5Q29uZmlnIH0gZnJvbSBcIkBzbWl0aHkvbWlkZGxld2FyZS1yZXRyeVwiO1xuaW1wb3J0IHsgQ2xpZW50IGFzIF9fQ2xpZW50LCB9IGZyb20gXCJAc21pdGh5L3NtaXRoeS1jbGllbnRcIjtcbmltcG9ydCB7IHJlc29sdmVDbGllbnRFbmRwb2ludFBhcmFtZXRlcnMsIH0gZnJvbSBcIi4vZW5kcG9pbnQvRW5kcG9pbnRQYXJhbWV0ZXJzXCI7XG5pbXBvcnQgeyBnZXRSdW50aW1lQ29uZmlnIGFzIF9fZ2V0UnVudGltZUNvbmZpZyB9IGZyb20gXCIuL3J1bnRpbWVDb25maWdcIjtcbmltcG9ydCB7IHJlc29sdmVSdW50aW1lRXh0ZW5zaW9ucyB9IGZyb20gXCIuL3J1bnRpbWVFeHRlbnNpb25zXCI7XG5leHBvcnQgeyBfX0NsaWVudCB9O1xuZXhwb3J0IGNsYXNzIFNTTUNsaWVudCBleHRlbmRzIF9fQ2xpZW50IHtcbiAgICBjb25zdHJ1Y3RvciguLi5bY29uZmlndXJhdGlvbl0pIHtcbiAgICAgICAgY29uc3QgX2NvbmZpZ18wID0gX19nZXRSdW50aW1lQ29uZmlnKGNvbmZpZ3VyYXRpb24gfHwge30pO1xuICAgICAgICBjb25zdCBfY29uZmlnXzEgPSByZXNvbHZlQ2xpZW50RW5kcG9pbnRQYXJhbWV0ZXJzKF9jb25maWdfMCk7XG4gICAgICAgIGNvbnN0IF9jb25maWdfMiA9IHJlc29sdmVSZWdpb25Db25maWcoX2NvbmZpZ18xKTtcbiAgICAgICAgY29uc3QgX2NvbmZpZ18zID0gcmVzb2x2ZUVuZHBvaW50Q29uZmlnKF9jb25maWdfMik7XG4gICAgICAgIGNvbnN0IF9jb25maWdfNCA9IHJlc29sdmVSZXRyeUNvbmZpZyhfY29uZmlnXzMpO1xuICAgICAgICBjb25zdCBfY29uZmlnXzUgPSByZXNvbHZlSG9zdEhlYWRlckNvbmZpZyhfY29uZmlnXzQpO1xuICAgICAgICBjb25zdCBfY29uZmlnXzYgPSByZXNvbHZlQXdzQXV0aENvbmZpZyhfY29uZmlnXzUpO1xuICAgICAgICBjb25zdCBfY29uZmlnXzcgPSByZXNvbHZlVXNlckFnZW50Q29uZmlnKF9jb25maWdfNik7XG4gICAgICAgIGNvbnN0IF9jb25maWdfOCA9IHJlc29sdmVSdW50aW1lRXh0ZW5zaW9ucyhfY29uZmlnXzcsIGNvbmZpZ3VyYXRpb24/LmV4dGVuc2lvbnMgfHwgW10pO1xuICAgICAgICBzdXBlcihfY29uZmlnXzgpO1xuICAgICAgICB0aGlzLmNvbmZpZyA9IF9jb25maWdfODtcbiAgICAgICAgdGhpcy5taWRkbGV3YXJlU3RhY2sudXNlKGdldFJldHJ5UGx1Z2luKHRoaXMuY29uZmlnKSk7XG4gICAgICAgIHRoaXMubWlkZGxld2FyZVN0YWNrLnVzZShnZXRDb250ZW50TGVuZ3RoUGx1Z2luKHRoaXMuY29uZmlnKSk7XG4gICAgICAgIHRoaXMubWlkZGxld2FyZVN0YWNrLnVzZShnZXRIb3N0SGVhZGVyUGx1Z2luKHRoaXMuY29uZmlnKSk7XG4gICAgICAgIHRoaXMubWlkZGxld2FyZVN0YWNrLnVzZShnZXRMb2dnZXJQbHVnaW4odGhpcy5jb25maWcpKTtcbiAgICAgICAgdGhpcy5taWRkbGV3YXJlU3RhY2sudXNlKGdldFJlY3Vyc2lvbkRldGVjdGlvblBsdWdpbih0aGlzLmNvbmZpZykpO1xuICAgICAgICB0aGlzLm1pZGRsZXdhcmVTdGFjay51c2UoZ2V0QXdzQXV0aFBsdWdpbih0aGlzLmNvbmZpZykpO1xuICAgICAgICB0aGlzLm1pZGRsZXdhcmVTdGFjay51c2UoZ2V0VXNlckFnZW50UGx1Z2luKHRoaXMuY29uZmlnKSk7XG4gICAgfVxuICAgIGRlc3Ryb3koKSB7XG4gICAgICAgIHN1cGVyLmRlc3Ryb3koKTtcbiAgICB9XG59XG4iXSwibmFtZXMiOlsiZ2V0SG9zdEhlYWRlclBsdWdpbiIsInJlc29sdmVIb3N0SGVhZGVyQ29uZmlnIiwiZ2V0TG9nZ2VyUGx1Z2luIiwiZ2V0UmVjdXJzaW9uRGV0ZWN0aW9uUGx1Z2luIiwiZ2V0QXdzQXV0aFBsdWdpbiIsInJlc29sdmVBd3NBdXRoQ29uZmlnIiwiZ2V0VXNlckFnZW50UGx1Z2luIiwicmVzb2x2ZVVzZXJBZ2VudENvbmZpZyIsInJlc29sdmVSZWdpb25Db25maWciLCJnZXRDb250ZW50TGVuZ3RoUGx1Z2luIiwicmVzb2x2ZUVuZHBvaW50Q29uZmlnIiwiZ2V0UmV0cnlQbHVnaW4iLCJyZXNvbHZlUmV0cnlDb25maWciLCJDbGllbnQiLCJfX0NsaWVudCIsInJlc29sdmVDbGllbnRFbmRwb2ludFBhcmFtZXRlcnMiLCJnZXRSdW50aW1lQ29uZmlnIiwiX19nZXRSdW50aW1lQ29uZmlnIiwicmVzb2x2ZVJ1bnRpbWVFeHRlbnNpb25zIiwiU1NNQ2xpZW50IiwiY29uc3RydWN0b3IiLCJjb25maWd1cmF0aW9uIiwiX2NvbmZpZ18wIiwiX2NvbmZpZ18xIiwiX2NvbmZpZ18yIiwiX2NvbmZpZ18zIiwiX2NvbmZpZ180IiwiX2NvbmZpZ181IiwiX2NvbmZpZ182IiwiX2NvbmZpZ183IiwiX2NvbmZpZ184IiwiZXh0ZW5zaW9ucyIsImNvbmZpZyIsIm1pZGRsZXdhcmVTdGFjayIsInVzZSIsImRlc3Ryb3kiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/SSMClient.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/commands/GetParametersCommand.js":
/*!**************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/commands/GetParametersCommand.js ***!
  \**************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   $Command: () => (/* reexport safe */ _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_2__.Command),\n/* harmony export */   GetParametersCommand: () => (/* binding */ GetParametersCommand)\n/* harmony export */ });\n/* harmony import */ var _smithy_middleware_endpoint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @smithy/middleware-endpoint */ \"(rsc)/../../node_modules/.pnpm/@smithy+middleware-endpoint@2.2.0/node_modules/@smithy/middleware-endpoint/dist-es/index.js\");\n/* harmony import */ var _smithy_middleware_serde__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @smithy/middleware-serde */ \"(rsc)/../../node_modules/.pnpm/@smithy+middleware-serde@2.0.13/node_modules/@smithy/middleware-serde/dist-es/index.js\");\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @smithy/smithy-client */ \"(rsc)/../../node_modules/.pnpm/@smithy+smithy-client@2.1.15/node_modules/@smithy/smithy-client/dist-es/index.js\");\n/* harmony import */ var _smithy_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @smithy/types */ \"(rsc)/../../node_modules/.pnpm/@smithy+types@2.5.0/node_modules/@smithy/types/dist-es/index.js\");\n/* harmony import */ var _models_models_1__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../models/models_1 */ \"(rsc)/../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/models/models_1.js\");\n/* harmony import */ var _protocols_Aws_json1_1__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../protocols/Aws_json1_1 */ \"(rsc)/../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/protocols/Aws_json1_1.js\");\n\n\n\n\n\n\n\nclass GetParametersCommand extends _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_2__.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: {\n                type: \"builtInParams\",\n                name: \"useFipsEndpoint\"\n            },\n            Endpoint: {\n                type: \"builtInParams\",\n                name: \"endpoint\"\n            },\n            Region: {\n                type: \"builtInParams\",\n                name: \"region\"\n            },\n            UseDualStack: {\n                type: \"builtInParams\",\n                name: \"useDualstackEndpoint\"\n            }\n        };\n    }\n    constructor(input){\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0,_smithy_middleware_serde__WEBPACK_IMPORTED_MODULE_1__.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0,_smithy_middleware_endpoint__WEBPACK_IMPORTED_MODULE_0__.getEndpointPlugin)(configuration, GetParametersCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SSMClient\";\n        const commandName = \"GetParametersCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_)=>_,\n            outputFilterSensitiveLog: _models_models_1__WEBPACK_IMPORTED_MODULE_4__.GetParametersResultFilterSensitiveLog,\n            [_smithy_types__WEBPACK_IMPORTED_MODULE_3__.SMITHY_CONTEXT_KEY]: {\n                service: \"AmazonSSM\",\n                operation: \"GetParameters\"\n            }\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request)=>requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0,_protocols_Aws_json1_1__WEBPACK_IMPORTED_MODULE_5__.se_GetParametersCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0,_protocols_Aws_json1_1__WEBPACK_IMPORTED_MODULE_5__.de_GetParametersCommand)(output, context);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0Bhd3Mtc2RrK2NsaWVudC1zc21AMy40NTEuMC9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY2xpZW50LXNzbS9kaXN0LWVzL2NvbW1hbmRzL0dldFBhcmFtZXRlcnNDb21tYW5kLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQWdFO0FBQ047QUFDRTtBQUNSO0FBQ3VCO0FBQ2lCO0FBQ3hFO0FBQ2IsTUFBTVEsNkJBQTZCTCwwREFBUUE7SUFDOUMsT0FBT00sbUNBQW1DO1FBQ3RDLE9BQU87WUFDSEMsU0FBUztnQkFBRUMsTUFBTTtnQkFBaUJDLE1BQU07WUFBa0I7WUFDMURDLFVBQVU7Z0JBQUVGLE1BQU07Z0JBQWlCQyxNQUFNO1lBQVc7WUFDcERFLFFBQVE7Z0JBQUVILE1BQU07Z0JBQWlCQyxNQUFNO1lBQVM7WUFDaERHLGNBQWM7Z0JBQUVKLE1BQU07Z0JBQWlCQyxNQUFNO1lBQXVCO1FBQ3hFO0lBQ0o7SUFDQUksWUFBWUMsS0FBSyxDQUFFO1FBQ2YsS0FBSztRQUNMLElBQUksQ0FBQ0EsS0FBSyxHQUFHQTtJQUNqQjtJQUNBQyxrQkFBa0JDLFdBQVcsRUFBRUMsYUFBYSxFQUFFQyxPQUFPLEVBQUU7UUFDbkQsSUFBSSxDQUFDQyxlQUFlLENBQUNDLEdBQUcsQ0FBQ3RCLHdFQUFjQSxDQUFDbUIsZUFBZSxJQUFJLENBQUNJLFNBQVMsRUFBRSxJQUFJLENBQUNDLFdBQVc7UUFDdkYsSUFBSSxDQUFDSCxlQUFlLENBQUNDLEdBQUcsQ0FBQ3ZCLDhFQUFpQkEsQ0FBQ29CLGVBQWVaLHFCQUFxQkMsZ0NBQWdDO1FBQy9HLE1BQU1pQixRQUFRUCxZQUFZUSxNQUFNLENBQUMsSUFBSSxDQUFDTCxlQUFlO1FBQ3JELE1BQU0sRUFBRU0sTUFBTSxFQUFFLEdBQUdSO1FBQ25CLE1BQU1TLGFBQWE7UUFDbkIsTUFBTUMsY0FBYztRQUNwQixNQUFNQywwQkFBMEI7WUFDNUJIO1lBQ0FDO1lBQ0FDO1lBQ0FFLHlCQUF5QixDQUFDQyxJQUFNQTtZQUNoQ0MsMEJBQTBCN0IsbUZBQXFDQTtZQUMvRCxDQUFDRCw2REFBa0JBLENBQUMsRUFBRTtnQkFDbEIrQixTQUFTO2dCQUNUQyxXQUFXO1lBQ2Y7UUFDSjtRQUNBLE1BQU0sRUFBRUMsY0FBYyxFQUFFLEdBQUdqQjtRQUMzQixPQUFPTSxNQUFNWSxPQUFPLENBQUMsQ0FBQ0MsVUFBWUYsZUFBZUcsTUFBTSxDQUFDRCxRQUFRQSxPQUFPLEVBQUVsQixXQUFXLENBQUMsSUFBSVU7SUFDN0Y7SUFDQVAsVUFBVVAsS0FBSyxFQUFFd0IsT0FBTyxFQUFFO1FBQ3RCLE9BQU9sQywrRUFBdUJBLENBQUNVLE9BQU93QjtJQUMxQztJQUNBaEIsWUFBWWlCLE1BQU0sRUFBRUQsT0FBTyxFQUFFO1FBQ3pCLE9BQU9uQywrRUFBdUJBLENBQUNvQyxRQUFRRDtJQUMzQztBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9AYXdzLXNkaytjbGllbnQtc3NtQDMuNDUxLjAvbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL2NsaWVudC1zc20vZGlzdC1lcy9jb21tYW5kcy9HZXRQYXJhbWV0ZXJzQ29tbWFuZC5qcz9mN2FjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldEVuZHBvaW50UGx1Z2luIH0gZnJvbSBcIkBzbWl0aHkvbWlkZGxld2FyZS1lbmRwb2ludFwiO1xuaW1wb3J0IHsgZ2V0U2VyZGVQbHVnaW4gfSBmcm9tIFwiQHNtaXRoeS9taWRkbGV3YXJlLXNlcmRlXCI7XG5pbXBvcnQgeyBDb21tYW5kIGFzICRDb21tYW5kIH0gZnJvbSBcIkBzbWl0aHkvc21pdGh5LWNsaWVudFwiO1xuaW1wb3J0IHsgU01JVEhZX0NPTlRFWFRfS0VZLCB9IGZyb20gXCJAc21pdGh5L3R5cGVzXCI7XG5pbXBvcnQgeyBHZXRQYXJhbWV0ZXJzUmVzdWx0RmlsdGVyU2Vuc2l0aXZlTG9nIH0gZnJvbSBcIi4uL21vZGVscy9tb2RlbHNfMVwiO1xuaW1wb3J0IHsgZGVfR2V0UGFyYW1ldGVyc0NvbW1hbmQsIHNlX0dldFBhcmFtZXRlcnNDb21tYW5kIH0gZnJvbSBcIi4uL3Byb3RvY29scy9Bd3NfanNvbjFfMVwiO1xuZXhwb3J0IHsgJENvbW1hbmQgfTtcbmV4cG9ydCBjbGFzcyBHZXRQYXJhbWV0ZXJzQ29tbWFuZCBleHRlbmRzICRDb21tYW5kIHtcbiAgICBzdGF0aWMgZ2V0RW5kcG9pbnRQYXJhbWV0ZXJJbnN0cnVjdGlvbnMoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBVc2VGSVBTOiB7IHR5cGU6IFwiYnVpbHRJblBhcmFtc1wiLCBuYW1lOiBcInVzZUZpcHNFbmRwb2ludFwiIH0sXG4gICAgICAgICAgICBFbmRwb2ludDogeyB0eXBlOiBcImJ1aWx0SW5QYXJhbXNcIiwgbmFtZTogXCJlbmRwb2ludFwiIH0sXG4gICAgICAgICAgICBSZWdpb246IHsgdHlwZTogXCJidWlsdEluUGFyYW1zXCIsIG5hbWU6IFwicmVnaW9uXCIgfSxcbiAgICAgICAgICAgIFVzZUR1YWxTdGFjazogeyB0eXBlOiBcImJ1aWx0SW5QYXJhbXNcIiwgbmFtZTogXCJ1c2VEdWFsc3RhY2tFbmRwb2ludFwiIH0sXG4gICAgICAgIH07XG4gICAgfVxuICAgIGNvbnN0cnVjdG9yKGlucHV0KSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMuaW5wdXQgPSBpbnB1dDtcbiAgICB9XG4gICAgcmVzb2x2ZU1pZGRsZXdhcmUoY2xpZW50U3RhY2ssIGNvbmZpZ3VyYXRpb24sIG9wdGlvbnMpIHtcbiAgICAgICAgdGhpcy5taWRkbGV3YXJlU3RhY2sudXNlKGdldFNlcmRlUGx1Z2luKGNvbmZpZ3VyYXRpb24sIHRoaXMuc2VyaWFsaXplLCB0aGlzLmRlc2VyaWFsaXplKSk7XG4gICAgICAgIHRoaXMubWlkZGxld2FyZVN0YWNrLnVzZShnZXRFbmRwb2ludFBsdWdpbihjb25maWd1cmF0aW9uLCBHZXRQYXJhbWV0ZXJzQ29tbWFuZC5nZXRFbmRwb2ludFBhcmFtZXRlckluc3RydWN0aW9ucygpKSk7XG4gICAgICAgIGNvbnN0IHN0YWNrID0gY2xpZW50U3RhY2suY29uY2F0KHRoaXMubWlkZGxld2FyZVN0YWNrKTtcbiAgICAgICAgY29uc3QgeyBsb2dnZXIgfSA9IGNvbmZpZ3VyYXRpb247XG4gICAgICAgIGNvbnN0IGNsaWVudE5hbWUgPSBcIlNTTUNsaWVudFwiO1xuICAgICAgICBjb25zdCBjb21tYW5kTmFtZSA9IFwiR2V0UGFyYW1ldGVyc0NvbW1hbmRcIjtcbiAgICAgICAgY29uc3QgaGFuZGxlckV4ZWN1dGlvbkNvbnRleHQgPSB7XG4gICAgICAgICAgICBsb2dnZXIsXG4gICAgICAgICAgICBjbGllbnROYW1lLFxuICAgICAgICAgICAgY29tbWFuZE5hbWUsXG4gICAgICAgICAgICBpbnB1dEZpbHRlclNlbnNpdGl2ZUxvZzogKF8pID0+IF8sXG4gICAgICAgICAgICBvdXRwdXRGaWx0ZXJTZW5zaXRpdmVMb2c6IEdldFBhcmFtZXRlcnNSZXN1bHRGaWx0ZXJTZW5zaXRpdmVMb2csXG4gICAgICAgICAgICBbU01JVEhZX0NPTlRFWFRfS0VZXToge1xuICAgICAgICAgICAgICAgIHNlcnZpY2U6IFwiQW1hem9uU1NNXCIsXG4gICAgICAgICAgICAgICAgb3BlcmF0aW9uOiBcIkdldFBhcmFtZXRlcnNcIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IHsgcmVxdWVzdEhhbmRsZXIgfSA9IGNvbmZpZ3VyYXRpb247XG4gICAgICAgIHJldHVybiBzdGFjay5yZXNvbHZlKChyZXF1ZXN0KSA9PiByZXF1ZXN0SGFuZGxlci5oYW5kbGUocmVxdWVzdC5yZXF1ZXN0LCBvcHRpb25zIHx8IHt9KSwgaGFuZGxlckV4ZWN1dGlvbkNvbnRleHQpO1xuICAgIH1cbiAgICBzZXJpYWxpemUoaW5wdXQsIGNvbnRleHQpIHtcbiAgICAgICAgcmV0dXJuIHNlX0dldFBhcmFtZXRlcnNDb21tYW5kKGlucHV0LCBjb250ZXh0KTtcbiAgICB9XG4gICAgZGVzZXJpYWxpemUob3V0cHV0LCBjb250ZXh0KSB7XG4gICAgICAgIHJldHVybiBkZV9HZXRQYXJhbWV0ZXJzQ29tbWFuZChvdXRwdXQsIGNvbnRleHQpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6WyJnZXRFbmRwb2ludFBsdWdpbiIsImdldFNlcmRlUGx1Z2luIiwiQ29tbWFuZCIsIiRDb21tYW5kIiwiU01JVEhZX0NPTlRFWFRfS0VZIiwiR2V0UGFyYW1ldGVyc1Jlc3VsdEZpbHRlclNlbnNpdGl2ZUxvZyIsImRlX0dldFBhcmFtZXRlcnNDb21tYW5kIiwic2VfR2V0UGFyYW1ldGVyc0NvbW1hbmQiLCJHZXRQYXJhbWV0ZXJzQ29tbWFuZCIsImdldEVuZHBvaW50UGFyYW1ldGVySW5zdHJ1Y3Rpb25zIiwiVXNlRklQUyIsInR5cGUiLCJuYW1lIiwiRW5kcG9pbnQiLCJSZWdpb24iLCJVc2VEdWFsU3RhY2siLCJjb25zdHJ1Y3RvciIsImlucHV0IiwicmVzb2x2ZU1pZGRsZXdhcmUiLCJjbGllbnRTdGFjayIsImNvbmZpZ3VyYXRpb24iLCJvcHRpb25zIiwibWlkZGxld2FyZVN0YWNrIiwidXNlIiwic2VyaWFsaXplIiwiZGVzZXJpYWxpemUiLCJzdGFjayIsImNvbmNhdCIsImxvZ2dlciIsImNsaWVudE5hbWUiLCJjb21tYW5kTmFtZSIsImhhbmRsZXJFeGVjdXRpb25Db250ZXh0IiwiaW5wdXRGaWx0ZXJTZW5zaXRpdmVMb2ciLCJfIiwib3V0cHV0RmlsdGVyU2Vuc2l0aXZlTG9nIiwic2VydmljZSIsIm9wZXJhdGlvbiIsInJlcXVlc3RIYW5kbGVyIiwicmVzb2x2ZSIsInJlcXVlc3QiLCJoYW5kbGUiLCJjb250ZXh0Iiwib3V0cHV0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/commands/GetParametersCommand.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/endpoint/EndpointParameters.js":
/*!************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/endpoint/EndpointParameters.js ***!
  \************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   resolveClientEndpointParameters: () => (/* binding */ resolveClientEndpointParameters)\n/* harmony export */ });\nconst resolveClientEndpointParameters = (options)=>{\n    return {\n        ...options,\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        defaultSigningName: \"ssm\"\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0Bhd3Mtc2RrK2NsaWVudC1zc21AMy40NTEuMC9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY2xpZW50LXNzbS9kaXN0LWVzL2VuZHBvaW50L0VuZHBvaW50UGFyYW1ldGVycy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sTUFBTUEsa0NBQWtDLENBQUNDO0lBQzVDLE9BQU87UUFDSCxHQUFHQSxPQUFPO1FBQ1ZDLHNCQUFzQkQsUUFBUUMsb0JBQW9CLElBQUk7UUFDdERDLGlCQUFpQkYsUUFBUUUsZUFBZSxJQUFJO1FBQzVDQyxvQkFBb0I7SUFDeEI7QUFDSixFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9AYXdzLXNkaytjbGllbnQtc3NtQDMuNDUxLjAvbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL2NsaWVudC1zc20vZGlzdC1lcy9lbmRwb2ludC9FbmRwb2ludFBhcmFtZXRlcnMuanM/MGI2NyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgcmVzb2x2ZUNsaWVudEVuZHBvaW50UGFyYW1ldGVycyA9IChvcHRpb25zKSA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgdXNlRHVhbHN0YWNrRW5kcG9pbnQ6IG9wdGlvbnMudXNlRHVhbHN0YWNrRW5kcG9pbnQgPz8gZmFsc2UsXG4gICAgICAgIHVzZUZpcHNFbmRwb2ludDogb3B0aW9ucy51c2VGaXBzRW5kcG9pbnQgPz8gZmFsc2UsXG4gICAgICAgIGRlZmF1bHRTaWduaW5nTmFtZTogXCJzc21cIixcbiAgICB9O1xufTtcbiJdLCJuYW1lcyI6WyJyZXNvbHZlQ2xpZW50RW5kcG9pbnRQYXJhbWV0ZXJzIiwib3B0aW9ucyIsInVzZUR1YWxzdGFja0VuZHBvaW50IiwidXNlRmlwc0VuZHBvaW50IiwiZGVmYXVsdFNpZ25pbmdOYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/endpoint/EndpointParameters.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/endpoint/endpointResolver.js":
/*!**********************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/endpoint/endpointResolver.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultEndpointResolver: () => (/* binding */ defaultEndpointResolver)\n/* harmony export */ });\n/* harmony import */ var _smithy_util_endpoints__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @smithy/util-endpoints */ \"(rsc)/../../node_modules/.pnpm/@smithy+util-endpoints@1.0.4/node_modules/@smithy/util-endpoints/dist-es/index.js\");\n/* harmony import */ var _ruleset__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ruleset */ \"(rsc)/../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/endpoint/ruleset.js\");\n\n\nconst defaultEndpointResolver = (endpointParams, context = {})=>{\n    return (0,_smithy_util_endpoints__WEBPACK_IMPORTED_MODULE_0__.resolveEndpoint)(_ruleset__WEBPACK_IMPORTED_MODULE_1__.ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger\n    });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0Bhd3Mtc2RrK2NsaWVudC1zc21AMy40NTEuMC9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY2xpZW50LXNzbS9kaXN0LWVzL2VuZHBvaW50L2VuZHBvaW50UmVzb2x2ZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXlEO0FBQ3JCO0FBQzdCLE1BQU1FLDBCQUEwQixDQUFDQyxnQkFBZ0JDLFVBQVUsQ0FBQyxDQUFDO0lBQ2hFLE9BQU9KLHVFQUFlQSxDQUFDQyw2Q0FBT0EsRUFBRTtRQUM1QkUsZ0JBQWdCQTtRQUNoQkUsUUFBUUQsUUFBUUMsTUFBTTtJQUMxQjtBQUNKLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWIvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0Bhd3Mtc2RrK2NsaWVudC1zc21AMy40NTEuMC9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY2xpZW50LXNzbS9kaXN0LWVzL2VuZHBvaW50L2VuZHBvaW50UmVzb2x2ZXIuanM/ZDAyOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZXNvbHZlRW5kcG9pbnQgfSBmcm9tIFwiQHNtaXRoeS91dGlsLWVuZHBvaW50c1wiO1xuaW1wb3J0IHsgcnVsZVNldCB9IGZyb20gXCIuL3J1bGVzZXRcIjtcbmV4cG9ydCBjb25zdCBkZWZhdWx0RW5kcG9pbnRSZXNvbHZlciA9IChlbmRwb2ludFBhcmFtcywgY29udGV4dCA9IHt9KSA9PiB7XG4gICAgcmV0dXJuIHJlc29sdmVFbmRwb2ludChydWxlU2V0LCB7XG4gICAgICAgIGVuZHBvaW50UGFyYW1zOiBlbmRwb2ludFBhcmFtcyxcbiAgICAgICAgbG9nZ2VyOiBjb250ZXh0LmxvZ2dlcixcbiAgICB9KTtcbn07XG4iXSwibmFtZXMiOlsicmVzb2x2ZUVuZHBvaW50IiwicnVsZVNldCIsImRlZmF1bHRFbmRwb2ludFJlc29sdmVyIiwiZW5kcG9pbnRQYXJhbXMiLCJjb250ZXh0IiwibG9nZ2VyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/endpoint/endpointResolver.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/endpoint/ruleset.js":
/*!*************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/endpoint/ruleset.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ruleSet: () => (/* binding */ ruleSet)\n/* harmony export */ });\nconst u = \"required\", v = \"fn\", w = \"argv\", x = \"ref\";\nconst a = true, b = \"isSet\", c = \"booleanEquals\", d = \"error\", e = \"endpoint\", f = \"tree\", g = \"PartitionResult\", h = \"getAttr\", i = {\n    [u]: false,\n    \"type\": \"String\"\n}, j = {\n    [u]: true,\n    \"default\": false,\n    \"type\": \"Boolean\"\n}, k = {\n    [x]: \"Endpoint\"\n}, l = {\n    [v]: c,\n    [w]: [\n        {\n            [x]: \"UseFIPS\"\n        },\n        true\n    ]\n}, m = {\n    [v]: c,\n    [w]: [\n        {\n            [x]: \"UseDualStack\"\n        },\n        true\n    ]\n}, n = {}, o = {\n    [v]: h,\n    [w]: [\n        {\n            [x]: g\n        },\n        \"supportsFIPS\"\n    ]\n}, p = {\n    [x]: g\n}, q = {\n    [v]: c,\n    [w]: [\n        true,\n        {\n            [v]: h,\n            [w]: [\n                p,\n                \"supportsDualStack\"\n            ]\n        }\n    ]\n}, r = [\n    l\n], s = [\n    m\n], t = [\n    {\n        [x]: \"Region\"\n    }\n];\nconst _data = {\n    version: \"1.0\",\n    parameters: {\n        Region: i,\n        UseDualStack: j,\n        UseFIPS: j,\n        Endpoint: i\n    },\n    rules: [\n        {\n            conditions: [\n                {\n                    [v]: b,\n                    [w]: [\n                        k\n                    ]\n                }\n            ],\n            rules: [\n                {\n                    conditions: r,\n                    error: \"Invalid Configuration: FIPS and custom endpoint are not supported\",\n                    type: d\n                },\n                {\n                    conditions: s,\n                    error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\",\n                    type: d\n                },\n                {\n                    endpoint: {\n                        url: k,\n                        properties: n,\n                        headers: n\n                    },\n                    type: e\n                }\n            ],\n            type: f\n        },\n        {\n            conditions: [\n                {\n                    [v]: b,\n                    [w]: t\n                }\n            ],\n            rules: [\n                {\n                    conditions: [\n                        {\n                            [v]: \"aws.partition\",\n                            [w]: t,\n                            assign: g\n                        }\n                    ],\n                    rules: [\n                        {\n                            conditions: [\n                                l,\n                                m\n                            ],\n                            rules: [\n                                {\n                                    conditions: [\n                                        {\n                                            [v]: c,\n                                            [w]: [\n                                                a,\n                                                o\n                                            ]\n                                        },\n                                        q\n                                    ],\n                                    rules: [\n                                        {\n                                            endpoint: {\n                                                url: \"https://ssm-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\",\n                                                properties: n,\n                                                headers: n\n                                            },\n                                            type: e\n                                        }\n                                    ],\n                                    type: f\n                                },\n                                {\n                                    error: \"FIPS and DualStack are enabled, but this partition does not support one or both\",\n                                    type: d\n                                }\n                            ],\n                            type: f\n                        },\n                        {\n                            conditions: r,\n                            rules: [\n                                {\n                                    conditions: [\n                                        {\n                                            [v]: c,\n                                            [w]: [\n                                                o,\n                                                a\n                                            ]\n                                        }\n                                    ],\n                                    rules: [\n                                        {\n                                            conditions: [\n                                                {\n                                                    [v]: \"stringEquals\",\n                                                    [w]: [\n                                                        {\n                                                            [v]: h,\n                                                            [w]: [\n                                                                p,\n                                                                \"name\"\n                                                            ]\n                                                        },\n                                                        \"aws-us-gov\"\n                                                    ]\n                                                }\n                                            ],\n                                            endpoint: {\n                                                url: \"https://ssm.{Region}.amazonaws.com\",\n                                                properties: n,\n                                                headers: n\n                                            },\n                                            type: e\n                                        },\n                                        {\n                                            endpoint: {\n                                                url: \"https://ssm-fips.{Region}.{PartitionResult#dnsSuffix}\",\n                                                properties: n,\n                                                headers: n\n                                            },\n                                            type: e\n                                        }\n                                    ],\n                                    type: f\n                                },\n                                {\n                                    error: \"FIPS is enabled but this partition does not support FIPS\",\n                                    type: d\n                                }\n                            ],\n                            type: f\n                        },\n                        {\n                            conditions: s,\n                            rules: [\n                                {\n                                    conditions: [\n                                        q\n                                    ],\n                                    rules: [\n                                        {\n                                            endpoint: {\n                                                url: \"https://ssm.{Region}.{PartitionResult#dualStackDnsSuffix}\",\n                                                properties: n,\n                                                headers: n\n                                            },\n                                            type: e\n                                        }\n                                    ],\n                                    type: f\n                                },\n                                {\n                                    error: \"DualStack is enabled but this partition does not support DualStack\",\n                                    type: d\n                                }\n                            ],\n                            type: f\n                        },\n                        {\n                            endpoint: {\n                                url: \"https://ssm.{Region}.{PartitionResult#dnsSuffix}\",\n                                properties: n,\n                                headers: n\n                            },\n                            type: e\n                        }\n                    ],\n                    type: f\n                }\n            ],\n            type: f\n        },\n        {\n            error: \"Invalid Configuration: Missing Region\",\n            type: d\n        }\n    ]\n};\nconst ruleSet = _data;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/endpoint/ruleset.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/models/SSMServiceException.js":
/*!***********************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/models/SSMServiceException.js ***!
  \***********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SSMServiceException: () => (/* binding */ SSMServiceException),\n/* harmony export */   __ServiceException: () => (/* reexport safe */ _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.ServiceException)\n/* harmony export */ });\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @smithy/smithy-client */ \"(rsc)/../../node_modules/.pnpm/@smithy+smithy-client@2.1.15/node_modules/@smithy/smithy-client/dist-es/index.js\");\n\n\nclass SSMServiceException extends _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.ServiceException {\n    constructor(options){\n        super(options);\n        Object.setPrototypeOf(this, SSMServiceException.prototype);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0Bhd3Mtc2RrK2NsaWVudC1zc21AMy40NTEuMC9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY2xpZW50LXNzbS9kaXN0LWVzL21vZGVscy9TU01TZXJ2aWNlRXhjZXB0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFnRjtBQUNsRDtBQUN2QixNQUFNRSw0QkFBNEJELG1FQUFrQkE7SUFDdkRFLFlBQVlDLE9BQU8sQ0FBRTtRQUNqQixLQUFLLENBQUNBO1FBQ05DLE9BQU9DLGNBQWMsQ0FBQyxJQUFJLEVBQUVKLG9CQUFvQkssU0FBUztJQUM3RDtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9AYXdzLXNkaytjbGllbnQtc3NtQDMuNDUxLjAvbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL2NsaWVudC1zc20vZGlzdC1lcy9tb2RlbHMvU1NNU2VydmljZUV4Y2VwdGlvbi5qcz9jZDlkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNlcnZpY2VFeGNlcHRpb24gYXMgX19TZXJ2aWNlRXhjZXB0aW9uLCB9IGZyb20gXCJAc21pdGh5L3NtaXRoeS1jbGllbnRcIjtcbmV4cG9ydCB7IF9fU2VydmljZUV4Y2VwdGlvbiB9O1xuZXhwb3J0IGNsYXNzIFNTTVNlcnZpY2VFeGNlcHRpb24gZXh0ZW5kcyBfX1NlcnZpY2VFeGNlcHRpb24ge1xuICAgIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcbiAgICAgICAgc3VwZXIob3B0aW9ucyk7XG4gICAgICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZih0aGlzLCBTU01TZXJ2aWNlRXhjZXB0aW9uLnByb3RvdHlwZSk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbIlNlcnZpY2VFeGNlcHRpb24iLCJfX1NlcnZpY2VFeGNlcHRpb24iLCJTU01TZXJ2aWNlRXhjZXB0aW9uIiwiY29uc3RydWN0b3IiLCJvcHRpb25zIiwiT2JqZWN0Iiwic2V0UHJvdG90eXBlT2YiLCJwcm90b3R5cGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/models/SSMServiceException.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/models/models_0.js":
/*!************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/models/models_0.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AlreadyExistsException: () => (/* binding */ AlreadyExistsException),\n/* harmony export */   AssociatedInstances: () => (/* binding */ AssociatedInstances),\n/* harmony export */   AssociationAlreadyExists: () => (/* binding */ AssociationAlreadyExists),\n/* harmony export */   AssociationComplianceSeverity: () => (/* binding */ AssociationComplianceSeverity),\n/* harmony export */   AssociationDescriptionFilterSensitiveLog: () => (/* binding */ AssociationDescriptionFilterSensitiveLog),\n/* harmony export */   AssociationDoesNotExist: () => (/* binding */ AssociationDoesNotExist),\n/* harmony export */   AssociationExecutionDoesNotExist: () => (/* binding */ AssociationExecutionDoesNotExist),\n/* harmony export */   AssociationExecutionFilterKey: () => (/* binding */ AssociationExecutionFilterKey),\n/* harmony export */   AssociationExecutionTargetsFilterKey: () => (/* binding */ AssociationExecutionTargetsFilterKey),\n/* harmony export */   AssociationFilterOperatorType: () => (/* binding */ AssociationFilterOperatorType),\n/* harmony export */   AssociationLimitExceeded: () => (/* binding */ AssociationLimitExceeded),\n/* harmony export */   AssociationStatusName: () => (/* binding */ AssociationStatusName),\n/* harmony export */   AssociationSyncCompliance: () => (/* binding */ AssociationSyncCompliance),\n/* harmony export */   AttachmentsSourceKey: () => (/* binding */ AttachmentsSourceKey),\n/* harmony export */   AutomationExecutionFilterKey: () => (/* binding */ AutomationExecutionFilterKey),\n/* harmony export */   AutomationExecutionNotFoundException: () => (/* binding */ AutomationExecutionNotFoundException),\n/* harmony export */   AutomationExecutionStatus: () => (/* binding */ AutomationExecutionStatus),\n/* harmony export */   AutomationSubtype: () => (/* binding */ AutomationSubtype),\n/* harmony export */   AutomationType: () => (/* binding */ AutomationType),\n/* harmony export */   CreateAssociationBatchRequestEntryFilterSensitiveLog: () => (/* binding */ CreateAssociationBatchRequestEntryFilterSensitiveLog),\n/* harmony export */   CreateAssociationBatchRequestFilterSensitiveLog: () => (/* binding */ CreateAssociationBatchRequestFilterSensitiveLog),\n/* harmony export */   CreateAssociationBatchResultFilterSensitiveLog: () => (/* binding */ CreateAssociationBatchResultFilterSensitiveLog),\n/* harmony export */   CreateAssociationRequestFilterSensitiveLog: () => (/* binding */ CreateAssociationRequestFilterSensitiveLog),\n/* harmony export */   CreateAssociationResultFilterSensitiveLog: () => (/* binding */ CreateAssociationResultFilterSensitiveLog),\n/* harmony export */   CreateMaintenanceWindowRequestFilterSensitiveLog: () => (/* binding */ CreateMaintenanceWindowRequestFilterSensitiveLog),\n/* harmony export */   CreatePatchBaselineRequestFilterSensitiveLog: () => (/* binding */ CreatePatchBaselineRequestFilterSensitiveLog),\n/* harmony export */   DescribeActivationsFilterKeys: () => (/* binding */ DescribeActivationsFilterKeys),\n/* harmony export */   DescribeAssociationResultFilterSensitiveLog: () => (/* binding */ DescribeAssociationResultFilterSensitiveLog),\n/* harmony export */   DescribeInstancePatchStatesForPatchGroupResultFilterSensitiveLog: () => (/* binding */ DescribeInstancePatchStatesForPatchGroupResultFilterSensitiveLog),\n/* harmony export */   DescribeInstancePatchStatesResultFilterSensitiveLog: () => (/* binding */ DescribeInstancePatchStatesResultFilterSensitiveLog),\n/* harmony export */   DescribeMaintenanceWindowExecutionTaskInvocationsResultFilterSensitiveLog: () => (/* binding */ DescribeMaintenanceWindowExecutionTaskInvocationsResultFilterSensitiveLog),\n/* harmony export */   DescribeMaintenanceWindowTargetsResultFilterSensitiveLog: () => (/* binding */ DescribeMaintenanceWindowTargetsResultFilterSensitiveLog),\n/* harmony export */   DescribeMaintenanceWindowsResultFilterSensitiveLog: () => (/* binding */ DescribeMaintenanceWindowsResultFilterSensitiveLog),\n/* harmony export */   DocumentAlreadyExists: () => (/* binding */ DocumentAlreadyExists),\n/* harmony export */   DocumentFormat: () => (/* binding */ DocumentFormat),\n/* harmony export */   DocumentHashType: () => (/* binding */ DocumentHashType),\n/* harmony export */   DocumentLimitExceeded: () => (/* binding */ DocumentLimitExceeded),\n/* harmony export */   DocumentParameterType: () => (/* binding */ DocumentParameterType),\n/* harmony export */   DocumentPermissionType: () => (/* binding */ DocumentPermissionType),\n/* harmony export */   DocumentStatus: () => (/* binding */ DocumentStatus),\n/* harmony export */   DocumentType: () => (/* binding */ DocumentType),\n/* harmony export */   DoesNotExistException: () => (/* binding */ DoesNotExistException),\n/* harmony export */   DuplicateInstanceId: () => (/* binding */ DuplicateInstanceId),\n/* harmony export */   ExecutionMode: () => (/* binding */ ExecutionMode),\n/* harmony export */   ExternalAlarmState: () => (/* binding */ ExternalAlarmState),\n/* harmony export */   FailedCreateAssociationFilterSensitiveLog: () => (/* binding */ FailedCreateAssociationFilterSensitiveLog),\n/* harmony export */   Fault: () => (/* binding */ Fault),\n/* harmony export */   IdempotentParameterMismatch: () => (/* binding */ IdempotentParameterMismatch),\n/* harmony export */   InstanceInformationFilterKey: () => (/* binding */ InstanceInformationFilterKey),\n/* harmony export */   InstancePatchStateFilterSensitiveLog: () => (/* binding */ InstancePatchStateFilterSensitiveLog),\n/* harmony export */   InstancePatchStateOperatorType: () => (/* binding */ InstancePatchStateOperatorType),\n/* harmony export */   InternalServerError: () => (/* binding */ InternalServerError),\n/* harmony export */   InvalidActivation: () => (/* binding */ InvalidActivation),\n/* harmony export */   InvalidActivationId: () => (/* binding */ InvalidActivationId),\n/* harmony export */   InvalidAssociationVersion: () => (/* binding */ InvalidAssociationVersion),\n/* harmony export */   InvalidCommandId: () => (/* binding */ InvalidCommandId),\n/* harmony export */   InvalidDeleteInventoryParametersException: () => (/* binding */ InvalidDeleteInventoryParametersException),\n/* harmony export */   InvalidDeletionIdException: () => (/* binding */ InvalidDeletionIdException),\n/* harmony export */   InvalidDocument: () => (/* binding */ InvalidDocument),\n/* harmony export */   InvalidDocumentContent: () => (/* binding */ InvalidDocumentContent),\n/* harmony export */   InvalidDocumentOperation: () => (/* binding */ InvalidDocumentOperation),\n/* harmony export */   InvalidDocumentSchemaVersion: () => (/* binding */ InvalidDocumentSchemaVersion),\n/* harmony export */   InvalidDocumentVersion: () => (/* binding */ InvalidDocumentVersion),\n/* harmony export */   InvalidFilter: () => (/* binding */ InvalidFilter),\n/* harmony export */   InvalidFilterKey: () => (/* binding */ InvalidFilterKey),\n/* harmony export */   InvalidFilterValue: () => (/* binding */ InvalidFilterValue),\n/* harmony export */   InvalidInstanceId: () => (/* binding */ InvalidInstanceId),\n/* harmony export */   InvalidInstanceInformationFilterValue: () => (/* binding */ InvalidInstanceInformationFilterValue),\n/* harmony export */   InvalidInventoryRequestException: () => (/* binding */ InvalidInventoryRequestException),\n/* harmony export */   InvalidNextToken: () => (/* binding */ InvalidNextToken),\n/* harmony export */   InvalidOptionException: () => (/* binding */ InvalidOptionException),\n/* harmony export */   InvalidOutputLocation: () => (/* binding */ InvalidOutputLocation),\n/* harmony export */   InvalidParameters: () => (/* binding */ InvalidParameters),\n/* harmony export */   InvalidPermissionType: () => (/* binding */ InvalidPermissionType),\n/* harmony export */   InvalidResourceId: () => (/* binding */ InvalidResourceId),\n/* harmony export */   InvalidResourceType: () => (/* binding */ InvalidResourceType),\n/* harmony export */   InvalidSchedule: () => (/* binding */ InvalidSchedule),\n/* harmony export */   InvalidTag: () => (/* binding */ InvalidTag),\n/* harmony export */   InvalidTarget: () => (/* binding */ InvalidTarget),\n/* harmony export */   InvalidTargetMaps: () => (/* binding */ InvalidTargetMaps),\n/* harmony export */   InvalidTypeNameException: () => (/* binding */ InvalidTypeNameException),\n/* harmony export */   InventoryDeletionStatus: () => (/* binding */ InventoryDeletionStatus),\n/* harmony export */   InventorySchemaDeleteOption: () => (/* binding */ InventorySchemaDeleteOption),\n/* harmony export */   MaintenanceWindowExecutionStatus: () => (/* binding */ MaintenanceWindowExecutionStatus),\n/* harmony export */   MaintenanceWindowExecutionTaskInvocationIdentityFilterSensitiveLog: () => (/* binding */ MaintenanceWindowExecutionTaskInvocationIdentityFilterSensitiveLog),\n/* harmony export */   MaintenanceWindowIdentityFilterSensitiveLog: () => (/* binding */ MaintenanceWindowIdentityFilterSensitiveLog),\n/* harmony export */   MaintenanceWindowResourceType: () => (/* binding */ MaintenanceWindowResourceType),\n/* harmony export */   MaintenanceWindowTargetFilterSensitiveLog: () => (/* binding */ MaintenanceWindowTargetFilterSensitiveLog),\n/* harmony export */   MaintenanceWindowTaskCutoffBehavior: () => (/* binding */ MaintenanceWindowTaskCutoffBehavior),\n/* harmony export */   MaintenanceWindowTaskFilterSensitiveLog: () => (/* binding */ MaintenanceWindowTaskFilterSensitiveLog),\n/* harmony export */   MaintenanceWindowTaskParameterValueExpressionFilterSensitiveLog: () => (/* binding */ MaintenanceWindowTaskParameterValueExpressionFilterSensitiveLog),\n/* harmony export */   MaintenanceWindowTaskType: () => (/* binding */ MaintenanceWindowTaskType),\n/* harmony export */   MaxDocumentSizeExceeded: () => (/* binding */ MaxDocumentSizeExceeded),\n/* harmony export */   OperatingSystem: () => (/* binding */ OperatingSystem),\n/* harmony export */   OpsItemAccessDeniedException: () => (/* binding */ OpsItemAccessDeniedException),\n/* harmony export */   OpsItemAlreadyExistsException: () => (/* binding */ OpsItemAlreadyExistsException),\n/* harmony export */   OpsItemConflictException: () => (/* binding */ OpsItemConflictException),\n/* harmony export */   OpsItemDataType: () => (/* binding */ OpsItemDataType),\n/* harmony export */   OpsItemInvalidParameterException: () => (/* binding */ OpsItemInvalidParameterException),\n/* harmony export */   OpsItemLimitExceededException: () => (/* binding */ OpsItemLimitExceededException),\n/* harmony export */   OpsItemNotFoundException: () => (/* binding */ OpsItemNotFoundException),\n/* harmony export */   OpsItemRelatedItemAlreadyExistsException: () => (/* binding */ OpsItemRelatedItemAlreadyExistsException),\n/* harmony export */   OpsMetadataAlreadyExistsException: () => (/* binding */ OpsMetadataAlreadyExistsException),\n/* harmony export */   OpsMetadataInvalidArgumentException: () => (/* binding */ OpsMetadataInvalidArgumentException),\n/* harmony export */   OpsMetadataLimitExceededException: () => (/* binding */ OpsMetadataLimitExceededException),\n/* harmony export */   OpsMetadataNotFoundException: () => (/* binding */ OpsMetadataNotFoundException),\n/* harmony export */   OpsMetadataTooManyUpdatesException: () => (/* binding */ OpsMetadataTooManyUpdatesException),\n/* harmony export */   ParameterNotFound: () => (/* binding */ ParameterNotFound),\n/* harmony export */   PatchAction: () => (/* binding */ PatchAction),\n/* harmony export */   PatchComplianceDataState: () => (/* binding */ PatchComplianceDataState),\n/* harmony export */   PatchComplianceLevel: () => (/* binding */ PatchComplianceLevel),\n/* harmony export */   PatchDeploymentStatus: () => (/* binding */ PatchDeploymentStatus),\n/* harmony export */   PatchFilterKey: () => (/* binding */ PatchFilterKey),\n/* harmony export */   PatchOperationType: () => (/* binding */ PatchOperationType),\n/* harmony export */   PatchSourceFilterSensitiveLog: () => (/* binding */ PatchSourceFilterSensitiveLog),\n/* harmony export */   PingStatus: () => (/* binding */ PingStatus),\n/* harmony export */   PlatformType: () => (/* binding */ PlatformType),\n/* harmony export */   RebootOption: () => (/* binding */ RebootOption),\n/* harmony export */   ResourceDataSyncAlreadyExistsException: () => (/* binding */ ResourceDataSyncAlreadyExistsException),\n/* harmony export */   ResourceDataSyncCountExceededException: () => (/* binding */ ResourceDataSyncCountExceededException),\n/* harmony export */   ResourceDataSyncInvalidConfigurationException: () => (/* binding */ ResourceDataSyncInvalidConfigurationException),\n/* harmony export */   ResourceDataSyncNotFoundException: () => (/* binding */ ResourceDataSyncNotFoundException),\n/* harmony export */   ResourceDataSyncS3Format: () => (/* binding */ ResourceDataSyncS3Format),\n/* harmony export */   ResourceInUseException: () => (/* binding */ ResourceInUseException),\n/* harmony export */   ResourceLimitExceededException: () => (/* binding */ ResourceLimitExceededException),\n/* harmony export */   ResourcePolicyConflictException: () => (/* binding */ ResourcePolicyConflictException),\n/* harmony export */   ResourcePolicyInvalidParameterException: () => (/* binding */ ResourcePolicyInvalidParameterException),\n/* harmony export */   ResourceType: () => (/* binding */ ResourceType),\n/* harmony export */   ResourceTypeForTagging: () => (/* binding */ ResourceTypeForTagging),\n/* harmony export */   ReviewStatus: () => (/* binding */ ReviewStatus),\n/* harmony export */   SourceType: () => (/* binding */ SourceType),\n/* harmony export */   StepExecutionFilterKey: () => (/* binding */ StepExecutionFilterKey),\n/* harmony export */   TargetInUseException: () => (/* binding */ TargetInUseException),\n/* harmony export */   TooManyTagsError: () => (/* binding */ TooManyTagsError),\n/* harmony export */   TooManyUpdates: () => (/* binding */ TooManyUpdates),\n/* harmony export */   UnsupportedOperatingSystem: () => (/* binding */ UnsupportedOperatingSystem),\n/* harmony export */   UnsupportedPlatformType: () => (/* binding */ UnsupportedPlatformType)\n/* harmony export */ });\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @smithy/smithy-client */ \"(rsc)/../../node_modules/.pnpm/@smithy+smithy-client@2.1.15/node_modules/@smithy/smithy-client/dist-es/index.js\");\n/* harmony import */ var _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SSMServiceException */ \"(rsc)/../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/models/SSMServiceException.js\");\n\n\nconst ResourceTypeForTagging = {\n    ASSOCIATION: \"Association\",\n    AUTOMATION: \"Automation\",\n    DOCUMENT: \"Document\",\n    MAINTENANCE_WINDOW: \"MaintenanceWindow\",\n    MANAGED_INSTANCE: \"ManagedInstance\",\n    OPSMETADATA: \"OpsMetadata\",\n    OPS_ITEM: \"OpsItem\",\n    PARAMETER: \"Parameter\",\n    PATCH_BASELINE: \"PatchBaseline\"\n};\nclass InternalServerError extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"InternalServerError\",\n            $fault: \"server\",\n            ...opts\n        });\n        this.name = \"InternalServerError\";\n        this.$fault = \"server\";\n        Object.setPrototypeOf(this, InternalServerError.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass InvalidResourceId extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidResourceId\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidResourceId\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidResourceId.prototype);\n    }\n}\nclass InvalidResourceType extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidResourceType\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidResourceType\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidResourceType.prototype);\n    }\n}\nclass TooManyTagsError extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"TooManyTagsError\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"TooManyTagsError\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyTagsError.prototype);\n    }\n}\nclass TooManyUpdates extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"TooManyUpdates\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"TooManyUpdates\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyUpdates.prototype);\n        this.Message = opts.Message;\n    }\n}\nconst ExternalAlarmState = {\n    ALARM: \"ALARM\",\n    UNKNOWN: \"UNKNOWN\"\n};\nclass AlreadyExistsException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"AlreadyExistsException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"AlreadyExistsException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, AlreadyExistsException.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass OpsItemConflictException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"OpsItemConflictException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"OpsItemConflictException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, OpsItemConflictException.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass OpsItemInvalidParameterException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"OpsItemInvalidParameterException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"OpsItemInvalidParameterException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, OpsItemInvalidParameterException.prototype);\n        this.ParameterNames = opts.ParameterNames;\n        this.Message = opts.Message;\n    }\n}\nclass OpsItemLimitExceededException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"OpsItemLimitExceededException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"OpsItemLimitExceededException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, OpsItemLimitExceededException.prototype);\n        this.ResourceTypes = opts.ResourceTypes;\n        this.Limit = opts.Limit;\n        this.LimitType = opts.LimitType;\n        this.Message = opts.Message;\n    }\n}\nclass OpsItemNotFoundException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"OpsItemNotFoundException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"OpsItemNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, OpsItemNotFoundException.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass OpsItemRelatedItemAlreadyExistsException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"OpsItemRelatedItemAlreadyExistsException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"OpsItemRelatedItemAlreadyExistsException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, OpsItemRelatedItemAlreadyExistsException.prototype);\n        this.Message = opts.Message;\n        this.ResourceUri = opts.ResourceUri;\n        this.OpsItemId = opts.OpsItemId;\n    }\n}\nclass DuplicateInstanceId extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"DuplicateInstanceId\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"DuplicateInstanceId\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, DuplicateInstanceId.prototype);\n    }\n}\nclass InvalidCommandId extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidCommandId\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidCommandId\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidCommandId.prototype);\n    }\n}\nclass InvalidInstanceId extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidInstanceId\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidInstanceId\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidInstanceId.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass DoesNotExistException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"DoesNotExistException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"DoesNotExistException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, DoesNotExistException.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass InvalidParameters extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidParameters\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidParameters\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidParameters.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass AssociationAlreadyExists extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"AssociationAlreadyExists\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"AssociationAlreadyExists\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, AssociationAlreadyExists.prototype);\n    }\n}\nclass AssociationLimitExceeded extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"AssociationLimitExceeded\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"AssociationLimitExceeded\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, AssociationLimitExceeded.prototype);\n    }\n}\nconst AssociationComplianceSeverity = {\n    Critical: \"CRITICAL\",\n    High: \"HIGH\",\n    Low: \"LOW\",\n    Medium: \"MEDIUM\",\n    Unspecified: \"UNSPECIFIED\"\n};\nconst AssociationSyncCompliance = {\n    Auto: \"AUTO\",\n    Manual: \"MANUAL\"\n};\nconst AssociationStatusName = {\n    Failed: \"Failed\",\n    Pending: \"Pending\",\n    Success: \"Success\"\n};\nclass InvalidDocument extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidDocument\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidDocument\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidDocument.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass InvalidDocumentVersion extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidDocumentVersion\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidDocumentVersion\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidDocumentVersion.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass InvalidOutputLocation extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidOutputLocation\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidOutputLocation\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidOutputLocation.prototype);\n    }\n}\nclass InvalidSchedule extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidSchedule\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidSchedule\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidSchedule.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass InvalidTag extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidTag\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidTag\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidTag.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass InvalidTarget extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidTarget\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidTarget\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidTarget.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass InvalidTargetMaps extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidTargetMaps\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidTargetMaps\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidTargetMaps.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass UnsupportedPlatformType extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"UnsupportedPlatformType\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"UnsupportedPlatformType\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, UnsupportedPlatformType.prototype);\n        this.Message = opts.Message;\n    }\n}\nconst Fault = {\n    Client: \"Client\",\n    Server: \"Server\",\n    Unknown: \"Unknown\"\n};\nconst AttachmentsSourceKey = {\n    AttachmentReference: \"AttachmentReference\",\n    S3FileUrl: \"S3FileUrl\",\n    SourceUrl: \"SourceUrl\"\n};\nconst DocumentFormat = {\n    JSON: \"JSON\",\n    TEXT: \"TEXT\",\n    YAML: \"YAML\"\n};\nconst DocumentType = {\n    ApplicationConfiguration: \"ApplicationConfiguration\",\n    ApplicationConfigurationSchema: \"ApplicationConfigurationSchema\",\n    Automation: \"Automation\",\n    ChangeCalendar: \"ChangeCalendar\",\n    ChangeTemplate: \"Automation.ChangeTemplate\",\n    CloudFormation: \"CloudFormation\",\n    Command: \"Command\",\n    ConformancePackTemplate: \"ConformancePackTemplate\",\n    DeploymentStrategy: \"DeploymentStrategy\",\n    Package: \"Package\",\n    Policy: \"Policy\",\n    ProblemAnalysis: \"ProblemAnalysis\",\n    ProblemAnalysisTemplate: \"ProblemAnalysisTemplate\",\n    QuickSetup: \"QuickSetup\",\n    Session: \"Session\"\n};\nconst DocumentHashType = {\n    SHA1: \"Sha1\",\n    SHA256: \"Sha256\"\n};\nconst DocumentParameterType = {\n    String: \"String\",\n    StringList: \"StringList\"\n};\nconst PlatformType = {\n    LINUX: \"Linux\",\n    MACOS: \"MacOS\",\n    WINDOWS: \"Windows\"\n};\nconst ReviewStatus = {\n    APPROVED: \"APPROVED\",\n    NOT_REVIEWED: \"NOT_REVIEWED\",\n    PENDING: \"PENDING\",\n    REJECTED: \"REJECTED\"\n};\nconst DocumentStatus = {\n    Active: \"Active\",\n    Creating: \"Creating\",\n    Deleting: \"Deleting\",\n    Failed: \"Failed\",\n    Updating: \"Updating\"\n};\nclass DocumentAlreadyExists extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"DocumentAlreadyExists\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"DocumentAlreadyExists\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, DocumentAlreadyExists.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass DocumentLimitExceeded extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"DocumentLimitExceeded\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"DocumentLimitExceeded\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, DocumentLimitExceeded.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass InvalidDocumentContent extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidDocumentContent\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidDocumentContent\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidDocumentContent.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass InvalidDocumentSchemaVersion extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidDocumentSchemaVersion\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidDocumentSchemaVersion\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidDocumentSchemaVersion.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass MaxDocumentSizeExceeded extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"MaxDocumentSizeExceeded\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"MaxDocumentSizeExceeded\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, MaxDocumentSizeExceeded.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass IdempotentParameterMismatch extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"IdempotentParameterMismatch\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"IdempotentParameterMismatch\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, IdempotentParameterMismatch.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass ResourceLimitExceededException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"ResourceLimitExceededException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"ResourceLimitExceededException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ResourceLimitExceededException.prototype);\n        this.Message = opts.Message;\n    }\n}\nconst OpsItemDataType = {\n    SEARCHABLE_STRING: \"SearchableString\",\n    STRING: \"String\"\n};\nclass OpsItemAccessDeniedException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"OpsItemAccessDeniedException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"OpsItemAccessDeniedException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, OpsItemAccessDeniedException.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass OpsItemAlreadyExistsException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"OpsItemAlreadyExistsException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"OpsItemAlreadyExistsException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, OpsItemAlreadyExistsException.prototype);\n        this.Message = opts.Message;\n        this.OpsItemId = opts.OpsItemId;\n    }\n}\nclass OpsMetadataAlreadyExistsException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"OpsMetadataAlreadyExistsException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"OpsMetadataAlreadyExistsException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, OpsMetadataAlreadyExistsException.prototype);\n    }\n}\nclass OpsMetadataInvalidArgumentException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"OpsMetadataInvalidArgumentException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"OpsMetadataInvalidArgumentException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, OpsMetadataInvalidArgumentException.prototype);\n    }\n}\nclass OpsMetadataLimitExceededException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"OpsMetadataLimitExceededException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"OpsMetadataLimitExceededException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, OpsMetadataLimitExceededException.prototype);\n    }\n}\nclass OpsMetadataTooManyUpdatesException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"OpsMetadataTooManyUpdatesException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"OpsMetadataTooManyUpdatesException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, OpsMetadataTooManyUpdatesException.prototype);\n    }\n}\nconst PatchComplianceLevel = {\n    Critical: \"CRITICAL\",\n    High: \"HIGH\",\n    Informational: \"INFORMATIONAL\",\n    Low: \"LOW\",\n    Medium: \"MEDIUM\",\n    Unspecified: \"UNSPECIFIED\"\n};\nconst PatchFilterKey = {\n    AdvisoryId: \"ADVISORY_ID\",\n    Arch: \"ARCH\",\n    BugzillaId: \"BUGZILLA_ID\",\n    CVEId: \"CVE_ID\",\n    Classification: \"CLASSIFICATION\",\n    Epoch: \"EPOCH\",\n    MsrcSeverity: \"MSRC_SEVERITY\",\n    Name: \"NAME\",\n    PatchId: \"PATCH_ID\",\n    PatchSet: \"PATCH_SET\",\n    Priority: \"PRIORITY\",\n    Product: \"PRODUCT\",\n    ProductFamily: \"PRODUCT_FAMILY\",\n    Release: \"RELEASE\",\n    Repository: \"REPOSITORY\",\n    Section: \"SECTION\",\n    Security: \"SECURITY\",\n    Severity: \"SEVERITY\",\n    Version: \"VERSION\"\n};\nconst OperatingSystem = {\n    AlmaLinux: \"ALMA_LINUX\",\n    AmazonLinux: \"AMAZON_LINUX\",\n    AmazonLinux2: \"AMAZON_LINUX_2\",\n    AmazonLinux2022: \"AMAZON_LINUX_2022\",\n    AmazonLinux2023: \"AMAZON_LINUX_2023\",\n    CentOS: \"CENTOS\",\n    Debian: \"DEBIAN\",\n    MacOS: \"MACOS\",\n    OracleLinux: \"ORACLE_LINUX\",\n    Raspbian: \"RASPBIAN\",\n    RedhatEnterpriseLinux: \"REDHAT_ENTERPRISE_LINUX\",\n    Rocky_Linux: \"ROCKY_LINUX\",\n    Suse: \"SUSE\",\n    Ubuntu: \"UBUNTU\",\n    Windows: \"WINDOWS\"\n};\nconst PatchAction = {\n    AllowAsDependency: \"ALLOW_AS_DEPENDENCY\",\n    Block: \"BLOCK\"\n};\nconst ResourceDataSyncS3Format = {\n    JSON_SERDE: \"JsonSerDe\"\n};\nclass ResourceDataSyncAlreadyExistsException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"ResourceDataSyncAlreadyExistsException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"ResourceDataSyncAlreadyExistsException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ResourceDataSyncAlreadyExistsException.prototype);\n        this.SyncName = opts.SyncName;\n    }\n}\nclass ResourceDataSyncCountExceededException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"ResourceDataSyncCountExceededException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"ResourceDataSyncCountExceededException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ResourceDataSyncCountExceededException.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass ResourceDataSyncInvalidConfigurationException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"ResourceDataSyncInvalidConfigurationException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"ResourceDataSyncInvalidConfigurationException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ResourceDataSyncInvalidConfigurationException.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass InvalidActivation extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidActivation\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidActivation\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidActivation.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass InvalidActivationId extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidActivationId\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidActivationId\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidActivationId.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass AssociationDoesNotExist extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"AssociationDoesNotExist\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"AssociationDoesNotExist\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, AssociationDoesNotExist.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass AssociatedInstances extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"AssociatedInstances\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"AssociatedInstances\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, AssociatedInstances.prototype);\n    }\n}\nclass InvalidDocumentOperation extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidDocumentOperation\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidDocumentOperation\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidDocumentOperation.prototype);\n        this.Message = opts.Message;\n    }\n}\nconst InventorySchemaDeleteOption = {\n    DELETE_SCHEMA: \"DeleteSchema\",\n    DISABLE_SCHEMA: \"DisableSchema\"\n};\nclass InvalidDeleteInventoryParametersException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidDeleteInventoryParametersException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidDeleteInventoryParametersException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidDeleteInventoryParametersException.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass InvalidInventoryRequestException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidInventoryRequestException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidInventoryRequestException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidInventoryRequestException.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass InvalidOptionException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidOptionException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidOptionException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidOptionException.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass InvalidTypeNameException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidTypeNameException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidTypeNameException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidTypeNameException.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass OpsMetadataNotFoundException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"OpsMetadataNotFoundException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"OpsMetadataNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, OpsMetadataNotFoundException.prototype);\n    }\n}\nclass ParameterNotFound extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"ParameterNotFound\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"ParameterNotFound\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ParameterNotFound.prototype);\n    }\n}\nclass ResourceInUseException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"ResourceInUseException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"ResourceInUseException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ResourceInUseException.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass ResourceDataSyncNotFoundException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"ResourceDataSyncNotFoundException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"ResourceDataSyncNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ResourceDataSyncNotFoundException.prototype);\n        this.SyncName = opts.SyncName;\n        this.SyncType = opts.SyncType;\n        this.Message = opts.Message;\n    }\n}\nclass ResourcePolicyConflictException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"ResourcePolicyConflictException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"ResourcePolicyConflictException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ResourcePolicyConflictException.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass ResourcePolicyInvalidParameterException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"ResourcePolicyInvalidParameterException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"ResourcePolicyInvalidParameterException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ResourcePolicyInvalidParameterException.prototype);\n        this.ParameterNames = opts.ParameterNames;\n        this.Message = opts.Message;\n    }\n}\nclass TargetInUseException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"TargetInUseException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"TargetInUseException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TargetInUseException.prototype);\n        this.Message = opts.Message;\n    }\n}\nconst DescribeActivationsFilterKeys = {\n    ACTIVATION_IDS: \"ActivationIds\",\n    DEFAULT_INSTANCE_NAME: \"DefaultInstanceName\",\n    IAM_ROLE: \"IamRole\"\n};\nclass InvalidFilter extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidFilter\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidFilter\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidFilter.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass InvalidNextToken extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidNextToken\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidNextToken\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidNextToken.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass InvalidAssociationVersion extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidAssociationVersion\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidAssociationVersion\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidAssociationVersion.prototype);\n        this.Message = opts.Message;\n    }\n}\nconst AssociationExecutionFilterKey = {\n    CreatedTime: \"CreatedTime\",\n    ExecutionId: \"ExecutionId\",\n    Status: \"Status\"\n};\nconst AssociationFilterOperatorType = {\n    Equal: \"EQUAL\",\n    GreaterThan: \"GREATER_THAN\",\n    LessThan: \"LESS_THAN\"\n};\nclass AssociationExecutionDoesNotExist extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"AssociationExecutionDoesNotExist\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"AssociationExecutionDoesNotExist\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, AssociationExecutionDoesNotExist.prototype);\n        this.Message = opts.Message;\n    }\n}\nconst AssociationExecutionTargetsFilterKey = {\n    ResourceId: \"ResourceId\",\n    ResourceType: \"ResourceType\",\n    Status: \"Status\"\n};\nconst AutomationExecutionFilterKey = {\n    AUTOMATION_SUBTYPE: \"AutomationSubtype\",\n    AUTOMATION_TYPE: \"AutomationType\",\n    CURRENT_ACTION: \"CurrentAction\",\n    DOCUMENT_NAME_PREFIX: \"DocumentNamePrefix\",\n    EXECUTION_ID: \"ExecutionId\",\n    EXECUTION_STATUS: \"ExecutionStatus\",\n    OPS_ITEM_ID: \"OpsItemId\",\n    PARENT_EXECUTION_ID: \"ParentExecutionId\",\n    START_TIME_AFTER: \"StartTimeAfter\",\n    START_TIME_BEFORE: \"StartTimeBefore\",\n    TAG_KEY: \"TagKey\",\n    TARGET_RESOURCE_GROUP: \"TargetResourceGroup\"\n};\nconst AutomationExecutionStatus = {\n    APPROVED: \"Approved\",\n    CANCELLED: \"Cancelled\",\n    CANCELLING: \"Cancelling\",\n    CHANGE_CALENDAR_OVERRIDE_APPROVED: \"ChangeCalendarOverrideApproved\",\n    CHANGE_CALENDAR_OVERRIDE_REJECTED: \"ChangeCalendarOverrideRejected\",\n    COMPLETED_WITH_FAILURE: \"CompletedWithFailure\",\n    COMPLETED_WITH_SUCCESS: \"CompletedWithSuccess\",\n    FAILED: \"Failed\",\n    INPROGRESS: \"InProgress\",\n    PENDING: \"Pending\",\n    PENDING_APPROVAL: \"PendingApproval\",\n    PENDING_CHANGE_CALENDAR_OVERRIDE: \"PendingChangeCalendarOverride\",\n    REJECTED: \"Rejected\",\n    RUNBOOK_INPROGRESS: \"RunbookInProgress\",\n    SCHEDULED: \"Scheduled\",\n    SUCCESS: \"Success\",\n    TIMEDOUT: \"TimedOut\",\n    WAITING: \"Waiting\"\n};\nconst AutomationSubtype = {\n    ChangeRequest: \"ChangeRequest\"\n};\nconst AutomationType = {\n    CrossAccount: \"CrossAccount\",\n    Local: \"Local\"\n};\nconst ExecutionMode = {\n    Auto: \"Auto\",\n    Interactive: \"Interactive\"\n};\nclass InvalidFilterKey extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidFilterKey\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidFilterKey\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidFilterKey.prototype);\n    }\n}\nclass InvalidFilterValue extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidFilterValue\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidFilterValue\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidFilterValue.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass AutomationExecutionNotFoundException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"AutomationExecutionNotFoundException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"AutomationExecutionNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, AutomationExecutionNotFoundException.prototype);\n        this.Message = opts.Message;\n    }\n}\nconst StepExecutionFilterKey = {\n    ACTION: \"Action\",\n    START_TIME_AFTER: \"StartTimeAfter\",\n    START_TIME_BEFORE: \"StartTimeBefore\",\n    STEP_EXECUTION_ID: \"StepExecutionId\",\n    STEP_EXECUTION_STATUS: \"StepExecutionStatus\",\n    STEP_NAME: \"StepName\"\n};\nconst DocumentPermissionType = {\n    SHARE: \"Share\"\n};\nclass InvalidPermissionType extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidPermissionType\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidPermissionType\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidPermissionType.prototype);\n        this.Message = opts.Message;\n    }\n}\nconst PatchDeploymentStatus = {\n    Approved: \"APPROVED\",\n    ExplicitApproved: \"EXPLICIT_APPROVED\",\n    ExplicitRejected: \"EXPLICIT_REJECTED\",\n    PendingApproval: \"PENDING_APPROVAL\"\n};\nclass UnsupportedOperatingSystem extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"UnsupportedOperatingSystem\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"UnsupportedOperatingSystem\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, UnsupportedOperatingSystem.prototype);\n        this.Message = opts.Message;\n    }\n}\nconst InstanceInformationFilterKey = {\n    ACTIVATION_IDS: \"ActivationIds\",\n    AGENT_VERSION: \"AgentVersion\",\n    ASSOCIATION_STATUS: \"AssociationStatus\",\n    IAM_ROLE: \"IamRole\",\n    INSTANCE_IDS: \"InstanceIds\",\n    PING_STATUS: \"PingStatus\",\n    PLATFORM_TYPES: \"PlatformTypes\",\n    RESOURCE_TYPE: \"ResourceType\"\n};\nconst PingStatus = {\n    CONNECTION_LOST: \"ConnectionLost\",\n    INACTIVE: \"Inactive\",\n    ONLINE: \"Online\"\n};\nconst ResourceType = {\n    EC2_INSTANCE: \"EC2Instance\",\n    MANAGED_INSTANCE: \"ManagedInstance\"\n};\nconst SourceType = {\n    AWS_EC2_INSTANCE: \"AWS::EC2::Instance\",\n    AWS_IOT_THING: \"AWS::IoT::Thing\",\n    AWS_SSM_MANAGEDINSTANCE: \"AWS::SSM::ManagedInstance\"\n};\nclass InvalidInstanceInformationFilterValue extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidInstanceInformationFilterValue\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidInstanceInformationFilterValue\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidInstanceInformationFilterValue.prototype);\n    }\n}\nconst PatchComplianceDataState = {\n    Failed: \"FAILED\",\n    Installed: \"INSTALLED\",\n    InstalledOther: \"INSTALLED_OTHER\",\n    InstalledPendingReboot: \"INSTALLED_PENDING_REBOOT\",\n    InstalledRejected: \"INSTALLED_REJECTED\",\n    Missing: \"MISSING\",\n    NotApplicable: \"NOT_APPLICABLE\"\n};\nconst PatchOperationType = {\n    INSTALL: \"Install\",\n    SCAN: \"Scan\"\n};\nconst RebootOption = {\n    NO_REBOOT: \"NoReboot\",\n    REBOOT_IF_NEEDED: \"RebootIfNeeded\"\n};\nconst InstancePatchStateOperatorType = {\n    EQUAL: \"Equal\",\n    GREATER_THAN: \"GreaterThan\",\n    LESS_THAN: \"LessThan\",\n    NOT_EQUAL: \"NotEqual\"\n};\nconst InventoryDeletionStatus = {\n    COMPLETE: \"Complete\",\n    IN_PROGRESS: \"InProgress\"\n};\nclass InvalidDeletionIdException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidDeletionIdException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidDeletionIdException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidDeletionIdException.prototype);\n        this.Message = opts.Message;\n    }\n}\nconst MaintenanceWindowExecutionStatus = {\n    Cancelled: \"CANCELLED\",\n    Cancelling: \"CANCELLING\",\n    Failed: \"FAILED\",\n    InProgress: \"IN_PROGRESS\",\n    Pending: \"PENDING\",\n    SkippedOverlapping: \"SKIPPED_OVERLAPPING\",\n    Success: \"SUCCESS\",\n    TimedOut: \"TIMED_OUT\"\n};\nconst MaintenanceWindowTaskType = {\n    Automation: \"AUTOMATION\",\n    Lambda: \"LAMBDA\",\n    RunCommand: \"RUN_COMMAND\",\n    StepFunctions: \"STEP_FUNCTIONS\"\n};\nconst MaintenanceWindowResourceType = {\n    Instance: \"INSTANCE\",\n    ResourceGroup: \"RESOURCE_GROUP\"\n};\nconst MaintenanceWindowTaskCutoffBehavior = {\n    CancelTask: \"CANCEL_TASK\",\n    ContinueTask: \"CONTINUE_TASK\"\n};\nconst CreateAssociationRequestFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.Parameters && {\n            Parameters: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        }\n    });\nconst AssociationDescriptionFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.Parameters && {\n            Parameters: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        }\n    });\nconst CreateAssociationResultFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.AssociationDescription && {\n            AssociationDescription: AssociationDescriptionFilterSensitiveLog(obj.AssociationDescription)\n        }\n    });\nconst CreateAssociationBatchRequestEntryFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.Parameters && {\n            Parameters: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        }\n    });\nconst CreateAssociationBatchRequestFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.Entries && {\n            Entries: obj.Entries.map((item)=>CreateAssociationBatchRequestEntryFilterSensitiveLog(item))\n        }\n    });\nconst FailedCreateAssociationFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.Entry && {\n            Entry: CreateAssociationBatchRequestEntryFilterSensitiveLog(obj.Entry)\n        }\n    });\nconst CreateAssociationBatchResultFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.Successful && {\n            Successful: obj.Successful.map((item)=>AssociationDescriptionFilterSensitiveLog(item))\n        },\n        ...obj.Failed && {\n            Failed: obj.Failed.map((item)=>FailedCreateAssociationFilterSensitiveLog(item))\n        }\n    });\nconst CreateMaintenanceWindowRequestFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.Description && {\n            Description: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        }\n    });\nconst PatchSourceFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.Configuration && {\n            Configuration: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        }\n    });\nconst CreatePatchBaselineRequestFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.Sources && {\n            Sources: obj.Sources.map((item)=>PatchSourceFilterSensitiveLog(item))\n        }\n    });\nconst DescribeAssociationResultFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.AssociationDescription && {\n            AssociationDescription: AssociationDescriptionFilterSensitiveLog(obj.AssociationDescription)\n        }\n    });\nconst InstancePatchStateFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.OwnerInformation && {\n            OwnerInformation: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        }\n    });\nconst DescribeInstancePatchStatesResultFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.InstancePatchStates && {\n            InstancePatchStates: obj.InstancePatchStates.map((item)=>InstancePatchStateFilterSensitiveLog(item))\n        }\n    });\nconst DescribeInstancePatchStatesForPatchGroupResultFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.InstancePatchStates && {\n            InstancePatchStates: obj.InstancePatchStates.map((item)=>InstancePatchStateFilterSensitiveLog(item))\n        }\n    });\nconst MaintenanceWindowExecutionTaskInvocationIdentityFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.Parameters && {\n            Parameters: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        },\n        ...obj.OwnerInformation && {\n            OwnerInformation: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        }\n    });\nconst DescribeMaintenanceWindowExecutionTaskInvocationsResultFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.WindowExecutionTaskInvocationIdentities && {\n            WindowExecutionTaskInvocationIdentities: obj.WindowExecutionTaskInvocationIdentities.map((item)=>MaintenanceWindowExecutionTaskInvocationIdentityFilterSensitiveLog(item))\n        }\n    });\nconst MaintenanceWindowIdentityFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.Description && {\n            Description: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        }\n    });\nconst DescribeMaintenanceWindowsResultFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.WindowIdentities && {\n            WindowIdentities: obj.WindowIdentities.map((item)=>MaintenanceWindowIdentityFilterSensitiveLog(item))\n        }\n    });\nconst MaintenanceWindowTargetFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.OwnerInformation && {\n            OwnerInformation: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        },\n        ...obj.Description && {\n            Description: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        }\n    });\nconst DescribeMaintenanceWindowTargetsResultFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.Targets && {\n            Targets: obj.Targets.map((item)=>MaintenanceWindowTargetFilterSensitiveLog(item))\n        }\n    });\nconst MaintenanceWindowTaskParameterValueExpressionFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.Values && {\n            Values: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        }\n    });\nconst MaintenanceWindowTaskFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.TaskParameters && {\n            TaskParameters: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        },\n        ...obj.Description && {\n            Description: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        }\n    });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/models/models_0.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/models/models_1.js":
/*!************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/models/models_1.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AssociationFilterKey: () => (/* binding */ AssociationFilterKey),\n/* harmony export */   AssociationVersionInfoFilterSensitiveLog: () => (/* binding */ AssociationVersionInfoFilterSensitiveLog),\n/* harmony export */   AttachmentHashType: () => (/* binding */ AttachmentHashType),\n/* harmony export */   AutomationDefinitionNotApprovedException: () => (/* binding */ AutomationDefinitionNotApprovedException),\n/* harmony export */   AutomationDefinitionNotFoundException: () => (/* binding */ AutomationDefinitionNotFoundException),\n/* harmony export */   AutomationDefinitionVersionNotFoundException: () => (/* binding */ AutomationDefinitionVersionNotFoundException),\n/* harmony export */   AutomationExecutionLimitExceededException: () => (/* binding */ AutomationExecutionLimitExceededException),\n/* harmony export */   AutomationStepNotFoundException: () => (/* binding */ AutomationStepNotFoundException),\n/* harmony export */   BaselineOverrideFilterSensitiveLog: () => (/* binding */ BaselineOverrideFilterSensitiveLog),\n/* harmony export */   CalendarState: () => (/* binding */ CalendarState),\n/* harmony export */   CommandFilterKey: () => (/* binding */ CommandFilterKey),\n/* harmony export */   CommandFilterSensitiveLog: () => (/* binding */ CommandFilterSensitiveLog),\n/* harmony export */   CommandInvocationStatus: () => (/* binding */ CommandInvocationStatus),\n/* harmony export */   CommandPluginStatus: () => (/* binding */ CommandPluginStatus),\n/* harmony export */   CommandStatus: () => (/* binding */ CommandStatus),\n/* harmony export */   ComplianceQueryOperatorType: () => (/* binding */ ComplianceQueryOperatorType),\n/* harmony export */   ComplianceSeverity: () => (/* binding */ ComplianceSeverity),\n/* harmony export */   ComplianceStatus: () => (/* binding */ ComplianceStatus),\n/* harmony export */   ComplianceTypeCountLimitExceededException: () => (/* binding */ ComplianceTypeCountLimitExceededException),\n/* harmony export */   ComplianceUploadType: () => (/* binding */ ComplianceUploadType),\n/* harmony export */   ConnectionStatus: () => (/* binding */ ConnectionStatus),\n/* harmony export */   CustomSchemaCountLimitExceededException: () => (/* binding */ CustomSchemaCountLimitExceededException),\n/* harmony export */   DescribeMaintenanceWindowTasksResultFilterSensitiveLog: () => (/* binding */ DescribeMaintenanceWindowTasksResultFilterSensitiveLog),\n/* harmony export */   DocumentFilterKey: () => (/* binding */ DocumentFilterKey),\n/* harmony export */   DocumentMetadataEnum: () => (/* binding */ DocumentMetadataEnum),\n/* harmony export */   DocumentPermissionLimit: () => (/* binding */ DocumentPermissionLimit),\n/* harmony export */   DocumentReviewCommentType: () => (/* binding */ DocumentReviewCommentType),\n/* harmony export */   FeatureNotAvailableException: () => (/* binding */ FeatureNotAvailableException),\n/* harmony export */   GetDeployablePatchSnapshotForInstanceRequestFilterSensitiveLog: () => (/* binding */ GetDeployablePatchSnapshotForInstanceRequestFilterSensitiveLog),\n/* harmony export */   GetMaintenanceWindowExecutionTaskInvocationResultFilterSensitiveLog: () => (/* binding */ GetMaintenanceWindowExecutionTaskInvocationResultFilterSensitiveLog),\n/* harmony export */   GetMaintenanceWindowExecutionTaskResultFilterSensitiveLog: () => (/* binding */ GetMaintenanceWindowExecutionTaskResultFilterSensitiveLog),\n/* harmony export */   GetMaintenanceWindowResultFilterSensitiveLog: () => (/* binding */ GetMaintenanceWindowResultFilterSensitiveLog),\n/* harmony export */   GetMaintenanceWindowTaskResultFilterSensitiveLog: () => (/* binding */ GetMaintenanceWindowTaskResultFilterSensitiveLog),\n/* harmony export */   GetParameterHistoryResultFilterSensitiveLog: () => (/* binding */ GetParameterHistoryResultFilterSensitiveLog),\n/* harmony export */   GetParameterResultFilterSensitiveLog: () => (/* binding */ GetParameterResultFilterSensitiveLog),\n/* harmony export */   GetParametersByPathResultFilterSensitiveLog: () => (/* binding */ GetParametersByPathResultFilterSensitiveLog),\n/* harmony export */   GetParametersResultFilterSensitiveLog: () => (/* binding */ GetParametersResultFilterSensitiveLog),\n/* harmony export */   GetPatchBaselineResultFilterSensitiveLog: () => (/* binding */ GetPatchBaselineResultFilterSensitiveLog),\n/* harmony export */   HierarchyLevelLimitExceededException: () => (/* binding */ HierarchyLevelLimitExceededException),\n/* harmony export */   HierarchyTypeMismatchException: () => (/* binding */ HierarchyTypeMismatchException),\n/* harmony export */   IncompatiblePolicyException: () => (/* binding */ IncompatiblePolicyException),\n/* harmony export */   InvalidAggregatorException: () => (/* binding */ InvalidAggregatorException),\n/* harmony export */   InvalidAllowedPatternException: () => (/* binding */ InvalidAllowedPatternException),\n/* harmony export */   InvalidAssociation: () => (/* binding */ InvalidAssociation),\n/* harmony export */   InvalidAutomationExecutionParametersException: () => (/* binding */ InvalidAutomationExecutionParametersException),\n/* harmony export */   InvalidAutomationSignalException: () => (/* binding */ InvalidAutomationSignalException),\n/* harmony export */   InvalidAutomationStatusUpdateException: () => (/* binding */ InvalidAutomationStatusUpdateException),\n/* harmony export */   InvalidDocumentType: () => (/* binding */ InvalidDocumentType),\n/* harmony export */   InvalidFilterOption: () => (/* binding */ InvalidFilterOption),\n/* harmony export */   InvalidInventoryGroupException: () => (/* binding */ InvalidInventoryGroupException),\n/* harmony export */   InvalidInventoryItemContextException: () => (/* binding */ InvalidInventoryItemContextException),\n/* harmony export */   InvalidItemContentException: () => (/* binding */ InvalidItemContentException),\n/* harmony export */   InvalidKeyId: () => (/* binding */ InvalidKeyId),\n/* harmony export */   InvalidNotificationConfig: () => (/* binding */ InvalidNotificationConfig),\n/* harmony export */   InvalidOutputFolder: () => (/* binding */ InvalidOutputFolder),\n/* harmony export */   InvalidPluginName: () => (/* binding */ InvalidPluginName),\n/* harmony export */   InvalidPolicyAttributeException: () => (/* binding */ InvalidPolicyAttributeException),\n/* harmony export */   InvalidPolicyTypeException: () => (/* binding */ InvalidPolicyTypeException),\n/* harmony export */   InvalidResultAttributeException: () => (/* binding */ InvalidResultAttributeException),\n/* harmony export */   InvalidRole: () => (/* binding */ InvalidRole),\n/* harmony export */   InventoryAttributeDataType: () => (/* binding */ InventoryAttributeDataType),\n/* harmony export */   InventoryQueryOperatorType: () => (/* binding */ InventoryQueryOperatorType),\n/* harmony export */   InvocationDoesNotExist: () => (/* binding */ InvocationDoesNotExist),\n/* harmony export */   ItemContentMismatchException: () => (/* binding */ ItemContentMismatchException),\n/* harmony export */   ItemSizeLimitExceededException: () => (/* binding */ ItemSizeLimitExceededException),\n/* harmony export */   LastResourceDataSyncStatus: () => (/* binding */ LastResourceDataSyncStatus),\n/* harmony export */   ListAssociationVersionsResultFilterSensitiveLog: () => (/* binding */ ListAssociationVersionsResultFilterSensitiveLog),\n/* harmony export */   ListCommandsResultFilterSensitiveLog: () => (/* binding */ ListCommandsResultFilterSensitiveLog),\n/* harmony export */   MaintenanceWindowLambdaParametersFilterSensitiveLog: () => (/* binding */ MaintenanceWindowLambdaParametersFilterSensitiveLog),\n/* harmony export */   MaintenanceWindowRunCommandParametersFilterSensitiveLog: () => (/* binding */ MaintenanceWindowRunCommandParametersFilterSensitiveLog),\n/* harmony export */   MaintenanceWindowStepFunctionsParametersFilterSensitiveLog: () => (/* binding */ MaintenanceWindowStepFunctionsParametersFilterSensitiveLog),\n/* harmony export */   MaintenanceWindowTaskInvocationParametersFilterSensitiveLog: () => (/* binding */ MaintenanceWindowTaskInvocationParametersFilterSensitiveLog),\n/* harmony export */   NotificationEvent: () => (/* binding */ NotificationEvent),\n/* harmony export */   NotificationType: () => (/* binding */ NotificationType),\n/* harmony export */   OpsFilterOperatorType: () => (/* binding */ OpsFilterOperatorType),\n/* harmony export */   OpsItemEventFilterKey: () => (/* binding */ OpsItemEventFilterKey),\n/* harmony export */   OpsItemEventFilterOperator: () => (/* binding */ OpsItemEventFilterOperator),\n/* harmony export */   OpsItemFilterKey: () => (/* binding */ OpsItemFilterKey),\n/* harmony export */   OpsItemFilterOperator: () => (/* binding */ OpsItemFilterOperator),\n/* harmony export */   OpsItemRelatedItemAssociationNotFoundException: () => (/* binding */ OpsItemRelatedItemAssociationNotFoundException),\n/* harmony export */   OpsItemRelatedItemsFilterKey: () => (/* binding */ OpsItemRelatedItemsFilterKey),\n/* harmony export */   OpsItemRelatedItemsFilterOperator: () => (/* binding */ OpsItemRelatedItemsFilterOperator),\n/* harmony export */   OpsItemStatus: () => (/* binding */ OpsItemStatus),\n/* harmony export */   ParameterAlreadyExists: () => (/* binding */ ParameterAlreadyExists),\n/* harmony export */   ParameterFilterSensitiveLog: () => (/* binding */ ParameterFilterSensitiveLog),\n/* harmony export */   ParameterHistoryFilterSensitiveLog: () => (/* binding */ ParameterHistoryFilterSensitiveLog),\n/* harmony export */   ParameterLimitExceeded: () => (/* binding */ ParameterLimitExceeded),\n/* harmony export */   ParameterMaxVersionLimitExceeded: () => (/* binding */ ParameterMaxVersionLimitExceeded),\n/* harmony export */   ParameterPatternMismatchException: () => (/* binding */ ParameterPatternMismatchException),\n/* harmony export */   ParameterTier: () => (/* binding */ ParameterTier),\n/* harmony export */   ParameterType: () => (/* binding */ ParameterType),\n/* harmony export */   ParameterVersionLabelLimitExceeded: () => (/* binding */ ParameterVersionLabelLimitExceeded),\n/* harmony export */   ParameterVersionNotFound: () => (/* binding */ ParameterVersionNotFound),\n/* harmony export */   ParametersFilterKey: () => (/* binding */ ParametersFilterKey),\n/* harmony export */   PatchProperty: () => (/* binding */ PatchProperty),\n/* harmony export */   PatchSet: () => (/* binding */ PatchSet),\n/* harmony export */   PoliciesLimitExceededException: () => (/* binding */ PoliciesLimitExceededException),\n/* harmony export */   PutParameterRequestFilterSensitiveLog: () => (/* binding */ PutParameterRequestFilterSensitiveLog),\n/* harmony export */   RegisterTargetWithMaintenanceWindowRequestFilterSensitiveLog: () => (/* binding */ RegisterTargetWithMaintenanceWindowRequestFilterSensitiveLog),\n/* harmony export */   RegisterTaskWithMaintenanceWindowRequestFilterSensitiveLog: () => (/* binding */ RegisterTaskWithMaintenanceWindowRequestFilterSensitiveLog),\n/* harmony export */   ResourcePolicyLimitExceededException: () => (/* binding */ ResourcePolicyLimitExceededException),\n/* harmony export */   SendCommandRequestFilterSensitiveLog: () => (/* binding */ SendCommandRequestFilterSensitiveLog),\n/* harmony export */   SendCommandResultFilterSensitiveLog: () => (/* binding */ SendCommandResultFilterSensitiveLog),\n/* harmony export */   ServiceSettingNotFound: () => (/* binding */ ServiceSettingNotFound),\n/* harmony export */   SessionFilterKey: () => (/* binding */ SessionFilterKey),\n/* harmony export */   SessionState: () => (/* binding */ SessionState),\n/* harmony export */   SessionStatus: () => (/* binding */ SessionStatus),\n/* harmony export */   SignalType: () => (/* binding */ SignalType),\n/* harmony export */   StopType: () => (/* binding */ StopType),\n/* harmony export */   SubTypeCountLimitExceededException: () => (/* binding */ SubTypeCountLimitExceededException),\n/* harmony export */   TargetNotConnected: () => (/* binding */ TargetNotConnected),\n/* harmony export */   TotalSizeLimitExceededException: () => (/* binding */ TotalSizeLimitExceededException),\n/* harmony export */   UnsupportedCalendarException: () => (/* binding */ UnsupportedCalendarException),\n/* harmony export */   UnsupportedFeatureRequiredException: () => (/* binding */ UnsupportedFeatureRequiredException),\n/* harmony export */   UnsupportedInventoryItemContextException: () => (/* binding */ UnsupportedInventoryItemContextException),\n/* harmony export */   UnsupportedInventorySchemaVersionException: () => (/* binding */ UnsupportedInventorySchemaVersionException),\n/* harmony export */   UnsupportedParameterType: () => (/* binding */ UnsupportedParameterType)\n/* harmony export */ });\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @smithy/smithy-client */ \"(rsc)/../../node_modules/.pnpm/@smithy+smithy-client@2.1.15/node_modules/@smithy/smithy-client/dist-es/index.js\");\n/* harmony import */ var _models_0__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./models_0 */ \"(rsc)/../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/models/models_0.js\");\n/* harmony import */ var _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SSMServiceException */ \"(rsc)/../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/models/SSMServiceException.js\");\n\n\n\nconst OpsItemFilterKey = {\n    ACCOUNT_ID: \"AccountId\",\n    ACTUAL_END_TIME: \"ActualEndTime\",\n    ACTUAL_START_TIME: \"ActualStartTime\",\n    AUTOMATION_ID: \"AutomationId\",\n    CATEGORY: \"Category\",\n    CHANGE_REQUEST_APPROVER_ARN: \"ChangeRequestByApproverArn\",\n    CHANGE_REQUEST_APPROVER_NAME: \"ChangeRequestByApproverName\",\n    CHANGE_REQUEST_REQUESTER_ARN: \"ChangeRequestByRequesterArn\",\n    CHANGE_REQUEST_REQUESTER_NAME: \"ChangeRequestByRequesterName\",\n    CHANGE_REQUEST_TARGETS_RESOURCE_GROUP: \"ChangeRequestByTargetsResourceGroup\",\n    CHANGE_REQUEST_TEMPLATE: \"ChangeRequestByTemplate\",\n    CREATED_BY: \"CreatedBy\",\n    CREATED_TIME: \"CreatedTime\",\n    INSIGHT_TYPE: \"InsightByType\",\n    LAST_MODIFIED_TIME: \"LastModifiedTime\",\n    OPERATIONAL_DATA: \"OperationalData\",\n    OPERATIONAL_DATA_KEY: \"OperationalDataKey\",\n    OPERATIONAL_DATA_VALUE: \"OperationalDataValue\",\n    OPSITEM_ID: \"OpsItemId\",\n    OPSITEM_TYPE: \"OpsItemType\",\n    PLANNED_END_TIME: \"PlannedEndTime\",\n    PLANNED_START_TIME: \"PlannedStartTime\",\n    PRIORITY: \"Priority\",\n    RESOURCE_ID: \"ResourceId\",\n    SEVERITY: \"Severity\",\n    SOURCE: \"Source\",\n    STATUS: \"Status\",\n    TITLE: \"Title\"\n};\nconst OpsItemFilterOperator = {\n    CONTAINS: \"Contains\",\n    EQUAL: \"Equal\",\n    GREATER_THAN: \"GreaterThan\",\n    LESS_THAN: \"LessThan\"\n};\nconst OpsItemStatus = {\n    APPROVED: \"Approved\",\n    CANCELLED: \"Cancelled\",\n    CANCELLING: \"Cancelling\",\n    CHANGE_CALENDAR_OVERRIDE_APPROVED: \"ChangeCalendarOverrideApproved\",\n    CHANGE_CALENDAR_OVERRIDE_REJECTED: \"ChangeCalendarOverrideRejected\",\n    CLOSED: \"Closed\",\n    COMPLETED_WITH_FAILURE: \"CompletedWithFailure\",\n    COMPLETED_WITH_SUCCESS: \"CompletedWithSuccess\",\n    FAILED: \"Failed\",\n    IN_PROGRESS: \"InProgress\",\n    OPEN: \"Open\",\n    PENDING: \"Pending\",\n    PENDING_APPROVAL: \"PendingApproval\",\n    PENDING_CHANGE_CALENDAR_OVERRIDE: \"PendingChangeCalendarOverride\",\n    REJECTED: \"Rejected\",\n    RESOLVED: \"Resolved\",\n    RUNBOOK_IN_PROGRESS: \"RunbookInProgress\",\n    SCHEDULED: \"Scheduled\",\n    TIMED_OUT: \"TimedOut\"\n};\nconst ParametersFilterKey = {\n    KEY_ID: \"KeyId\",\n    NAME: \"Name\",\n    TYPE: \"Type\"\n};\nconst ParameterTier = {\n    ADVANCED: \"Advanced\",\n    INTELLIGENT_TIERING: \"Intelligent-Tiering\",\n    STANDARD: \"Standard\"\n};\nconst ParameterType = {\n    SECURE_STRING: \"SecureString\",\n    STRING: \"String\",\n    STRING_LIST: \"StringList\"\n};\nclass InvalidFilterOption extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidFilterOption\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidFilterOption\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidFilterOption.prototype);\n    }\n}\nconst PatchSet = {\n    Application: \"APPLICATION\",\n    Os: \"OS\"\n};\nconst PatchProperty = {\n    PatchClassification: \"CLASSIFICATION\",\n    PatchMsrcSeverity: \"MSRC_SEVERITY\",\n    PatchPriority: \"PRIORITY\",\n    PatchProductFamily: \"PRODUCT_FAMILY\",\n    PatchSeverity: \"SEVERITY\",\n    Product: \"PRODUCT\"\n};\nconst SessionFilterKey = {\n    INVOKED_AFTER: \"InvokedAfter\",\n    INVOKED_BEFORE: \"InvokedBefore\",\n    OWNER: \"Owner\",\n    SESSION_ID: \"SessionId\",\n    STATUS: \"Status\",\n    TARGET_ID: \"Target\"\n};\nconst SessionState = {\n    ACTIVE: \"Active\",\n    HISTORY: \"History\"\n};\nconst SessionStatus = {\n    CONNECTED: \"Connected\",\n    CONNECTING: \"Connecting\",\n    DISCONNECTED: \"Disconnected\",\n    FAILED: \"Failed\",\n    TERMINATED: \"Terminated\",\n    TERMINATING: \"Terminating\"\n};\nclass OpsItemRelatedItemAssociationNotFoundException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"OpsItemRelatedItemAssociationNotFoundException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"OpsItemRelatedItemAssociationNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, OpsItemRelatedItemAssociationNotFoundException.prototype);\n        this.Message = opts.Message;\n    }\n}\nconst CalendarState = {\n    CLOSED: \"CLOSED\",\n    OPEN: \"OPEN\"\n};\nclass InvalidDocumentType extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidDocumentType\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidDocumentType\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidDocumentType.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass UnsupportedCalendarException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"UnsupportedCalendarException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"UnsupportedCalendarException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, UnsupportedCalendarException.prototype);\n        this.Message = opts.Message;\n    }\n}\nconst CommandInvocationStatus = {\n    CANCELLED: \"Cancelled\",\n    CANCELLING: \"Cancelling\",\n    DELAYED: \"Delayed\",\n    FAILED: \"Failed\",\n    IN_PROGRESS: \"InProgress\",\n    PENDING: \"Pending\",\n    SUCCESS: \"Success\",\n    TIMED_OUT: \"TimedOut\"\n};\nclass InvalidPluginName extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidPluginName\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidPluginName\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidPluginName.prototype);\n    }\n}\nclass InvocationDoesNotExist extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"InvocationDoesNotExist\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvocationDoesNotExist\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvocationDoesNotExist.prototype);\n    }\n}\nconst ConnectionStatus = {\n    CONNECTED: \"connected\",\n    NOT_CONNECTED: \"notconnected\"\n};\nclass UnsupportedFeatureRequiredException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"UnsupportedFeatureRequiredException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"UnsupportedFeatureRequiredException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, UnsupportedFeatureRequiredException.prototype);\n        this.Message = opts.Message;\n    }\n}\nconst AttachmentHashType = {\n    SHA256: \"Sha256\"\n};\nconst InventoryQueryOperatorType = {\n    BEGIN_WITH: \"BeginWith\",\n    EQUAL: \"Equal\",\n    EXISTS: \"Exists\",\n    GREATER_THAN: \"GreaterThan\",\n    LESS_THAN: \"LessThan\",\n    NOT_EQUAL: \"NotEqual\"\n};\nclass InvalidAggregatorException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidAggregatorException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidAggregatorException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidAggregatorException.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass InvalidInventoryGroupException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidInventoryGroupException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidInventoryGroupException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidInventoryGroupException.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass InvalidResultAttributeException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidResultAttributeException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidResultAttributeException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidResultAttributeException.prototype);\n        this.Message = opts.Message;\n    }\n}\nconst InventoryAttributeDataType = {\n    NUMBER: \"number\",\n    STRING: \"string\"\n};\nconst NotificationEvent = {\n    ALL: \"All\",\n    CANCELLED: \"Cancelled\",\n    FAILED: \"Failed\",\n    IN_PROGRESS: \"InProgress\",\n    SUCCESS: \"Success\",\n    TIMED_OUT: \"TimedOut\"\n};\nconst NotificationType = {\n    Command: \"Command\",\n    Invocation: \"Invocation\"\n};\nconst OpsFilterOperatorType = {\n    BEGIN_WITH: \"BeginWith\",\n    EQUAL: \"Equal\",\n    EXISTS: \"Exists\",\n    GREATER_THAN: \"GreaterThan\",\n    LESS_THAN: \"LessThan\",\n    NOT_EQUAL: \"NotEqual\"\n};\nclass InvalidKeyId extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidKeyId\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidKeyId\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidKeyId.prototype);\n    }\n}\nclass ParameterVersionNotFound extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"ParameterVersionNotFound\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"ParameterVersionNotFound\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ParameterVersionNotFound.prototype);\n    }\n}\nclass ServiceSettingNotFound extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"ServiceSettingNotFound\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"ServiceSettingNotFound\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ServiceSettingNotFound.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass ParameterVersionLabelLimitExceeded extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"ParameterVersionLabelLimitExceeded\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"ParameterVersionLabelLimitExceeded\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ParameterVersionLabelLimitExceeded.prototype);\n    }\n}\nconst AssociationFilterKey = {\n    AssociationId: \"AssociationId\",\n    AssociationName: \"AssociationName\",\n    InstanceId: \"InstanceId\",\n    LastExecutedAfter: \"LastExecutedAfter\",\n    LastExecutedBefore: \"LastExecutedBefore\",\n    Name: \"Name\",\n    ResourceGroupName: \"ResourceGroupName\",\n    Status: \"AssociationStatusName\"\n};\nconst CommandFilterKey = {\n    DOCUMENT_NAME: \"DocumentName\",\n    EXECUTION_STAGE: \"ExecutionStage\",\n    INVOKED_AFTER: \"InvokedAfter\",\n    INVOKED_BEFORE: \"InvokedBefore\",\n    STATUS: \"Status\"\n};\nconst CommandPluginStatus = {\n    CANCELLED: \"Cancelled\",\n    FAILED: \"Failed\",\n    IN_PROGRESS: \"InProgress\",\n    PENDING: \"Pending\",\n    SUCCESS: \"Success\",\n    TIMED_OUT: \"TimedOut\"\n};\nconst CommandStatus = {\n    CANCELLED: \"Cancelled\",\n    CANCELLING: \"Cancelling\",\n    FAILED: \"Failed\",\n    IN_PROGRESS: \"InProgress\",\n    PENDING: \"Pending\",\n    SUCCESS: \"Success\",\n    TIMED_OUT: \"TimedOut\"\n};\nconst ComplianceQueryOperatorType = {\n    BeginWith: \"BEGIN_WITH\",\n    Equal: \"EQUAL\",\n    GreaterThan: \"GREATER_THAN\",\n    LessThan: \"LESS_THAN\",\n    NotEqual: \"NOT_EQUAL\"\n};\nconst ComplianceSeverity = {\n    Critical: \"CRITICAL\",\n    High: \"HIGH\",\n    Informational: \"INFORMATIONAL\",\n    Low: \"LOW\",\n    Medium: \"MEDIUM\",\n    Unspecified: \"UNSPECIFIED\"\n};\nconst ComplianceStatus = {\n    Compliant: \"COMPLIANT\",\n    NonCompliant: \"NON_COMPLIANT\"\n};\nconst DocumentMetadataEnum = {\n    DocumentReviews: \"DocumentReviews\"\n};\nconst DocumentReviewCommentType = {\n    Comment: \"Comment\"\n};\nconst DocumentFilterKey = {\n    DocumentType: \"DocumentType\",\n    Name: \"Name\",\n    Owner: \"Owner\",\n    PlatformTypes: \"PlatformTypes\"\n};\nconst OpsItemEventFilterKey = {\n    OPSITEM_ID: \"OpsItemId\"\n};\nconst OpsItemEventFilterOperator = {\n    EQUAL: \"Equal\"\n};\nconst OpsItemRelatedItemsFilterKey = {\n    ASSOCIATION_ID: \"AssociationId\",\n    RESOURCE_TYPE: \"ResourceType\",\n    RESOURCE_URI: \"ResourceUri\"\n};\nconst OpsItemRelatedItemsFilterOperator = {\n    EQUAL: \"Equal\"\n};\nconst LastResourceDataSyncStatus = {\n    FAILED: \"Failed\",\n    INPROGRESS: \"InProgress\",\n    SUCCESSFUL: \"Successful\"\n};\nclass DocumentPermissionLimit extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"DocumentPermissionLimit\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"DocumentPermissionLimit\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, DocumentPermissionLimit.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass ComplianceTypeCountLimitExceededException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"ComplianceTypeCountLimitExceededException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"ComplianceTypeCountLimitExceededException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ComplianceTypeCountLimitExceededException.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass InvalidItemContentException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidItemContentException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidItemContentException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidItemContentException.prototype);\n        this.TypeName = opts.TypeName;\n        this.Message = opts.Message;\n    }\n}\nclass ItemSizeLimitExceededException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"ItemSizeLimitExceededException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"ItemSizeLimitExceededException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ItemSizeLimitExceededException.prototype);\n        this.TypeName = opts.TypeName;\n        this.Message = opts.Message;\n    }\n}\nconst ComplianceUploadType = {\n    Complete: \"COMPLETE\",\n    Partial: \"PARTIAL\"\n};\nclass TotalSizeLimitExceededException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"TotalSizeLimitExceededException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"TotalSizeLimitExceededException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TotalSizeLimitExceededException.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass CustomSchemaCountLimitExceededException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"CustomSchemaCountLimitExceededException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"CustomSchemaCountLimitExceededException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, CustomSchemaCountLimitExceededException.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass InvalidInventoryItemContextException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidInventoryItemContextException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidInventoryItemContextException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidInventoryItemContextException.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass ItemContentMismatchException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"ItemContentMismatchException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"ItemContentMismatchException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ItemContentMismatchException.prototype);\n        this.TypeName = opts.TypeName;\n        this.Message = opts.Message;\n    }\n}\nclass SubTypeCountLimitExceededException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"SubTypeCountLimitExceededException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"SubTypeCountLimitExceededException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, SubTypeCountLimitExceededException.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass UnsupportedInventoryItemContextException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"UnsupportedInventoryItemContextException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"UnsupportedInventoryItemContextException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, UnsupportedInventoryItemContextException.prototype);\n        this.TypeName = opts.TypeName;\n        this.Message = opts.Message;\n    }\n}\nclass UnsupportedInventorySchemaVersionException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"UnsupportedInventorySchemaVersionException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"UnsupportedInventorySchemaVersionException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, UnsupportedInventorySchemaVersionException.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass HierarchyLevelLimitExceededException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"HierarchyLevelLimitExceededException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"HierarchyLevelLimitExceededException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, HierarchyLevelLimitExceededException.prototype);\n    }\n}\nclass HierarchyTypeMismatchException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"HierarchyTypeMismatchException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"HierarchyTypeMismatchException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, HierarchyTypeMismatchException.prototype);\n    }\n}\nclass IncompatiblePolicyException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"IncompatiblePolicyException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"IncompatiblePolicyException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, IncompatiblePolicyException.prototype);\n    }\n}\nclass InvalidAllowedPatternException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidAllowedPatternException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidAllowedPatternException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidAllowedPatternException.prototype);\n    }\n}\nclass InvalidPolicyAttributeException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidPolicyAttributeException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidPolicyAttributeException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidPolicyAttributeException.prototype);\n    }\n}\nclass InvalidPolicyTypeException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidPolicyTypeException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidPolicyTypeException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidPolicyTypeException.prototype);\n    }\n}\nclass ParameterAlreadyExists extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"ParameterAlreadyExists\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"ParameterAlreadyExists\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ParameterAlreadyExists.prototype);\n    }\n}\nclass ParameterLimitExceeded extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"ParameterLimitExceeded\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"ParameterLimitExceeded\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ParameterLimitExceeded.prototype);\n    }\n}\nclass ParameterMaxVersionLimitExceeded extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"ParameterMaxVersionLimitExceeded\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"ParameterMaxVersionLimitExceeded\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ParameterMaxVersionLimitExceeded.prototype);\n    }\n}\nclass ParameterPatternMismatchException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"ParameterPatternMismatchException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"ParameterPatternMismatchException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ParameterPatternMismatchException.prototype);\n    }\n}\nclass PoliciesLimitExceededException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"PoliciesLimitExceededException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"PoliciesLimitExceededException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, PoliciesLimitExceededException.prototype);\n    }\n}\nclass UnsupportedParameterType extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"UnsupportedParameterType\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"UnsupportedParameterType\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, UnsupportedParameterType.prototype);\n    }\n}\nclass ResourcePolicyLimitExceededException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"ResourcePolicyLimitExceededException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"ResourcePolicyLimitExceededException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ResourcePolicyLimitExceededException.prototype);\n        this.Limit = opts.Limit;\n        this.LimitType = opts.LimitType;\n        this.Message = opts.Message;\n    }\n}\nclass FeatureNotAvailableException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"FeatureNotAvailableException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"FeatureNotAvailableException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, FeatureNotAvailableException.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass AutomationStepNotFoundException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"AutomationStepNotFoundException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"AutomationStepNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, AutomationStepNotFoundException.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass InvalidAutomationSignalException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidAutomationSignalException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidAutomationSignalException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidAutomationSignalException.prototype);\n        this.Message = opts.Message;\n    }\n}\nconst SignalType = {\n    APPROVE: \"Approve\",\n    REJECT: \"Reject\",\n    RESUME: \"Resume\",\n    START_STEP: \"StartStep\",\n    STOP_STEP: \"StopStep\"\n};\nclass InvalidNotificationConfig extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidNotificationConfig\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidNotificationConfig\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidNotificationConfig.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass InvalidOutputFolder extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidOutputFolder\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidOutputFolder\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidOutputFolder.prototype);\n    }\n}\nclass InvalidRole extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidRole\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidRole\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidRole.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass InvalidAssociation extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidAssociation\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidAssociation\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidAssociation.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass AutomationDefinitionNotFoundException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"AutomationDefinitionNotFoundException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"AutomationDefinitionNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, AutomationDefinitionNotFoundException.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass AutomationDefinitionVersionNotFoundException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"AutomationDefinitionVersionNotFoundException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"AutomationDefinitionVersionNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, AutomationDefinitionVersionNotFoundException.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass AutomationExecutionLimitExceededException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"AutomationExecutionLimitExceededException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"AutomationExecutionLimitExceededException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, AutomationExecutionLimitExceededException.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass InvalidAutomationExecutionParametersException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidAutomationExecutionParametersException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidAutomationExecutionParametersException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidAutomationExecutionParametersException.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass AutomationDefinitionNotApprovedException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"AutomationDefinitionNotApprovedException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"AutomationDefinitionNotApprovedException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, AutomationDefinitionNotApprovedException.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass TargetNotConnected extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"TargetNotConnected\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"TargetNotConnected\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TargetNotConnected.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass InvalidAutomationStatusUpdateException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidAutomationStatusUpdateException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidAutomationStatusUpdateException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidAutomationStatusUpdateException.prototype);\n        this.Message = opts.Message;\n    }\n}\nconst StopType = {\n    CANCEL: \"Cancel\",\n    COMPLETE: \"Complete\"\n};\nconst DescribeMaintenanceWindowTasksResultFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.Tasks && {\n            Tasks: obj.Tasks.map((item)=>(0,_models_0__WEBPACK_IMPORTED_MODULE_2__.MaintenanceWindowTaskFilterSensitiveLog)(item))\n        }\n    });\nconst BaselineOverrideFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.Sources && {\n            Sources: obj.Sources.map((item)=>(0,_models_0__WEBPACK_IMPORTED_MODULE_2__.PatchSourceFilterSensitiveLog)(item))\n        }\n    });\nconst GetDeployablePatchSnapshotForInstanceRequestFilterSensitiveLog = (obj)=>({\n        ...obj\n    });\nconst GetMaintenanceWindowResultFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.Description && {\n            Description: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        }\n    });\nconst GetMaintenanceWindowExecutionTaskResultFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.TaskParameters && {\n            TaskParameters: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        }\n    });\nconst GetMaintenanceWindowExecutionTaskInvocationResultFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.Parameters && {\n            Parameters: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        },\n        ...obj.OwnerInformation && {\n            OwnerInformation: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        }\n    });\nconst MaintenanceWindowLambdaParametersFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.Payload && {\n            Payload: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        }\n    });\nconst MaintenanceWindowRunCommandParametersFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.Parameters && {\n            Parameters: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        }\n    });\nconst MaintenanceWindowStepFunctionsParametersFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.Input && {\n            Input: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        }\n    });\nconst MaintenanceWindowTaskInvocationParametersFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.RunCommand && {\n            RunCommand: MaintenanceWindowRunCommandParametersFilterSensitiveLog(obj.RunCommand)\n        },\n        ...obj.StepFunctions && {\n            StepFunctions: MaintenanceWindowStepFunctionsParametersFilterSensitiveLog(obj.StepFunctions)\n        },\n        ...obj.Lambda && {\n            Lambda: MaintenanceWindowLambdaParametersFilterSensitiveLog(obj.Lambda)\n        }\n    });\nconst GetMaintenanceWindowTaskResultFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.TaskParameters && {\n            TaskParameters: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        },\n        ...obj.TaskInvocationParameters && {\n            TaskInvocationParameters: MaintenanceWindowTaskInvocationParametersFilterSensitiveLog(obj.TaskInvocationParameters)\n        },\n        ...obj.Description && {\n            Description: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        }\n    });\nconst ParameterFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.Value && {\n            Value: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        }\n    });\nconst GetParameterResultFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.Parameter && {\n            Parameter: ParameterFilterSensitiveLog(obj.Parameter)\n        }\n    });\nconst ParameterHistoryFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.Value && {\n            Value: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        }\n    });\nconst GetParameterHistoryResultFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.Parameters && {\n            Parameters: obj.Parameters.map((item)=>ParameterHistoryFilterSensitiveLog(item))\n        }\n    });\nconst GetParametersResultFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.Parameters && {\n            Parameters: obj.Parameters.map((item)=>ParameterFilterSensitiveLog(item))\n        }\n    });\nconst GetParametersByPathResultFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.Parameters && {\n            Parameters: obj.Parameters.map((item)=>ParameterFilterSensitiveLog(item))\n        }\n    });\nconst GetPatchBaselineResultFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.Sources && {\n            Sources: obj.Sources.map((item)=>(0,_models_0__WEBPACK_IMPORTED_MODULE_2__.PatchSourceFilterSensitiveLog)(item))\n        }\n    });\nconst AssociationVersionInfoFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.Parameters && {\n            Parameters: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        }\n    });\nconst ListAssociationVersionsResultFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.AssociationVersions && {\n            AssociationVersions: obj.AssociationVersions.map((item)=>AssociationVersionInfoFilterSensitiveLog(item))\n        }\n    });\nconst CommandFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.Parameters && {\n            Parameters: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        }\n    });\nconst ListCommandsResultFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.Commands && {\n            Commands: obj.Commands.map((item)=>CommandFilterSensitiveLog(item))\n        }\n    });\nconst PutParameterRequestFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.Value && {\n            Value: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        }\n    });\nconst RegisterTargetWithMaintenanceWindowRequestFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.OwnerInformation && {\n            OwnerInformation: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        },\n        ...obj.Description && {\n            Description: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        }\n    });\nconst RegisterTaskWithMaintenanceWindowRequestFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.TaskParameters && {\n            TaskParameters: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        },\n        ...obj.TaskInvocationParameters && {\n            TaskInvocationParameters: MaintenanceWindowTaskInvocationParametersFilterSensitiveLog(obj.TaskInvocationParameters)\n        },\n        ...obj.Description && {\n            Description: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        }\n    });\nconst SendCommandRequestFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.Parameters && {\n            Parameters: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        }\n    });\nconst SendCommandResultFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.Command && {\n            Command: CommandFilterSensitiveLog(obj.Command)\n        }\n    });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/models/models_1.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/models/models_2.js":
/*!************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/models/models_2.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AssociationVersionLimitExceeded: () => (/* binding */ AssociationVersionLimitExceeded),\n/* harmony export */   DocumentReviewAction: () => (/* binding */ DocumentReviewAction),\n/* harmony export */   DocumentVersionLimitExceeded: () => (/* binding */ DocumentVersionLimitExceeded),\n/* harmony export */   DuplicateDocumentContent: () => (/* binding */ DuplicateDocumentContent),\n/* harmony export */   DuplicateDocumentVersionName: () => (/* binding */ DuplicateDocumentVersionName),\n/* harmony export */   InvalidUpdate: () => (/* binding */ InvalidUpdate),\n/* harmony export */   OpsMetadataKeyLimitExceededException: () => (/* binding */ OpsMetadataKeyLimitExceededException),\n/* harmony export */   ResourceDataSyncConflictException: () => (/* binding */ ResourceDataSyncConflictException),\n/* harmony export */   StatusUnchanged: () => (/* binding */ StatusUnchanged),\n/* harmony export */   UpdateAssociationRequestFilterSensitiveLog: () => (/* binding */ UpdateAssociationRequestFilterSensitiveLog),\n/* harmony export */   UpdateAssociationResultFilterSensitiveLog: () => (/* binding */ UpdateAssociationResultFilterSensitiveLog),\n/* harmony export */   UpdateAssociationStatusResultFilterSensitiveLog: () => (/* binding */ UpdateAssociationStatusResultFilterSensitiveLog),\n/* harmony export */   UpdateMaintenanceWindowRequestFilterSensitiveLog: () => (/* binding */ UpdateMaintenanceWindowRequestFilterSensitiveLog),\n/* harmony export */   UpdateMaintenanceWindowResultFilterSensitiveLog: () => (/* binding */ UpdateMaintenanceWindowResultFilterSensitiveLog),\n/* harmony export */   UpdateMaintenanceWindowTargetRequestFilterSensitiveLog: () => (/* binding */ UpdateMaintenanceWindowTargetRequestFilterSensitiveLog),\n/* harmony export */   UpdateMaintenanceWindowTargetResultFilterSensitiveLog: () => (/* binding */ UpdateMaintenanceWindowTargetResultFilterSensitiveLog),\n/* harmony export */   UpdateMaintenanceWindowTaskRequestFilterSensitiveLog: () => (/* binding */ UpdateMaintenanceWindowTaskRequestFilterSensitiveLog),\n/* harmony export */   UpdateMaintenanceWindowTaskResultFilterSensitiveLog: () => (/* binding */ UpdateMaintenanceWindowTaskResultFilterSensitiveLog),\n/* harmony export */   UpdatePatchBaselineRequestFilterSensitiveLog: () => (/* binding */ UpdatePatchBaselineRequestFilterSensitiveLog),\n/* harmony export */   UpdatePatchBaselineResultFilterSensitiveLog: () => (/* binding */ UpdatePatchBaselineResultFilterSensitiveLog)\n/* harmony export */ });\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @smithy/smithy-client */ \"(rsc)/../../node_modules/.pnpm/@smithy+smithy-client@2.1.15/node_modules/@smithy/smithy-client/dist-es/index.js\");\n/* harmony import */ var _models_0__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./models_0 */ \"(rsc)/../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/models/models_0.js\");\n/* harmony import */ var _models_1__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./models_1 */ \"(rsc)/../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/models/models_1.js\");\n/* harmony import */ var _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SSMServiceException */ \"(rsc)/../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/models/SSMServiceException.js\");\n\n\n\n\nclass AssociationVersionLimitExceeded extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"AssociationVersionLimitExceeded\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"AssociationVersionLimitExceeded\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, AssociationVersionLimitExceeded.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass InvalidUpdate extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidUpdate\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidUpdate\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidUpdate.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass StatusUnchanged extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"StatusUnchanged\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"StatusUnchanged\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, StatusUnchanged.prototype);\n    }\n}\nclass DocumentVersionLimitExceeded extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"DocumentVersionLimitExceeded\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"DocumentVersionLimitExceeded\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, DocumentVersionLimitExceeded.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass DuplicateDocumentContent extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"DuplicateDocumentContent\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"DuplicateDocumentContent\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, DuplicateDocumentContent.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass DuplicateDocumentVersionName extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"DuplicateDocumentVersionName\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"DuplicateDocumentVersionName\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, DuplicateDocumentVersionName.prototype);\n        this.Message = opts.Message;\n    }\n}\nconst DocumentReviewAction = {\n    Approve: \"Approve\",\n    Reject: \"Reject\",\n    SendForReview: \"SendForReview\",\n    UpdateReview: \"UpdateReview\"\n};\nclass OpsMetadataKeyLimitExceededException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"OpsMetadataKeyLimitExceededException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"OpsMetadataKeyLimitExceededException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, OpsMetadataKeyLimitExceededException.prototype);\n    }\n}\nclass ResourceDataSyncConflictException extends _SSMServiceException__WEBPACK_IMPORTED_MODULE_1__.SSMServiceException {\n    constructor(opts){\n        super({\n            name: \"ResourceDataSyncConflictException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"ResourceDataSyncConflictException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ResourceDataSyncConflictException.prototype);\n        this.Message = opts.Message;\n    }\n}\nconst UpdateAssociationRequestFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.Parameters && {\n            Parameters: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        }\n    });\nconst UpdateAssociationResultFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.AssociationDescription && {\n            AssociationDescription: (0,_models_0__WEBPACK_IMPORTED_MODULE_2__.AssociationDescriptionFilterSensitiveLog)(obj.AssociationDescription)\n        }\n    });\nconst UpdateAssociationStatusResultFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.AssociationDescription && {\n            AssociationDescription: (0,_models_0__WEBPACK_IMPORTED_MODULE_2__.AssociationDescriptionFilterSensitiveLog)(obj.AssociationDescription)\n        }\n    });\nconst UpdateMaintenanceWindowRequestFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.Description && {\n            Description: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        }\n    });\nconst UpdateMaintenanceWindowResultFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.Description && {\n            Description: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        }\n    });\nconst UpdateMaintenanceWindowTargetRequestFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.OwnerInformation && {\n            OwnerInformation: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        },\n        ...obj.Description && {\n            Description: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        }\n    });\nconst UpdateMaintenanceWindowTargetResultFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.OwnerInformation && {\n            OwnerInformation: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        },\n        ...obj.Description && {\n            Description: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        }\n    });\nconst UpdateMaintenanceWindowTaskRequestFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.TaskParameters && {\n            TaskParameters: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        },\n        ...obj.TaskInvocationParameters && {\n            TaskInvocationParameters: (0,_models_1__WEBPACK_IMPORTED_MODULE_3__.MaintenanceWindowTaskInvocationParametersFilterSensitiveLog)(obj.TaskInvocationParameters)\n        },\n        ...obj.Description && {\n            Description: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        }\n    });\nconst UpdateMaintenanceWindowTaskResultFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.TaskParameters && {\n            TaskParameters: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        },\n        ...obj.TaskInvocationParameters && {\n            TaskInvocationParameters: (0,_models_1__WEBPACK_IMPORTED_MODULE_3__.MaintenanceWindowTaskInvocationParametersFilterSensitiveLog)(obj.TaskInvocationParameters)\n        },\n        ...obj.Description && {\n            Description: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        }\n    });\nconst UpdatePatchBaselineRequestFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.Sources && {\n            Sources: obj.Sources.map((item)=>(0,_models_0__WEBPACK_IMPORTED_MODULE_2__.PatchSourceFilterSensitiveLog)(item))\n        }\n    });\nconst UpdatePatchBaselineResultFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.Sources && {\n            Sources: obj.Sources.map((item)=>(0,_models_0__WEBPACK_IMPORTED_MODULE_2__.PatchSourceFilterSensitiveLog)(item))\n        }\n    });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/models/models_2.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/protocols/Aws_json1_1.js":
/*!******************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/protocols/Aws_json1_1.js ***!
  \******************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   de_AddTagsToResourceCommand: () => (/* binding */ de_AddTagsToResourceCommand),\n/* harmony export */   de_AssociateOpsItemRelatedItemCommand: () => (/* binding */ de_AssociateOpsItemRelatedItemCommand),\n/* harmony export */   de_CancelCommandCommand: () => (/* binding */ de_CancelCommandCommand),\n/* harmony export */   de_CancelMaintenanceWindowExecutionCommand: () => (/* binding */ de_CancelMaintenanceWindowExecutionCommand),\n/* harmony export */   de_CreateActivationCommand: () => (/* binding */ de_CreateActivationCommand),\n/* harmony export */   de_CreateAssociationBatchCommand: () => (/* binding */ de_CreateAssociationBatchCommand),\n/* harmony export */   de_CreateAssociationCommand: () => (/* binding */ de_CreateAssociationCommand),\n/* harmony export */   de_CreateDocumentCommand: () => (/* binding */ de_CreateDocumentCommand),\n/* harmony export */   de_CreateMaintenanceWindowCommand: () => (/* binding */ de_CreateMaintenanceWindowCommand),\n/* harmony export */   de_CreateOpsItemCommand: () => (/* binding */ de_CreateOpsItemCommand),\n/* harmony export */   de_CreateOpsMetadataCommand: () => (/* binding */ de_CreateOpsMetadataCommand),\n/* harmony export */   de_CreatePatchBaselineCommand: () => (/* binding */ de_CreatePatchBaselineCommand),\n/* harmony export */   de_CreateResourceDataSyncCommand: () => (/* binding */ de_CreateResourceDataSyncCommand),\n/* harmony export */   de_DeleteActivationCommand: () => (/* binding */ de_DeleteActivationCommand),\n/* harmony export */   de_DeleteAssociationCommand: () => (/* binding */ de_DeleteAssociationCommand),\n/* harmony export */   de_DeleteDocumentCommand: () => (/* binding */ de_DeleteDocumentCommand),\n/* harmony export */   de_DeleteInventoryCommand: () => (/* binding */ de_DeleteInventoryCommand),\n/* harmony export */   de_DeleteMaintenanceWindowCommand: () => (/* binding */ de_DeleteMaintenanceWindowCommand),\n/* harmony export */   de_DeleteOpsItemCommand: () => (/* binding */ de_DeleteOpsItemCommand),\n/* harmony export */   de_DeleteOpsMetadataCommand: () => (/* binding */ de_DeleteOpsMetadataCommand),\n/* harmony export */   de_DeleteParameterCommand: () => (/* binding */ de_DeleteParameterCommand),\n/* harmony export */   de_DeleteParametersCommand: () => (/* binding */ de_DeleteParametersCommand),\n/* harmony export */   de_DeletePatchBaselineCommand: () => (/* binding */ de_DeletePatchBaselineCommand),\n/* harmony export */   de_DeleteResourceDataSyncCommand: () => (/* binding */ de_DeleteResourceDataSyncCommand),\n/* harmony export */   de_DeleteResourcePolicyCommand: () => (/* binding */ de_DeleteResourcePolicyCommand),\n/* harmony export */   de_DeregisterManagedInstanceCommand: () => (/* binding */ de_DeregisterManagedInstanceCommand),\n/* harmony export */   de_DeregisterPatchBaselineForPatchGroupCommand: () => (/* binding */ de_DeregisterPatchBaselineForPatchGroupCommand),\n/* harmony export */   de_DeregisterTargetFromMaintenanceWindowCommand: () => (/* binding */ de_DeregisterTargetFromMaintenanceWindowCommand),\n/* harmony export */   de_DeregisterTaskFromMaintenanceWindowCommand: () => (/* binding */ de_DeregisterTaskFromMaintenanceWindowCommand),\n/* harmony export */   de_DescribeActivationsCommand: () => (/* binding */ de_DescribeActivationsCommand),\n/* harmony export */   de_DescribeAssociationCommand: () => (/* binding */ de_DescribeAssociationCommand),\n/* harmony export */   de_DescribeAssociationExecutionTargetsCommand: () => (/* binding */ de_DescribeAssociationExecutionTargetsCommand),\n/* harmony export */   de_DescribeAssociationExecutionsCommand: () => (/* binding */ de_DescribeAssociationExecutionsCommand),\n/* harmony export */   de_DescribeAutomationExecutionsCommand: () => (/* binding */ de_DescribeAutomationExecutionsCommand),\n/* harmony export */   de_DescribeAutomationStepExecutionsCommand: () => (/* binding */ de_DescribeAutomationStepExecutionsCommand),\n/* harmony export */   de_DescribeAvailablePatchesCommand: () => (/* binding */ de_DescribeAvailablePatchesCommand),\n/* harmony export */   de_DescribeDocumentCommand: () => (/* binding */ de_DescribeDocumentCommand),\n/* harmony export */   de_DescribeDocumentPermissionCommand: () => (/* binding */ de_DescribeDocumentPermissionCommand),\n/* harmony export */   de_DescribeEffectiveInstanceAssociationsCommand: () => (/* binding */ de_DescribeEffectiveInstanceAssociationsCommand),\n/* harmony export */   de_DescribeEffectivePatchesForPatchBaselineCommand: () => (/* binding */ de_DescribeEffectivePatchesForPatchBaselineCommand),\n/* harmony export */   de_DescribeInstanceAssociationsStatusCommand: () => (/* binding */ de_DescribeInstanceAssociationsStatusCommand),\n/* harmony export */   de_DescribeInstanceInformationCommand: () => (/* binding */ de_DescribeInstanceInformationCommand),\n/* harmony export */   de_DescribeInstancePatchStatesCommand: () => (/* binding */ de_DescribeInstancePatchStatesCommand),\n/* harmony export */   de_DescribeInstancePatchStatesForPatchGroupCommand: () => (/* binding */ de_DescribeInstancePatchStatesForPatchGroupCommand),\n/* harmony export */   de_DescribeInstancePatchesCommand: () => (/* binding */ de_DescribeInstancePatchesCommand),\n/* harmony export */   de_DescribeInventoryDeletionsCommand: () => (/* binding */ de_DescribeInventoryDeletionsCommand),\n/* harmony export */   de_DescribeMaintenanceWindowExecutionTaskInvocationsCommand: () => (/* binding */ de_DescribeMaintenanceWindowExecutionTaskInvocationsCommand),\n/* harmony export */   de_DescribeMaintenanceWindowExecutionTasksCommand: () => (/* binding */ de_DescribeMaintenanceWindowExecutionTasksCommand),\n/* harmony export */   de_DescribeMaintenanceWindowExecutionsCommand: () => (/* binding */ de_DescribeMaintenanceWindowExecutionsCommand),\n/* harmony export */   de_DescribeMaintenanceWindowScheduleCommand: () => (/* binding */ de_DescribeMaintenanceWindowScheduleCommand),\n/* harmony export */   de_DescribeMaintenanceWindowTargetsCommand: () => (/* binding */ de_DescribeMaintenanceWindowTargetsCommand),\n/* harmony export */   de_DescribeMaintenanceWindowTasksCommand: () => (/* binding */ de_DescribeMaintenanceWindowTasksCommand),\n/* harmony export */   de_DescribeMaintenanceWindowsCommand: () => (/* binding */ de_DescribeMaintenanceWindowsCommand),\n/* harmony export */   de_DescribeMaintenanceWindowsForTargetCommand: () => (/* binding */ de_DescribeMaintenanceWindowsForTargetCommand),\n/* harmony export */   de_DescribeOpsItemsCommand: () => (/* binding */ de_DescribeOpsItemsCommand),\n/* harmony export */   de_DescribeParametersCommand: () => (/* binding */ de_DescribeParametersCommand),\n/* harmony export */   de_DescribePatchBaselinesCommand: () => (/* binding */ de_DescribePatchBaselinesCommand),\n/* harmony export */   de_DescribePatchGroupStateCommand: () => (/* binding */ de_DescribePatchGroupStateCommand),\n/* harmony export */   de_DescribePatchGroupsCommand: () => (/* binding */ de_DescribePatchGroupsCommand),\n/* harmony export */   de_DescribePatchPropertiesCommand: () => (/* binding */ de_DescribePatchPropertiesCommand),\n/* harmony export */   de_DescribeSessionsCommand: () => (/* binding */ de_DescribeSessionsCommand),\n/* harmony export */   de_DisassociateOpsItemRelatedItemCommand: () => (/* binding */ de_DisassociateOpsItemRelatedItemCommand),\n/* harmony export */   de_GetAutomationExecutionCommand: () => (/* binding */ de_GetAutomationExecutionCommand),\n/* harmony export */   de_GetCalendarStateCommand: () => (/* binding */ de_GetCalendarStateCommand),\n/* harmony export */   de_GetCommandInvocationCommand: () => (/* binding */ de_GetCommandInvocationCommand),\n/* harmony export */   de_GetConnectionStatusCommand: () => (/* binding */ de_GetConnectionStatusCommand),\n/* harmony export */   de_GetDefaultPatchBaselineCommand: () => (/* binding */ de_GetDefaultPatchBaselineCommand),\n/* harmony export */   de_GetDeployablePatchSnapshotForInstanceCommand: () => (/* binding */ de_GetDeployablePatchSnapshotForInstanceCommand),\n/* harmony export */   de_GetDocumentCommand: () => (/* binding */ de_GetDocumentCommand),\n/* harmony export */   de_GetInventoryCommand: () => (/* binding */ de_GetInventoryCommand),\n/* harmony export */   de_GetInventorySchemaCommand: () => (/* binding */ de_GetInventorySchemaCommand),\n/* harmony export */   de_GetMaintenanceWindowCommand: () => (/* binding */ de_GetMaintenanceWindowCommand),\n/* harmony export */   de_GetMaintenanceWindowExecutionCommand: () => (/* binding */ de_GetMaintenanceWindowExecutionCommand),\n/* harmony export */   de_GetMaintenanceWindowExecutionTaskCommand: () => (/* binding */ de_GetMaintenanceWindowExecutionTaskCommand),\n/* harmony export */   de_GetMaintenanceWindowExecutionTaskInvocationCommand: () => (/* binding */ de_GetMaintenanceWindowExecutionTaskInvocationCommand),\n/* harmony export */   de_GetMaintenanceWindowTaskCommand: () => (/* binding */ de_GetMaintenanceWindowTaskCommand),\n/* harmony export */   de_GetOpsItemCommand: () => (/* binding */ de_GetOpsItemCommand),\n/* harmony export */   de_GetOpsMetadataCommand: () => (/* binding */ de_GetOpsMetadataCommand),\n/* harmony export */   de_GetOpsSummaryCommand: () => (/* binding */ de_GetOpsSummaryCommand),\n/* harmony export */   de_GetParameterCommand: () => (/* binding */ de_GetParameterCommand),\n/* harmony export */   de_GetParameterHistoryCommand: () => (/* binding */ de_GetParameterHistoryCommand),\n/* harmony export */   de_GetParametersByPathCommand: () => (/* binding */ de_GetParametersByPathCommand),\n/* harmony export */   de_GetParametersCommand: () => (/* binding */ de_GetParametersCommand),\n/* harmony export */   de_GetPatchBaselineCommand: () => (/* binding */ de_GetPatchBaselineCommand),\n/* harmony export */   de_GetPatchBaselineForPatchGroupCommand: () => (/* binding */ de_GetPatchBaselineForPatchGroupCommand),\n/* harmony export */   de_GetResourcePoliciesCommand: () => (/* binding */ de_GetResourcePoliciesCommand),\n/* harmony export */   de_GetServiceSettingCommand: () => (/* binding */ de_GetServiceSettingCommand),\n/* harmony export */   de_LabelParameterVersionCommand: () => (/* binding */ de_LabelParameterVersionCommand),\n/* harmony export */   de_ListAssociationVersionsCommand: () => (/* binding */ de_ListAssociationVersionsCommand),\n/* harmony export */   de_ListAssociationsCommand: () => (/* binding */ de_ListAssociationsCommand),\n/* harmony export */   de_ListCommandInvocationsCommand: () => (/* binding */ de_ListCommandInvocationsCommand),\n/* harmony export */   de_ListCommandsCommand: () => (/* binding */ de_ListCommandsCommand),\n/* harmony export */   de_ListComplianceItemsCommand: () => (/* binding */ de_ListComplianceItemsCommand),\n/* harmony export */   de_ListComplianceSummariesCommand: () => (/* binding */ de_ListComplianceSummariesCommand),\n/* harmony export */   de_ListDocumentMetadataHistoryCommand: () => (/* binding */ de_ListDocumentMetadataHistoryCommand),\n/* harmony export */   de_ListDocumentVersionsCommand: () => (/* binding */ de_ListDocumentVersionsCommand),\n/* harmony export */   de_ListDocumentsCommand: () => (/* binding */ de_ListDocumentsCommand),\n/* harmony export */   de_ListInventoryEntriesCommand: () => (/* binding */ de_ListInventoryEntriesCommand),\n/* harmony export */   de_ListOpsItemEventsCommand: () => (/* binding */ de_ListOpsItemEventsCommand),\n/* harmony export */   de_ListOpsItemRelatedItemsCommand: () => (/* binding */ de_ListOpsItemRelatedItemsCommand),\n/* harmony export */   de_ListOpsMetadataCommand: () => (/* binding */ de_ListOpsMetadataCommand),\n/* harmony export */   de_ListResourceComplianceSummariesCommand: () => (/* binding */ de_ListResourceComplianceSummariesCommand),\n/* harmony export */   de_ListResourceDataSyncCommand: () => (/* binding */ de_ListResourceDataSyncCommand),\n/* harmony export */   de_ListTagsForResourceCommand: () => (/* binding */ de_ListTagsForResourceCommand),\n/* harmony export */   de_ModifyDocumentPermissionCommand: () => (/* binding */ de_ModifyDocumentPermissionCommand),\n/* harmony export */   de_PutComplianceItemsCommand: () => (/* binding */ de_PutComplianceItemsCommand),\n/* harmony export */   de_PutInventoryCommand: () => (/* binding */ de_PutInventoryCommand),\n/* harmony export */   de_PutParameterCommand: () => (/* binding */ de_PutParameterCommand),\n/* harmony export */   de_PutResourcePolicyCommand: () => (/* binding */ de_PutResourcePolicyCommand),\n/* harmony export */   de_RegisterDefaultPatchBaselineCommand: () => (/* binding */ de_RegisterDefaultPatchBaselineCommand),\n/* harmony export */   de_RegisterPatchBaselineForPatchGroupCommand: () => (/* binding */ de_RegisterPatchBaselineForPatchGroupCommand),\n/* harmony export */   de_RegisterTargetWithMaintenanceWindowCommand: () => (/* binding */ de_RegisterTargetWithMaintenanceWindowCommand),\n/* harmony export */   de_RegisterTaskWithMaintenanceWindowCommand: () => (/* binding */ de_RegisterTaskWithMaintenanceWindowCommand),\n/* harmony export */   de_RemoveTagsFromResourceCommand: () => (/* binding */ de_RemoveTagsFromResourceCommand),\n/* harmony export */   de_ResetServiceSettingCommand: () => (/* binding */ de_ResetServiceSettingCommand),\n/* harmony export */   de_ResumeSessionCommand: () => (/* binding */ de_ResumeSessionCommand),\n/* harmony export */   de_SendAutomationSignalCommand: () => (/* binding */ de_SendAutomationSignalCommand),\n/* harmony export */   de_SendCommandCommand: () => (/* binding */ de_SendCommandCommand),\n/* harmony export */   de_StartAssociationsOnceCommand: () => (/* binding */ de_StartAssociationsOnceCommand),\n/* harmony export */   de_StartAutomationExecutionCommand: () => (/* binding */ de_StartAutomationExecutionCommand),\n/* harmony export */   de_StartChangeRequestExecutionCommand: () => (/* binding */ de_StartChangeRequestExecutionCommand),\n/* harmony export */   de_StartSessionCommand: () => (/* binding */ de_StartSessionCommand),\n/* harmony export */   de_StopAutomationExecutionCommand: () => (/* binding */ de_StopAutomationExecutionCommand),\n/* harmony export */   de_TerminateSessionCommand: () => (/* binding */ de_TerminateSessionCommand),\n/* harmony export */   de_UnlabelParameterVersionCommand: () => (/* binding */ de_UnlabelParameterVersionCommand),\n/* harmony export */   de_UpdateAssociationCommand: () => (/* binding */ de_UpdateAssociationCommand),\n/* harmony export */   de_UpdateAssociationStatusCommand: () => (/* binding */ de_UpdateAssociationStatusCommand),\n/* harmony export */   de_UpdateDocumentCommand: () => (/* binding */ de_UpdateDocumentCommand),\n/* harmony export */   de_UpdateDocumentDefaultVersionCommand: () => (/* binding */ de_UpdateDocumentDefaultVersionCommand),\n/* harmony export */   de_UpdateDocumentMetadataCommand: () => (/* binding */ de_UpdateDocumentMetadataCommand),\n/* harmony export */   de_UpdateMaintenanceWindowCommand: () => (/* binding */ de_UpdateMaintenanceWindowCommand),\n/* harmony export */   de_UpdateMaintenanceWindowTargetCommand: () => (/* binding */ de_UpdateMaintenanceWindowTargetCommand),\n/* harmony export */   de_UpdateMaintenanceWindowTaskCommand: () => (/* binding */ de_UpdateMaintenanceWindowTaskCommand),\n/* harmony export */   de_UpdateManagedInstanceRoleCommand: () => (/* binding */ de_UpdateManagedInstanceRoleCommand),\n/* harmony export */   de_UpdateOpsItemCommand: () => (/* binding */ de_UpdateOpsItemCommand),\n/* harmony export */   de_UpdateOpsMetadataCommand: () => (/* binding */ de_UpdateOpsMetadataCommand),\n/* harmony export */   de_UpdatePatchBaselineCommand: () => (/* binding */ de_UpdatePatchBaselineCommand),\n/* harmony export */   de_UpdateResourceDataSyncCommand: () => (/* binding */ de_UpdateResourceDataSyncCommand),\n/* harmony export */   de_UpdateServiceSettingCommand: () => (/* binding */ de_UpdateServiceSettingCommand),\n/* harmony export */   se_AddTagsToResourceCommand: () => (/* binding */ se_AddTagsToResourceCommand),\n/* harmony export */   se_AssociateOpsItemRelatedItemCommand: () => (/* binding */ se_AssociateOpsItemRelatedItemCommand),\n/* harmony export */   se_CancelCommandCommand: () => (/* binding */ se_CancelCommandCommand),\n/* harmony export */   se_CancelMaintenanceWindowExecutionCommand: () => (/* binding */ se_CancelMaintenanceWindowExecutionCommand),\n/* harmony export */   se_CreateActivationCommand: () => (/* binding */ se_CreateActivationCommand),\n/* harmony export */   se_CreateAssociationBatchCommand: () => (/* binding */ se_CreateAssociationBatchCommand),\n/* harmony export */   se_CreateAssociationCommand: () => (/* binding */ se_CreateAssociationCommand),\n/* harmony export */   se_CreateDocumentCommand: () => (/* binding */ se_CreateDocumentCommand),\n/* harmony export */   se_CreateMaintenanceWindowCommand: () => (/* binding */ se_CreateMaintenanceWindowCommand),\n/* harmony export */   se_CreateOpsItemCommand: () => (/* binding */ se_CreateOpsItemCommand),\n/* harmony export */   se_CreateOpsMetadataCommand: () => (/* binding */ se_CreateOpsMetadataCommand),\n/* harmony export */   se_CreatePatchBaselineCommand: () => (/* binding */ se_CreatePatchBaselineCommand),\n/* harmony export */   se_CreateResourceDataSyncCommand: () => (/* binding */ se_CreateResourceDataSyncCommand),\n/* harmony export */   se_DeleteActivationCommand: () => (/* binding */ se_DeleteActivationCommand),\n/* harmony export */   se_DeleteAssociationCommand: () => (/* binding */ se_DeleteAssociationCommand),\n/* harmony export */   se_DeleteDocumentCommand: () => (/* binding */ se_DeleteDocumentCommand),\n/* harmony export */   se_DeleteInventoryCommand: () => (/* binding */ se_DeleteInventoryCommand),\n/* harmony export */   se_DeleteMaintenanceWindowCommand: () => (/* binding */ se_DeleteMaintenanceWindowCommand),\n/* harmony export */   se_DeleteOpsItemCommand: () => (/* binding */ se_DeleteOpsItemCommand),\n/* harmony export */   se_DeleteOpsMetadataCommand: () => (/* binding */ se_DeleteOpsMetadataCommand),\n/* harmony export */   se_DeleteParameterCommand: () => (/* binding */ se_DeleteParameterCommand),\n/* harmony export */   se_DeleteParametersCommand: () => (/* binding */ se_DeleteParametersCommand),\n/* harmony export */   se_DeletePatchBaselineCommand: () => (/* binding */ se_DeletePatchBaselineCommand),\n/* harmony export */   se_DeleteResourceDataSyncCommand: () => (/* binding */ se_DeleteResourceDataSyncCommand),\n/* harmony export */   se_DeleteResourcePolicyCommand: () => (/* binding */ se_DeleteResourcePolicyCommand),\n/* harmony export */   se_DeregisterManagedInstanceCommand: () => (/* binding */ se_DeregisterManagedInstanceCommand),\n/* harmony export */   se_DeregisterPatchBaselineForPatchGroupCommand: () => (/* binding */ se_DeregisterPatchBaselineForPatchGroupCommand),\n/* harmony export */   se_DeregisterTargetFromMaintenanceWindowCommand: () => (/* binding */ se_DeregisterTargetFromMaintenanceWindowCommand),\n/* harmony export */   se_DeregisterTaskFromMaintenanceWindowCommand: () => (/* binding */ se_DeregisterTaskFromMaintenanceWindowCommand),\n/* harmony export */   se_DescribeActivationsCommand: () => (/* binding */ se_DescribeActivationsCommand),\n/* harmony export */   se_DescribeAssociationCommand: () => (/* binding */ se_DescribeAssociationCommand),\n/* harmony export */   se_DescribeAssociationExecutionTargetsCommand: () => (/* binding */ se_DescribeAssociationExecutionTargetsCommand),\n/* harmony export */   se_DescribeAssociationExecutionsCommand: () => (/* binding */ se_DescribeAssociationExecutionsCommand),\n/* harmony export */   se_DescribeAutomationExecutionsCommand: () => (/* binding */ se_DescribeAutomationExecutionsCommand),\n/* harmony export */   se_DescribeAutomationStepExecutionsCommand: () => (/* binding */ se_DescribeAutomationStepExecutionsCommand),\n/* harmony export */   se_DescribeAvailablePatchesCommand: () => (/* binding */ se_DescribeAvailablePatchesCommand),\n/* harmony export */   se_DescribeDocumentCommand: () => (/* binding */ se_DescribeDocumentCommand),\n/* harmony export */   se_DescribeDocumentPermissionCommand: () => (/* binding */ se_DescribeDocumentPermissionCommand),\n/* harmony export */   se_DescribeEffectiveInstanceAssociationsCommand: () => (/* binding */ se_DescribeEffectiveInstanceAssociationsCommand),\n/* harmony export */   se_DescribeEffectivePatchesForPatchBaselineCommand: () => (/* binding */ se_DescribeEffectivePatchesForPatchBaselineCommand),\n/* harmony export */   se_DescribeInstanceAssociationsStatusCommand: () => (/* binding */ se_DescribeInstanceAssociationsStatusCommand),\n/* harmony export */   se_DescribeInstanceInformationCommand: () => (/* binding */ se_DescribeInstanceInformationCommand),\n/* harmony export */   se_DescribeInstancePatchStatesCommand: () => (/* binding */ se_DescribeInstancePatchStatesCommand),\n/* harmony export */   se_DescribeInstancePatchStatesForPatchGroupCommand: () => (/* binding */ se_DescribeInstancePatchStatesForPatchGroupCommand),\n/* harmony export */   se_DescribeInstancePatchesCommand: () => (/* binding */ se_DescribeInstancePatchesCommand),\n/* harmony export */   se_DescribeInventoryDeletionsCommand: () => (/* binding */ se_DescribeInventoryDeletionsCommand),\n/* harmony export */   se_DescribeMaintenanceWindowExecutionTaskInvocationsCommand: () => (/* binding */ se_DescribeMaintenanceWindowExecutionTaskInvocationsCommand),\n/* harmony export */   se_DescribeMaintenanceWindowExecutionTasksCommand: () => (/* binding */ se_DescribeMaintenanceWindowExecutionTasksCommand),\n/* harmony export */   se_DescribeMaintenanceWindowExecutionsCommand: () => (/* binding */ se_DescribeMaintenanceWindowExecutionsCommand),\n/* harmony export */   se_DescribeMaintenanceWindowScheduleCommand: () => (/* binding */ se_DescribeMaintenanceWindowScheduleCommand),\n/* harmony export */   se_DescribeMaintenanceWindowTargetsCommand: () => (/* binding */ se_DescribeMaintenanceWindowTargetsCommand),\n/* harmony export */   se_DescribeMaintenanceWindowTasksCommand: () => (/* binding */ se_DescribeMaintenanceWindowTasksCommand),\n/* harmony export */   se_DescribeMaintenanceWindowsCommand: () => (/* binding */ se_DescribeMaintenanceWindowsCommand),\n/* harmony export */   se_DescribeMaintenanceWindowsForTargetCommand: () => (/* binding */ se_DescribeMaintenanceWindowsForTargetCommand),\n/* harmony export */   se_DescribeOpsItemsCommand: () => (/* binding */ se_DescribeOpsItemsCommand),\n/* harmony export */   se_DescribeParametersCommand: () => (/* binding */ se_DescribeParametersCommand),\n/* harmony export */   se_DescribePatchBaselinesCommand: () => (/* binding */ se_DescribePatchBaselinesCommand),\n/* harmony export */   se_DescribePatchGroupStateCommand: () => (/* binding */ se_DescribePatchGroupStateCommand),\n/* harmony export */   se_DescribePatchGroupsCommand: () => (/* binding */ se_DescribePatchGroupsCommand),\n/* harmony export */   se_DescribePatchPropertiesCommand: () => (/* binding */ se_DescribePatchPropertiesCommand),\n/* harmony export */   se_DescribeSessionsCommand: () => (/* binding */ se_DescribeSessionsCommand),\n/* harmony export */   se_DisassociateOpsItemRelatedItemCommand: () => (/* binding */ se_DisassociateOpsItemRelatedItemCommand),\n/* harmony export */   se_GetAutomationExecutionCommand: () => (/* binding */ se_GetAutomationExecutionCommand),\n/* harmony export */   se_GetCalendarStateCommand: () => (/* binding */ se_GetCalendarStateCommand),\n/* harmony export */   se_GetCommandInvocationCommand: () => (/* binding */ se_GetCommandInvocationCommand),\n/* harmony export */   se_GetConnectionStatusCommand: () => (/* binding */ se_GetConnectionStatusCommand),\n/* harmony export */   se_GetDefaultPatchBaselineCommand: () => (/* binding */ se_GetDefaultPatchBaselineCommand),\n/* harmony export */   se_GetDeployablePatchSnapshotForInstanceCommand: () => (/* binding */ se_GetDeployablePatchSnapshotForInstanceCommand),\n/* harmony export */   se_GetDocumentCommand: () => (/* binding */ se_GetDocumentCommand),\n/* harmony export */   se_GetInventoryCommand: () => (/* binding */ se_GetInventoryCommand),\n/* harmony export */   se_GetInventorySchemaCommand: () => (/* binding */ se_GetInventorySchemaCommand),\n/* harmony export */   se_GetMaintenanceWindowCommand: () => (/* binding */ se_GetMaintenanceWindowCommand),\n/* harmony export */   se_GetMaintenanceWindowExecutionCommand: () => (/* binding */ se_GetMaintenanceWindowExecutionCommand),\n/* harmony export */   se_GetMaintenanceWindowExecutionTaskCommand: () => (/* binding */ se_GetMaintenanceWindowExecutionTaskCommand),\n/* harmony export */   se_GetMaintenanceWindowExecutionTaskInvocationCommand: () => (/* binding */ se_GetMaintenanceWindowExecutionTaskInvocationCommand),\n/* harmony export */   se_GetMaintenanceWindowTaskCommand: () => (/* binding */ se_GetMaintenanceWindowTaskCommand),\n/* harmony export */   se_GetOpsItemCommand: () => (/* binding */ se_GetOpsItemCommand),\n/* harmony export */   se_GetOpsMetadataCommand: () => (/* binding */ se_GetOpsMetadataCommand),\n/* harmony export */   se_GetOpsSummaryCommand: () => (/* binding */ se_GetOpsSummaryCommand),\n/* harmony export */   se_GetParameterCommand: () => (/* binding */ se_GetParameterCommand),\n/* harmony export */   se_GetParameterHistoryCommand: () => (/* binding */ se_GetParameterHistoryCommand),\n/* harmony export */   se_GetParametersByPathCommand: () => (/* binding */ se_GetParametersByPathCommand),\n/* harmony export */   se_GetParametersCommand: () => (/* binding */ se_GetParametersCommand),\n/* harmony export */   se_GetPatchBaselineCommand: () => (/* binding */ se_GetPatchBaselineCommand),\n/* harmony export */   se_GetPatchBaselineForPatchGroupCommand: () => (/* binding */ se_GetPatchBaselineForPatchGroupCommand),\n/* harmony export */   se_GetResourcePoliciesCommand: () => (/* binding */ se_GetResourcePoliciesCommand),\n/* harmony export */   se_GetServiceSettingCommand: () => (/* binding */ se_GetServiceSettingCommand),\n/* harmony export */   se_LabelParameterVersionCommand: () => (/* binding */ se_LabelParameterVersionCommand),\n/* harmony export */   se_ListAssociationVersionsCommand: () => (/* binding */ se_ListAssociationVersionsCommand),\n/* harmony export */   se_ListAssociationsCommand: () => (/* binding */ se_ListAssociationsCommand),\n/* harmony export */   se_ListCommandInvocationsCommand: () => (/* binding */ se_ListCommandInvocationsCommand),\n/* harmony export */   se_ListCommandsCommand: () => (/* binding */ se_ListCommandsCommand),\n/* harmony export */   se_ListComplianceItemsCommand: () => (/* binding */ se_ListComplianceItemsCommand),\n/* harmony export */   se_ListComplianceSummariesCommand: () => (/* binding */ se_ListComplianceSummariesCommand),\n/* harmony export */   se_ListDocumentMetadataHistoryCommand: () => (/* binding */ se_ListDocumentMetadataHistoryCommand),\n/* harmony export */   se_ListDocumentVersionsCommand: () => (/* binding */ se_ListDocumentVersionsCommand),\n/* harmony export */   se_ListDocumentsCommand: () => (/* binding */ se_ListDocumentsCommand),\n/* harmony export */   se_ListInventoryEntriesCommand: () => (/* binding */ se_ListInventoryEntriesCommand),\n/* harmony export */   se_ListOpsItemEventsCommand: () => (/* binding */ se_ListOpsItemEventsCommand),\n/* harmony export */   se_ListOpsItemRelatedItemsCommand: () => (/* binding */ se_ListOpsItemRelatedItemsCommand),\n/* harmony export */   se_ListOpsMetadataCommand: () => (/* binding */ se_ListOpsMetadataCommand),\n/* harmony export */   se_ListResourceComplianceSummariesCommand: () => (/* binding */ se_ListResourceComplianceSummariesCommand),\n/* harmony export */   se_ListResourceDataSyncCommand: () => (/* binding */ se_ListResourceDataSyncCommand),\n/* harmony export */   se_ListTagsForResourceCommand: () => (/* binding */ se_ListTagsForResourceCommand),\n/* harmony export */   se_ModifyDocumentPermissionCommand: () => (/* binding */ se_ModifyDocumentPermissionCommand),\n/* harmony export */   se_PutComplianceItemsCommand: () => (/* binding */ se_PutComplianceItemsCommand),\n/* harmony export */   se_PutInventoryCommand: () => (/* binding */ se_PutInventoryCommand),\n/* harmony export */   se_PutParameterCommand: () => (/* binding */ se_PutParameterCommand),\n/* harmony export */   se_PutResourcePolicyCommand: () => (/* binding */ se_PutResourcePolicyCommand),\n/* harmony export */   se_RegisterDefaultPatchBaselineCommand: () => (/* binding */ se_RegisterDefaultPatchBaselineCommand),\n/* harmony export */   se_RegisterPatchBaselineForPatchGroupCommand: () => (/* binding */ se_RegisterPatchBaselineForPatchGroupCommand),\n/* harmony export */   se_RegisterTargetWithMaintenanceWindowCommand: () => (/* binding */ se_RegisterTargetWithMaintenanceWindowCommand),\n/* harmony export */   se_RegisterTaskWithMaintenanceWindowCommand: () => (/* binding */ se_RegisterTaskWithMaintenanceWindowCommand),\n/* harmony export */   se_RemoveTagsFromResourceCommand: () => (/* binding */ se_RemoveTagsFromResourceCommand),\n/* harmony export */   se_ResetServiceSettingCommand: () => (/* binding */ se_ResetServiceSettingCommand),\n/* harmony export */   se_ResumeSessionCommand: () => (/* binding */ se_ResumeSessionCommand),\n/* harmony export */   se_SendAutomationSignalCommand: () => (/* binding */ se_SendAutomationSignalCommand),\n/* harmony export */   se_SendCommandCommand: () => (/* binding */ se_SendCommandCommand),\n/* harmony export */   se_StartAssociationsOnceCommand: () => (/* binding */ se_StartAssociationsOnceCommand),\n/* harmony export */   se_StartAutomationExecutionCommand: () => (/* binding */ se_StartAutomationExecutionCommand),\n/* harmony export */   se_StartChangeRequestExecutionCommand: () => (/* binding */ se_StartChangeRequestExecutionCommand),\n/* harmony export */   se_StartSessionCommand: () => (/* binding */ se_StartSessionCommand),\n/* harmony export */   se_StopAutomationExecutionCommand: () => (/* binding */ se_StopAutomationExecutionCommand),\n/* harmony export */   se_TerminateSessionCommand: () => (/* binding */ se_TerminateSessionCommand),\n/* harmony export */   se_UnlabelParameterVersionCommand: () => (/* binding */ se_UnlabelParameterVersionCommand),\n/* harmony export */   se_UpdateAssociationCommand: () => (/* binding */ se_UpdateAssociationCommand),\n/* harmony export */   se_UpdateAssociationStatusCommand: () => (/* binding */ se_UpdateAssociationStatusCommand),\n/* harmony export */   se_UpdateDocumentCommand: () => (/* binding */ se_UpdateDocumentCommand),\n/* harmony export */   se_UpdateDocumentDefaultVersionCommand: () => (/* binding */ se_UpdateDocumentDefaultVersionCommand),\n/* harmony export */   se_UpdateDocumentMetadataCommand: () => (/* binding */ se_UpdateDocumentMetadataCommand),\n/* harmony export */   se_UpdateMaintenanceWindowCommand: () => (/* binding */ se_UpdateMaintenanceWindowCommand),\n/* harmony export */   se_UpdateMaintenanceWindowTargetCommand: () => (/* binding */ se_UpdateMaintenanceWindowTargetCommand),\n/* harmony export */   se_UpdateMaintenanceWindowTaskCommand: () => (/* binding */ se_UpdateMaintenanceWindowTaskCommand),\n/* harmony export */   se_UpdateManagedInstanceRoleCommand: () => (/* binding */ se_UpdateManagedInstanceRoleCommand),\n/* harmony export */   se_UpdateOpsItemCommand: () => (/* binding */ se_UpdateOpsItemCommand),\n/* harmony export */   se_UpdateOpsMetadataCommand: () => (/* binding */ se_UpdateOpsMetadataCommand),\n/* harmony export */   se_UpdatePatchBaselineCommand: () => (/* binding */ se_UpdatePatchBaselineCommand),\n/* harmony export */   se_UpdateResourceDataSyncCommand: () => (/* binding */ se_UpdateResourceDataSyncCommand),\n/* harmony export */   se_UpdateServiceSettingCommand: () => (/* binding */ se_UpdateServiceSettingCommand)\n/* harmony export */ });\n/* harmony import */ var _smithy_protocol_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @smithy/protocol-http */ \"(rsc)/../../node_modules/.pnpm/@smithy+protocol-http@3.0.9/node_modules/@smithy/protocol-http/dist-es/index.js\");\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @smithy/smithy-client */ \"(rsc)/../../node_modules/.pnpm/@smithy+smithy-client@2.1.15/node_modules/@smithy/smithy-client/dist-es/index.js\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uuid */ \"(rsc)/../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-node/v4.js\");\n/* harmony import */ var _models_models_0__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../models/models_0 */ \"(rsc)/../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/models/models_0.js\");\n/* harmony import */ var _models_models_1__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../models/models_1 */ \"(rsc)/../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/models/models_1.js\");\n/* harmony import */ var _models_models_2__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../models/models_2 */ \"(rsc)/../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/models/models_2.js\");\n/* harmony import */ var _models_SSMServiceException__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../models/SSMServiceException */ \"(rsc)/../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/models/SSMServiceException.js\");\n\n\n\n\n\n\n\nconst se_AddTagsToResourceCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"AddTagsToResource\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_AssociateOpsItemRelatedItemCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"AssociateOpsItemRelatedItem\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_CancelCommandCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"CancelCommand\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_CancelMaintenanceWindowExecutionCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"CancelMaintenanceWindowExecution\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_CreateActivationCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"CreateActivation\");\n    let body;\n    body = JSON.stringify(se_CreateActivationRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_CreateAssociationCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"CreateAssociation\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_CreateAssociationBatchCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"CreateAssociationBatch\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_CreateDocumentCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"CreateDocument\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_CreateMaintenanceWindowCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"CreateMaintenanceWindow\");\n    let body;\n    body = JSON.stringify(se_CreateMaintenanceWindowRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_CreateOpsItemCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"CreateOpsItem\");\n    let body;\n    body = JSON.stringify(se_CreateOpsItemRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_CreateOpsMetadataCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"CreateOpsMetadata\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_CreatePatchBaselineCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"CreatePatchBaseline\");\n    let body;\n    body = JSON.stringify(se_CreatePatchBaselineRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_CreateResourceDataSyncCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"CreateResourceDataSync\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DeleteActivationCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"DeleteActivation\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DeleteAssociationCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"DeleteAssociation\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DeleteDocumentCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"DeleteDocument\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DeleteInventoryCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"DeleteInventory\");\n    let body;\n    body = JSON.stringify(se_DeleteInventoryRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DeleteMaintenanceWindowCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"DeleteMaintenanceWindow\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DeleteOpsItemCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"DeleteOpsItem\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DeleteOpsMetadataCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"DeleteOpsMetadata\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DeleteParameterCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"DeleteParameter\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DeleteParametersCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"DeleteParameters\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DeletePatchBaselineCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"DeletePatchBaseline\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DeleteResourceDataSyncCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"DeleteResourceDataSync\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DeleteResourcePolicyCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"DeleteResourcePolicy\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DeregisterManagedInstanceCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"DeregisterManagedInstance\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DeregisterPatchBaselineForPatchGroupCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"DeregisterPatchBaselineForPatchGroup\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DeregisterTargetFromMaintenanceWindowCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"DeregisterTargetFromMaintenanceWindow\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DeregisterTaskFromMaintenanceWindowCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"DeregisterTaskFromMaintenanceWindow\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DescribeActivationsCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"DescribeActivations\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DescribeAssociationCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"DescribeAssociation\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DescribeAssociationExecutionsCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"DescribeAssociationExecutions\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DescribeAssociationExecutionTargetsCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"DescribeAssociationExecutionTargets\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DescribeAutomationExecutionsCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"DescribeAutomationExecutions\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DescribeAutomationStepExecutionsCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"DescribeAutomationStepExecutions\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DescribeAvailablePatchesCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"DescribeAvailablePatches\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DescribeDocumentCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"DescribeDocument\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DescribeDocumentPermissionCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"DescribeDocumentPermission\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DescribeEffectiveInstanceAssociationsCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"DescribeEffectiveInstanceAssociations\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DescribeEffectivePatchesForPatchBaselineCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"DescribeEffectivePatchesForPatchBaseline\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DescribeInstanceAssociationsStatusCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"DescribeInstanceAssociationsStatus\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DescribeInstanceInformationCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"DescribeInstanceInformation\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DescribeInstancePatchesCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"DescribeInstancePatches\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DescribeInstancePatchStatesCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"DescribeInstancePatchStates\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DescribeInstancePatchStatesForPatchGroupCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"DescribeInstancePatchStatesForPatchGroup\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DescribeInventoryDeletionsCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"DescribeInventoryDeletions\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DescribeMaintenanceWindowExecutionsCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"DescribeMaintenanceWindowExecutions\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DescribeMaintenanceWindowExecutionTaskInvocationsCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"DescribeMaintenanceWindowExecutionTaskInvocations\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DescribeMaintenanceWindowExecutionTasksCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"DescribeMaintenanceWindowExecutionTasks\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DescribeMaintenanceWindowsCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"DescribeMaintenanceWindows\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DescribeMaintenanceWindowScheduleCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"DescribeMaintenanceWindowSchedule\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DescribeMaintenanceWindowsForTargetCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"DescribeMaintenanceWindowsForTarget\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DescribeMaintenanceWindowTargetsCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"DescribeMaintenanceWindowTargets\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DescribeMaintenanceWindowTasksCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"DescribeMaintenanceWindowTasks\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DescribeOpsItemsCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"DescribeOpsItems\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DescribeParametersCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"DescribeParameters\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DescribePatchBaselinesCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"DescribePatchBaselines\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DescribePatchGroupsCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"DescribePatchGroups\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DescribePatchGroupStateCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"DescribePatchGroupState\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DescribePatchPropertiesCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"DescribePatchProperties\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DescribeSessionsCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"DescribeSessions\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DisassociateOpsItemRelatedItemCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"DisassociateOpsItemRelatedItem\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_GetAutomationExecutionCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"GetAutomationExecution\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_GetCalendarStateCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"GetCalendarState\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_GetCommandInvocationCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"GetCommandInvocation\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_GetConnectionStatusCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"GetConnectionStatus\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_GetDefaultPatchBaselineCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"GetDefaultPatchBaseline\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_GetDeployablePatchSnapshotForInstanceCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"GetDeployablePatchSnapshotForInstance\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_GetDocumentCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"GetDocument\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_GetInventoryCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"GetInventory\");\n    let body;\n    body = JSON.stringify(se_GetInventoryRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_GetInventorySchemaCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"GetInventorySchema\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_GetMaintenanceWindowCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"GetMaintenanceWindow\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_GetMaintenanceWindowExecutionCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"GetMaintenanceWindowExecution\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_GetMaintenanceWindowExecutionTaskCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"GetMaintenanceWindowExecutionTask\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_GetMaintenanceWindowExecutionTaskInvocationCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"GetMaintenanceWindowExecutionTaskInvocation\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_GetMaintenanceWindowTaskCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"GetMaintenanceWindowTask\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_GetOpsItemCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"GetOpsItem\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_GetOpsMetadataCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"GetOpsMetadata\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_GetOpsSummaryCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"GetOpsSummary\");\n    let body;\n    body = JSON.stringify(se_GetOpsSummaryRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_GetParameterCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"GetParameter\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_GetParameterHistoryCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"GetParameterHistory\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_GetParametersCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"GetParameters\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_GetParametersByPathCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"GetParametersByPath\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_GetPatchBaselineCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"GetPatchBaseline\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_GetPatchBaselineForPatchGroupCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"GetPatchBaselineForPatchGroup\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_GetResourcePoliciesCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"GetResourcePolicies\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_GetServiceSettingCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"GetServiceSetting\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_LabelParameterVersionCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"LabelParameterVersion\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_ListAssociationsCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"ListAssociations\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_ListAssociationVersionsCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"ListAssociationVersions\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_ListCommandInvocationsCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"ListCommandInvocations\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_ListCommandsCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"ListCommands\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_ListComplianceItemsCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"ListComplianceItems\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_ListComplianceSummariesCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"ListComplianceSummaries\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_ListDocumentMetadataHistoryCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"ListDocumentMetadataHistory\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_ListDocumentsCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"ListDocuments\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_ListDocumentVersionsCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"ListDocumentVersions\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_ListInventoryEntriesCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"ListInventoryEntries\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_ListOpsItemEventsCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"ListOpsItemEvents\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_ListOpsItemRelatedItemsCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"ListOpsItemRelatedItems\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_ListOpsMetadataCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"ListOpsMetadata\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_ListResourceComplianceSummariesCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"ListResourceComplianceSummaries\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_ListResourceDataSyncCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"ListResourceDataSync\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_ListTagsForResourceCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"ListTagsForResource\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_ModifyDocumentPermissionCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"ModifyDocumentPermission\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_PutComplianceItemsCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"PutComplianceItems\");\n    let body;\n    body = JSON.stringify(se_PutComplianceItemsRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_PutInventoryCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"PutInventory\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_PutParameterCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"PutParameter\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_PutResourcePolicyCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"PutResourcePolicy\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_RegisterDefaultPatchBaselineCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"RegisterDefaultPatchBaseline\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_RegisterPatchBaselineForPatchGroupCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"RegisterPatchBaselineForPatchGroup\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_RegisterTargetWithMaintenanceWindowCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"RegisterTargetWithMaintenanceWindow\");\n    let body;\n    body = JSON.stringify(se_RegisterTargetWithMaintenanceWindowRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_RegisterTaskWithMaintenanceWindowCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"RegisterTaskWithMaintenanceWindow\");\n    let body;\n    body = JSON.stringify(se_RegisterTaskWithMaintenanceWindowRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_RemoveTagsFromResourceCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"RemoveTagsFromResource\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_ResetServiceSettingCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"ResetServiceSetting\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_ResumeSessionCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"ResumeSession\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_SendAutomationSignalCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"SendAutomationSignal\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_SendCommandCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"SendCommand\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_StartAssociationsOnceCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"StartAssociationsOnce\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_StartAutomationExecutionCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"StartAutomationExecution\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_StartChangeRequestExecutionCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"StartChangeRequestExecution\");\n    let body;\n    body = JSON.stringify(se_StartChangeRequestExecutionRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_StartSessionCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"StartSession\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_StopAutomationExecutionCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"StopAutomationExecution\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_TerminateSessionCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"TerminateSession\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_UnlabelParameterVersionCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"UnlabelParameterVersion\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_UpdateAssociationCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"UpdateAssociation\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_UpdateAssociationStatusCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"UpdateAssociationStatus\");\n    let body;\n    body = JSON.stringify(se_UpdateAssociationStatusRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_UpdateDocumentCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"UpdateDocument\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_UpdateDocumentDefaultVersionCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"UpdateDocumentDefaultVersion\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_UpdateDocumentMetadataCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"UpdateDocumentMetadata\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_UpdateMaintenanceWindowCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"UpdateMaintenanceWindow\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_UpdateMaintenanceWindowTargetCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"UpdateMaintenanceWindowTarget\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_UpdateMaintenanceWindowTaskCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"UpdateMaintenanceWindowTask\");\n    let body;\n    body = JSON.stringify(se_UpdateMaintenanceWindowTaskRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_UpdateManagedInstanceRoleCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"UpdateManagedInstanceRole\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_UpdateOpsItemCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"UpdateOpsItem\");\n    let body;\n    body = JSON.stringify(se_UpdateOpsItemRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_UpdateOpsMetadataCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"UpdateOpsMetadata\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_UpdatePatchBaselineCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"UpdatePatchBaseline\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_UpdateResourceDataSyncCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"UpdateResourceDataSync\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_UpdateServiceSettingCommand = async (input, context)=>{\n    const headers = sharedHeaders(\"UpdateServiceSetting\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst de_AddTagsToResourceCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_AddTagsToResourceCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_AddTagsToResourceCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidResourceId\":\n        case \"com.amazonaws.ssm#InvalidResourceId\":\n            throw await de_InvalidResourceIdRes(parsedOutput, context);\n        case \"InvalidResourceType\":\n        case \"com.amazonaws.ssm#InvalidResourceType\":\n            throw await de_InvalidResourceTypeRes(parsedOutput, context);\n        case \"TooManyTagsError\":\n        case \"com.amazonaws.ssm#TooManyTagsError\":\n            throw await de_TooManyTagsErrorRes(parsedOutput, context);\n        case \"TooManyUpdates\":\n        case \"com.amazonaws.ssm#TooManyUpdates\":\n            throw await de_TooManyUpdatesRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_AssociateOpsItemRelatedItemCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_AssociateOpsItemRelatedItemCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_AssociateOpsItemRelatedItemCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"OpsItemConflictException\":\n        case \"com.amazonaws.ssm#OpsItemConflictException\":\n            throw await de_OpsItemConflictExceptionRes(parsedOutput, context);\n        case \"OpsItemInvalidParameterException\":\n        case \"com.amazonaws.ssm#OpsItemInvalidParameterException\":\n            throw await de_OpsItemInvalidParameterExceptionRes(parsedOutput, context);\n        case \"OpsItemLimitExceededException\":\n        case \"com.amazonaws.ssm#OpsItemLimitExceededException\":\n            throw await de_OpsItemLimitExceededExceptionRes(parsedOutput, context);\n        case \"OpsItemNotFoundException\":\n        case \"com.amazonaws.ssm#OpsItemNotFoundException\":\n            throw await de_OpsItemNotFoundExceptionRes(parsedOutput, context);\n        case \"OpsItemRelatedItemAlreadyExistsException\":\n        case \"com.amazonaws.ssm#OpsItemRelatedItemAlreadyExistsException\":\n            throw await de_OpsItemRelatedItemAlreadyExistsExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_CancelCommandCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CancelCommandCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_CancelCommandCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"DuplicateInstanceId\":\n        case \"com.amazonaws.ssm#DuplicateInstanceId\":\n            throw await de_DuplicateInstanceIdRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidCommandId\":\n        case \"com.amazonaws.ssm#InvalidCommandId\":\n            throw await de_InvalidCommandIdRes(parsedOutput, context);\n        case \"InvalidInstanceId\":\n        case \"com.amazonaws.ssm#InvalidInstanceId\":\n            throw await de_InvalidInstanceIdRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_CancelMaintenanceWindowExecutionCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CancelMaintenanceWindowExecutionCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_CancelMaintenanceWindowExecutionCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"DoesNotExistException\":\n        case \"com.amazonaws.ssm#DoesNotExistException\":\n            throw await de_DoesNotExistExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_CreateActivationCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CreateActivationCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_CreateActivationCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidParameters\":\n        case \"com.amazonaws.ssm#InvalidParameters\":\n            throw await de_InvalidParametersRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_CreateAssociationCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CreateAssociationCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_CreateAssociationResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_CreateAssociationCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"AssociationAlreadyExists\":\n        case \"com.amazonaws.ssm#AssociationAlreadyExists\":\n            throw await de_AssociationAlreadyExistsRes(parsedOutput, context);\n        case \"AssociationLimitExceeded\":\n        case \"com.amazonaws.ssm#AssociationLimitExceeded\":\n            throw await de_AssociationLimitExceededRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidDocument\":\n        case \"com.amazonaws.ssm#InvalidDocument\":\n            throw await de_InvalidDocumentRes(parsedOutput, context);\n        case \"InvalidDocumentVersion\":\n        case \"com.amazonaws.ssm#InvalidDocumentVersion\":\n            throw await de_InvalidDocumentVersionRes(parsedOutput, context);\n        case \"InvalidInstanceId\":\n        case \"com.amazonaws.ssm#InvalidInstanceId\":\n            throw await de_InvalidInstanceIdRes(parsedOutput, context);\n        case \"InvalidOutputLocation\":\n        case \"com.amazonaws.ssm#InvalidOutputLocation\":\n            throw await de_InvalidOutputLocationRes(parsedOutput, context);\n        case \"InvalidParameters\":\n        case \"com.amazonaws.ssm#InvalidParameters\":\n            throw await de_InvalidParametersRes(parsedOutput, context);\n        case \"InvalidSchedule\":\n        case \"com.amazonaws.ssm#InvalidSchedule\":\n            throw await de_InvalidScheduleRes(parsedOutput, context);\n        case \"InvalidTag\":\n        case \"com.amazonaws.ssm#InvalidTag\":\n            throw await de_InvalidTagRes(parsedOutput, context);\n        case \"InvalidTarget\":\n        case \"com.amazonaws.ssm#InvalidTarget\":\n            throw await de_InvalidTargetRes(parsedOutput, context);\n        case \"InvalidTargetMaps\":\n        case \"com.amazonaws.ssm#InvalidTargetMaps\":\n            throw await de_InvalidTargetMapsRes(parsedOutput, context);\n        case \"UnsupportedPlatformType\":\n        case \"com.amazonaws.ssm#UnsupportedPlatformType\":\n            throw await de_UnsupportedPlatformTypeRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_CreateAssociationBatchCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CreateAssociationBatchCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_CreateAssociationBatchResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_CreateAssociationBatchCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"AssociationLimitExceeded\":\n        case \"com.amazonaws.ssm#AssociationLimitExceeded\":\n            throw await de_AssociationLimitExceededRes(parsedOutput, context);\n        case \"DuplicateInstanceId\":\n        case \"com.amazonaws.ssm#DuplicateInstanceId\":\n            throw await de_DuplicateInstanceIdRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidDocument\":\n        case \"com.amazonaws.ssm#InvalidDocument\":\n            throw await de_InvalidDocumentRes(parsedOutput, context);\n        case \"InvalidDocumentVersion\":\n        case \"com.amazonaws.ssm#InvalidDocumentVersion\":\n            throw await de_InvalidDocumentVersionRes(parsedOutput, context);\n        case \"InvalidInstanceId\":\n        case \"com.amazonaws.ssm#InvalidInstanceId\":\n            throw await de_InvalidInstanceIdRes(parsedOutput, context);\n        case \"InvalidOutputLocation\":\n        case \"com.amazonaws.ssm#InvalidOutputLocation\":\n            throw await de_InvalidOutputLocationRes(parsedOutput, context);\n        case \"InvalidParameters\":\n        case \"com.amazonaws.ssm#InvalidParameters\":\n            throw await de_InvalidParametersRes(parsedOutput, context);\n        case \"InvalidSchedule\":\n        case \"com.amazonaws.ssm#InvalidSchedule\":\n            throw await de_InvalidScheduleRes(parsedOutput, context);\n        case \"InvalidTarget\":\n        case \"com.amazonaws.ssm#InvalidTarget\":\n            throw await de_InvalidTargetRes(parsedOutput, context);\n        case \"InvalidTargetMaps\":\n        case \"com.amazonaws.ssm#InvalidTargetMaps\":\n            throw await de_InvalidTargetMapsRes(parsedOutput, context);\n        case \"UnsupportedPlatformType\":\n        case \"com.amazonaws.ssm#UnsupportedPlatformType\":\n            throw await de_UnsupportedPlatformTypeRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_CreateDocumentCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CreateDocumentCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_CreateDocumentResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_CreateDocumentCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"DocumentAlreadyExists\":\n        case \"com.amazonaws.ssm#DocumentAlreadyExists\":\n            throw await de_DocumentAlreadyExistsRes(parsedOutput, context);\n        case \"DocumentLimitExceeded\":\n        case \"com.amazonaws.ssm#DocumentLimitExceeded\":\n            throw await de_DocumentLimitExceededRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidDocumentContent\":\n        case \"com.amazonaws.ssm#InvalidDocumentContent\":\n            throw await de_InvalidDocumentContentRes(parsedOutput, context);\n        case \"InvalidDocumentSchemaVersion\":\n        case \"com.amazonaws.ssm#InvalidDocumentSchemaVersion\":\n            throw await de_InvalidDocumentSchemaVersionRes(parsedOutput, context);\n        case \"MaxDocumentSizeExceeded\":\n        case \"com.amazonaws.ssm#MaxDocumentSizeExceeded\":\n            throw await de_MaxDocumentSizeExceededRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_CreateMaintenanceWindowCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CreateMaintenanceWindowCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_CreateMaintenanceWindowCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"IdempotentParameterMismatch\":\n        case \"com.amazonaws.ssm#IdempotentParameterMismatch\":\n            throw await de_IdempotentParameterMismatchRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"ResourceLimitExceededException\":\n        case \"com.amazonaws.ssm#ResourceLimitExceededException\":\n            throw await de_ResourceLimitExceededExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_CreateOpsItemCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CreateOpsItemCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_CreateOpsItemCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"OpsItemAccessDeniedException\":\n        case \"com.amazonaws.ssm#OpsItemAccessDeniedException\":\n            throw await de_OpsItemAccessDeniedExceptionRes(parsedOutput, context);\n        case \"OpsItemAlreadyExistsException\":\n        case \"com.amazonaws.ssm#OpsItemAlreadyExistsException\":\n            throw await de_OpsItemAlreadyExistsExceptionRes(parsedOutput, context);\n        case \"OpsItemInvalidParameterException\":\n        case \"com.amazonaws.ssm#OpsItemInvalidParameterException\":\n            throw await de_OpsItemInvalidParameterExceptionRes(parsedOutput, context);\n        case \"OpsItemLimitExceededException\":\n        case \"com.amazonaws.ssm#OpsItemLimitExceededException\":\n            throw await de_OpsItemLimitExceededExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_CreateOpsMetadataCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CreateOpsMetadataCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_CreateOpsMetadataCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"OpsMetadataAlreadyExistsException\":\n        case \"com.amazonaws.ssm#OpsMetadataAlreadyExistsException\":\n            throw await de_OpsMetadataAlreadyExistsExceptionRes(parsedOutput, context);\n        case \"OpsMetadataInvalidArgumentException\":\n        case \"com.amazonaws.ssm#OpsMetadataInvalidArgumentException\":\n            throw await de_OpsMetadataInvalidArgumentExceptionRes(parsedOutput, context);\n        case \"OpsMetadataLimitExceededException\":\n        case \"com.amazonaws.ssm#OpsMetadataLimitExceededException\":\n            throw await de_OpsMetadataLimitExceededExceptionRes(parsedOutput, context);\n        case \"OpsMetadataTooManyUpdatesException\":\n        case \"com.amazonaws.ssm#OpsMetadataTooManyUpdatesException\":\n            throw await de_OpsMetadataTooManyUpdatesExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_CreatePatchBaselineCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CreatePatchBaselineCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_CreatePatchBaselineCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"IdempotentParameterMismatch\":\n        case \"com.amazonaws.ssm#IdempotentParameterMismatch\":\n            throw await de_IdempotentParameterMismatchRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"ResourceLimitExceededException\":\n        case \"com.amazonaws.ssm#ResourceLimitExceededException\":\n            throw await de_ResourceLimitExceededExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_CreateResourceDataSyncCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CreateResourceDataSyncCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_CreateResourceDataSyncCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"ResourceDataSyncAlreadyExistsException\":\n        case \"com.amazonaws.ssm#ResourceDataSyncAlreadyExistsException\":\n            throw await de_ResourceDataSyncAlreadyExistsExceptionRes(parsedOutput, context);\n        case \"ResourceDataSyncCountExceededException\":\n        case \"com.amazonaws.ssm#ResourceDataSyncCountExceededException\":\n            throw await de_ResourceDataSyncCountExceededExceptionRes(parsedOutput, context);\n        case \"ResourceDataSyncInvalidConfigurationException\":\n        case \"com.amazonaws.ssm#ResourceDataSyncInvalidConfigurationException\":\n            throw await de_ResourceDataSyncInvalidConfigurationExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_DeleteActivationCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_DeleteActivationCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_DeleteActivationCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidActivation\":\n        case \"com.amazonaws.ssm#InvalidActivation\":\n            throw await de_InvalidActivationRes(parsedOutput, context);\n        case \"InvalidActivationId\":\n        case \"com.amazonaws.ssm#InvalidActivationId\":\n            throw await de_InvalidActivationIdRes(parsedOutput, context);\n        case \"TooManyUpdates\":\n        case \"com.amazonaws.ssm#TooManyUpdates\":\n            throw await de_TooManyUpdatesRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_DeleteAssociationCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_DeleteAssociationCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_DeleteAssociationCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"AssociationDoesNotExist\":\n        case \"com.amazonaws.ssm#AssociationDoesNotExist\":\n            throw await de_AssociationDoesNotExistRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidDocument\":\n        case \"com.amazonaws.ssm#InvalidDocument\":\n            throw await de_InvalidDocumentRes(parsedOutput, context);\n        case \"InvalidInstanceId\":\n        case \"com.amazonaws.ssm#InvalidInstanceId\":\n            throw await de_InvalidInstanceIdRes(parsedOutput, context);\n        case \"TooManyUpdates\":\n        case \"com.amazonaws.ssm#TooManyUpdates\":\n            throw await de_TooManyUpdatesRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_DeleteDocumentCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_DeleteDocumentCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_DeleteDocumentCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"AssociatedInstances\":\n        case \"com.amazonaws.ssm#AssociatedInstances\":\n            throw await de_AssociatedInstancesRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidDocument\":\n        case \"com.amazonaws.ssm#InvalidDocument\":\n            throw await de_InvalidDocumentRes(parsedOutput, context);\n        case \"InvalidDocumentOperation\":\n        case \"com.amazonaws.ssm#InvalidDocumentOperation\":\n            throw await de_InvalidDocumentOperationRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_DeleteInventoryCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_DeleteInventoryCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_DeleteInventoryCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidDeleteInventoryParametersException\":\n        case \"com.amazonaws.ssm#InvalidDeleteInventoryParametersException\":\n            throw await de_InvalidDeleteInventoryParametersExceptionRes(parsedOutput, context);\n        case \"InvalidInventoryRequestException\":\n        case \"com.amazonaws.ssm#InvalidInventoryRequestException\":\n            throw await de_InvalidInventoryRequestExceptionRes(parsedOutput, context);\n        case \"InvalidOptionException\":\n        case \"com.amazonaws.ssm#InvalidOptionException\":\n            throw await de_InvalidOptionExceptionRes(parsedOutput, context);\n        case \"InvalidTypeNameException\":\n        case \"com.amazonaws.ssm#InvalidTypeNameException\":\n            throw await de_InvalidTypeNameExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_DeleteMaintenanceWindowCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_DeleteMaintenanceWindowCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_DeleteMaintenanceWindowCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_DeleteOpsItemCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_DeleteOpsItemCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_DeleteOpsItemCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"OpsItemInvalidParameterException\":\n        case \"com.amazonaws.ssm#OpsItemInvalidParameterException\":\n            throw await de_OpsItemInvalidParameterExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_DeleteOpsMetadataCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_DeleteOpsMetadataCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_DeleteOpsMetadataCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"OpsMetadataInvalidArgumentException\":\n        case \"com.amazonaws.ssm#OpsMetadataInvalidArgumentException\":\n            throw await de_OpsMetadataInvalidArgumentExceptionRes(parsedOutput, context);\n        case \"OpsMetadataNotFoundException\":\n        case \"com.amazonaws.ssm#OpsMetadataNotFoundException\":\n            throw await de_OpsMetadataNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_DeleteParameterCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_DeleteParameterCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_DeleteParameterCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"ParameterNotFound\":\n        case \"com.amazonaws.ssm#ParameterNotFound\":\n            throw await de_ParameterNotFoundRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_DeleteParametersCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_DeleteParametersCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_DeleteParametersCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_DeletePatchBaselineCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_DeletePatchBaselineCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_DeletePatchBaselineCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"ResourceInUseException\":\n        case \"com.amazonaws.ssm#ResourceInUseException\":\n            throw await de_ResourceInUseExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_DeleteResourceDataSyncCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_DeleteResourceDataSyncCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_DeleteResourceDataSyncCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"ResourceDataSyncInvalidConfigurationException\":\n        case \"com.amazonaws.ssm#ResourceDataSyncInvalidConfigurationException\":\n            throw await de_ResourceDataSyncInvalidConfigurationExceptionRes(parsedOutput, context);\n        case \"ResourceDataSyncNotFoundException\":\n        case \"com.amazonaws.ssm#ResourceDataSyncNotFoundException\":\n            throw await de_ResourceDataSyncNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_DeleteResourcePolicyCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_DeleteResourcePolicyCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_DeleteResourcePolicyCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"ResourcePolicyConflictException\":\n        case \"com.amazonaws.ssm#ResourcePolicyConflictException\":\n            throw await de_ResourcePolicyConflictExceptionRes(parsedOutput, context);\n        case \"ResourcePolicyInvalidParameterException\":\n        case \"com.amazonaws.ssm#ResourcePolicyInvalidParameterException\":\n            throw await de_ResourcePolicyInvalidParameterExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_DeregisterManagedInstanceCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_DeregisterManagedInstanceCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_DeregisterManagedInstanceCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidInstanceId\":\n        case \"com.amazonaws.ssm#InvalidInstanceId\":\n            throw await de_InvalidInstanceIdRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_DeregisterPatchBaselineForPatchGroupCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_DeregisterPatchBaselineForPatchGroupCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_DeregisterPatchBaselineForPatchGroupCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidResourceId\":\n        case \"com.amazonaws.ssm#InvalidResourceId\":\n            throw await de_InvalidResourceIdRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_DeregisterTargetFromMaintenanceWindowCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_DeregisterTargetFromMaintenanceWindowCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_DeregisterTargetFromMaintenanceWindowCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"DoesNotExistException\":\n        case \"com.amazonaws.ssm#DoesNotExistException\":\n            throw await de_DoesNotExistExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"TargetInUseException\":\n        case \"com.amazonaws.ssm#TargetInUseException\":\n            throw await de_TargetInUseExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_DeregisterTaskFromMaintenanceWindowCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_DeregisterTaskFromMaintenanceWindowCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_DeregisterTaskFromMaintenanceWindowCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"DoesNotExistException\":\n        case \"com.amazonaws.ssm#DoesNotExistException\":\n            throw await de_DoesNotExistExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_DescribeActivationsCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_DescribeActivationsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeActivationsResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_DescribeActivationsCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidFilter\":\n        case \"com.amazonaws.ssm#InvalidFilter\":\n            throw await de_InvalidFilterRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_DescribeAssociationCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_DescribeAssociationCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeAssociationResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_DescribeAssociationCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"AssociationDoesNotExist\":\n        case \"com.amazonaws.ssm#AssociationDoesNotExist\":\n            throw await de_AssociationDoesNotExistRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidAssociationVersion\":\n        case \"com.amazonaws.ssm#InvalidAssociationVersion\":\n            throw await de_InvalidAssociationVersionRes(parsedOutput, context);\n        case \"InvalidDocument\":\n        case \"com.amazonaws.ssm#InvalidDocument\":\n            throw await de_InvalidDocumentRes(parsedOutput, context);\n        case \"InvalidInstanceId\":\n        case \"com.amazonaws.ssm#InvalidInstanceId\":\n            throw await de_InvalidInstanceIdRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_DescribeAssociationExecutionsCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_DescribeAssociationExecutionsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeAssociationExecutionsResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_DescribeAssociationExecutionsCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"AssociationDoesNotExist\":\n        case \"com.amazonaws.ssm#AssociationDoesNotExist\":\n            throw await de_AssociationDoesNotExistRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_DescribeAssociationExecutionTargetsCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_DescribeAssociationExecutionTargetsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeAssociationExecutionTargetsResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_DescribeAssociationExecutionTargetsCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"AssociationDoesNotExist\":\n        case \"com.amazonaws.ssm#AssociationDoesNotExist\":\n            throw await de_AssociationDoesNotExistRes(parsedOutput, context);\n        case \"AssociationExecutionDoesNotExist\":\n        case \"com.amazonaws.ssm#AssociationExecutionDoesNotExist\":\n            throw await de_AssociationExecutionDoesNotExistRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_DescribeAutomationExecutionsCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_DescribeAutomationExecutionsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeAutomationExecutionsResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_DescribeAutomationExecutionsCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidFilterKey\":\n        case \"com.amazonaws.ssm#InvalidFilterKey\":\n            throw await de_InvalidFilterKeyRes(parsedOutput, context);\n        case \"InvalidFilterValue\":\n        case \"com.amazonaws.ssm#InvalidFilterValue\":\n            throw await de_InvalidFilterValueRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_DescribeAutomationStepExecutionsCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_DescribeAutomationStepExecutionsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeAutomationStepExecutionsResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_DescribeAutomationStepExecutionsCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"AutomationExecutionNotFoundException\":\n        case \"com.amazonaws.ssm#AutomationExecutionNotFoundException\":\n            throw await de_AutomationExecutionNotFoundExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidFilterKey\":\n        case \"com.amazonaws.ssm#InvalidFilterKey\":\n            throw await de_InvalidFilterKeyRes(parsedOutput, context);\n        case \"InvalidFilterValue\":\n        case \"com.amazonaws.ssm#InvalidFilterValue\":\n            throw await de_InvalidFilterValueRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_DescribeAvailablePatchesCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_DescribeAvailablePatchesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeAvailablePatchesResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_DescribeAvailablePatchesCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_DescribeDocumentCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_DescribeDocumentCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeDocumentResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_DescribeDocumentCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidDocument\":\n        case \"com.amazonaws.ssm#InvalidDocument\":\n            throw await de_InvalidDocumentRes(parsedOutput, context);\n        case \"InvalidDocumentVersion\":\n        case \"com.amazonaws.ssm#InvalidDocumentVersion\":\n            throw await de_InvalidDocumentVersionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_DescribeDocumentPermissionCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_DescribeDocumentPermissionCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_DescribeDocumentPermissionCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidDocument\":\n        case \"com.amazonaws.ssm#InvalidDocument\":\n            throw await de_InvalidDocumentRes(parsedOutput, context);\n        case \"InvalidDocumentOperation\":\n        case \"com.amazonaws.ssm#InvalidDocumentOperation\":\n            throw await de_InvalidDocumentOperationRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        case \"InvalidPermissionType\":\n        case \"com.amazonaws.ssm#InvalidPermissionType\":\n            throw await de_InvalidPermissionTypeRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_DescribeEffectiveInstanceAssociationsCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_DescribeEffectiveInstanceAssociationsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_DescribeEffectiveInstanceAssociationsCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidInstanceId\":\n        case \"com.amazonaws.ssm#InvalidInstanceId\":\n            throw await de_InvalidInstanceIdRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_DescribeEffectivePatchesForPatchBaselineCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_DescribeEffectivePatchesForPatchBaselineCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeEffectivePatchesForPatchBaselineResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_DescribeEffectivePatchesForPatchBaselineCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"DoesNotExistException\":\n        case \"com.amazonaws.ssm#DoesNotExistException\":\n            throw await de_DoesNotExistExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidResourceId\":\n        case \"com.amazonaws.ssm#InvalidResourceId\":\n            throw await de_InvalidResourceIdRes(parsedOutput, context);\n        case \"UnsupportedOperatingSystem\":\n        case \"com.amazonaws.ssm#UnsupportedOperatingSystem\":\n            throw await de_UnsupportedOperatingSystemRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_DescribeInstanceAssociationsStatusCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_DescribeInstanceAssociationsStatusCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeInstanceAssociationsStatusResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_DescribeInstanceAssociationsStatusCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidInstanceId\":\n        case \"com.amazonaws.ssm#InvalidInstanceId\":\n            throw await de_InvalidInstanceIdRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_DescribeInstanceInformationCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_DescribeInstanceInformationCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeInstanceInformationResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_DescribeInstanceInformationCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidFilterKey\":\n        case \"com.amazonaws.ssm#InvalidFilterKey\":\n            throw await de_InvalidFilterKeyRes(parsedOutput, context);\n        case \"InvalidInstanceId\":\n        case \"com.amazonaws.ssm#InvalidInstanceId\":\n            throw await de_InvalidInstanceIdRes(parsedOutput, context);\n        case \"InvalidInstanceInformationFilterValue\":\n        case \"com.amazonaws.ssm#InvalidInstanceInformationFilterValue\":\n            throw await de_InvalidInstanceInformationFilterValueRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_DescribeInstancePatchesCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_DescribeInstancePatchesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeInstancePatchesResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_DescribeInstancePatchesCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidFilter\":\n        case \"com.amazonaws.ssm#InvalidFilter\":\n            throw await de_InvalidFilterRes(parsedOutput, context);\n        case \"InvalidInstanceId\":\n        case \"com.amazonaws.ssm#InvalidInstanceId\":\n            throw await de_InvalidInstanceIdRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_DescribeInstancePatchStatesCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_DescribeInstancePatchStatesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeInstancePatchStatesResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_DescribeInstancePatchStatesCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_DescribeInstancePatchStatesForPatchGroupCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_DescribeInstancePatchStatesForPatchGroupCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeInstancePatchStatesForPatchGroupResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_DescribeInstancePatchStatesForPatchGroupCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidFilter\":\n        case \"com.amazonaws.ssm#InvalidFilter\":\n            throw await de_InvalidFilterRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_DescribeInventoryDeletionsCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_DescribeInventoryDeletionsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeInventoryDeletionsResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_DescribeInventoryDeletionsCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidDeletionIdException\":\n        case \"com.amazonaws.ssm#InvalidDeletionIdException\":\n            throw await de_InvalidDeletionIdExceptionRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_DescribeMaintenanceWindowExecutionsCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_DescribeMaintenanceWindowExecutionsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeMaintenanceWindowExecutionsResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_DescribeMaintenanceWindowExecutionsCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_DescribeMaintenanceWindowExecutionTaskInvocationsCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_DescribeMaintenanceWindowExecutionTaskInvocationsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeMaintenanceWindowExecutionTaskInvocationsResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_DescribeMaintenanceWindowExecutionTaskInvocationsCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"DoesNotExistException\":\n        case \"com.amazonaws.ssm#DoesNotExistException\":\n            throw await de_DoesNotExistExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_DescribeMaintenanceWindowExecutionTasksCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_DescribeMaintenanceWindowExecutionTasksCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeMaintenanceWindowExecutionTasksResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_DescribeMaintenanceWindowExecutionTasksCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"DoesNotExistException\":\n        case \"com.amazonaws.ssm#DoesNotExistException\":\n            throw await de_DoesNotExistExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_DescribeMaintenanceWindowsCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_DescribeMaintenanceWindowsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_DescribeMaintenanceWindowsCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_DescribeMaintenanceWindowScheduleCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_DescribeMaintenanceWindowScheduleCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_DescribeMaintenanceWindowScheduleCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"DoesNotExistException\":\n        case \"com.amazonaws.ssm#DoesNotExistException\":\n            throw await de_DoesNotExistExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_DescribeMaintenanceWindowsForTargetCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_DescribeMaintenanceWindowsForTargetCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_DescribeMaintenanceWindowsForTargetCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_DescribeMaintenanceWindowTargetsCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_DescribeMaintenanceWindowTargetsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_DescribeMaintenanceWindowTargetsCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"DoesNotExistException\":\n        case \"com.amazonaws.ssm#DoesNotExistException\":\n            throw await de_DoesNotExistExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_DescribeMaintenanceWindowTasksCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_DescribeMaintenanceWindowTasksCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_DescribeMaintenanceWindowTasksCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"DoesNotExistException\":\n        case \"com.amazonaws.ssm#DoesNotExistException\":\n            throw await de_DoesNotExistExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_DescribeOpsItemsCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_DescribeOpsItemsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeOpsItemsResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_DescribeOpsItemsCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_DescribeParametersCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_DescribeParametersCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeParametersResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_DescribeParametersCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidFilterKey\":\n        case \"com.amazonaws.ssm#InvalidFilterKey\":\n            throw await de_InvalidFilterKeyRes(parsedOutput, context);\n        case \"InvalidFilterOption\":\n        case \"com.amazonaws.ssm#InvalidFilterOption\":\n            throw await de_InvalidFilterOptionRes(parsedOutput, context);\n        case \"InvalidFilterValue\":\n        case \"com.amazonaws.ssm#InvalidFilterValue\":\n            throw await de_InvalidFilterValueRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_DescribePatchBaselinesCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_DescribePatchBaselinesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_DescribePatchBaselinesCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_DescribePatchGroupsCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_DescribePatchGroupsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_DescribePatchGroupsCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_DescribePatchGroupStateCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_DescribePatchGroupStateCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_DescribePatchGroupStateCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_DescribePatchPropertiesCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_DescribePatchPropertiesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_DescribePatchPropertiesCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_DescribeSessionsCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_DescribeSessionsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeSessionsResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_DescribeSessionsCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidFilterKey\":\n        case \"com.amazonaws.ssm#InvalidFilterKey\":\n            throw await de_InvalidFilterKeyRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_DisassociateOpsItemRelatedItemCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_DisassociateOpsItemRelatedItemCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_DisassociateOpsItemRelatedItemCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"OpsItemConflictException\":\n        case \"com.amazonaws.ssm#OpsItemConflictException\":\n            throw await de_OpsItemConflictExceptionRes(parsedOutput, context);\n        case \"OpsItemInvalidParameterException\":\n        case \"com.amazonaws.ssm#OpsItemInvalidParameterException\":\n            throw await de_OpsItemInvalidParameterExceptionRes(parsedOutput, context);\n        case \"OpsItemNotFoundException\":\n        case \"com.amazonaws.ssm#OpsItemNotFoundException\":\n            throw await de_OpsItemNotFoundExceptionRes(parsedOutput, context);\n        case \"OpsItemRelatedItemAssociationNotFoundException\":\n        case \"com.amazonaws.ssm#OpsItemRelatedItemAssociationNotFoundException\":\n            throw await de_OpsItemRelatedItemAssociationNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_GetAutomationExecutionCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_GetAutomationExecutionCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetAutomationExecutionResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_GetAutomationExecutionCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"AutomationExecutionNotFoundException\":\n        case \"com.amazonaws.ssm#AutomationExecutionNotFoundException\":\n            throw await de_AutomationExecutionNotFoundExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_GetCalendarStateCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_GetCalendarStateCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_GetCalendarStateCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidDocument\":\n        case \"com.amazonaws.ssm#InvalidDocument\":\n            throw await de_InvalidDocumentRes(parsedOutput, context);\n        case \"InvalidDocumentType\":\n        case \"com.amazonaws.ssm#InvalidDocumentType\":\n            throw await de_InvalidDocumentTypeRes(parsedOutput, context);\n        case \"UnsupportedCalendarException\":\n        case \"com.amazonaws.ssm#UnsupportedCalendarException\":\n            throw await de_UnsupportedCalendarExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_GetCommandInvocationCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_GetCommandInvocationCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_GetCommandInvocationCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidCommandId\":\n        case \"com.amazonaws.ssm#InvalidCommandId\":\n            throw await de_InvalidCommandIdRes(parsedOutput, context);\n        case \"InvalidInstanceId\":\n        case \"com.amazonaws.ssm#InvalidInstanceId\":\n            throw await de_InvalidInstanceIdRes(parsedOutput, context);\n        case \"InvalidPluginName\":\n        case \"com.amazonaws.ssm#InvalidPluginName\":\n            throw await de_InvalidPluginNameRes(parsedOutput, context);\n        case \"InvocationDoesNotExist\":\n        case \"com.amazonaws.ssm#InvocationDoesNotExist\":\n            throw await de_InvocationDoesNotExistRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_GetConnectionStatusCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_GetConnectionStatusCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_GetConnectionStatusCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_GetDefaultPatchBaselineCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_GetDefaultPatchBaselineCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_GetDefaultPatchBaselineCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_GetDeployablePatchSnapshotForInstanceCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_GetDeployablePatchSnapshotForInstanceCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_GetDeployablePatchSnapshotForInstanceCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"UnsupportedFeatureRequiredException\":\n        case \"com.amazonaws.ssm#UnsupportedFeatureRequiredException\":\n            throw await de_UnsupportedFeatureRequiredExceptionRes(parsedOutput, context);\n        case \"UnsupportedOperatingSystem\":\n        case \"com.amazonaws.ssm#UnsupportedOperatingSystem\":\n            throw await de_UnsupportedOperatingSystemRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_GetDocumentCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_GetDocumentCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetDocumentResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_GetDocumentCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidDocument\":\n        case \"com.amazonaws.ssm#InvalidDocument\":\n            throw await de_InvalidDocumentRes(parsedOutput, context);\n        case \"InvalidDocumentVersion\":\n        case \"com.amazonaws.ssm#InvalidDocumentVersion\":\n            throw await de_InvalidDocumentVersionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_GetInventoryCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_GetInventoryCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_GetInventoryCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidAggregatorException\":\n        case \"com.amazonaws.ssm#InvalidAggregatorException\":\n            throw await de_InvalidAggregatorExceptionRes(parsedOutput, context);\n        case \"InvalidFilter\":\n        case \"com.amazonaws.ssm#InvalidFilter\":\n            throw await de_InvalidFilterRes(parsedOutput, context);\n        case \"InvalidInventoryGroupException\":\n        case \"com.amazonaws.ssm#InvalidInventoryGroupException\":\n            throw await de_InvalidInventoryGroupExceptionRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        case \"InvalidResultAttributeException\":\n        case \"com.amazonaws.ssm#InvalidResultAttributeException\":\n            throw await de_InvalidResultAttributeExceptionRes(parsedOutput, context);\n        case \"InvalidTypeNameException\":\n        case \"com.amazonaws.ssm#InvalidTypeNameException\":\n            throw await de_InvalidTypeNameExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_GetInventorySchemaCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_GetInventorySchemaCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_GetInventorySchemaCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        case \"InvalidTypeNameException\":\n        case \"com.amazonaws.ssm#InvalidTypeNameException\":\n            throw await de_InvalidTypeNameExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_GetMaintenanceWindowCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_GetMaintenanceWindowCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetMaintenanceWindowResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_GetMaintenanceWindowCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"DoesNotExistException\":\n        case \"com.amazonaws.ssm#DoesNotExistException\":\n            throw await de_DoesNotExistExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_GetMaintenanceWindowExecutionCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_GetMaintenanceWindowExecutionCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetMaintenanceWindowExecutionResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_GetMaintenanceWindowExecutionCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"DoesNotExistException\":\n        case \"com.amazonaws.ssm#DoesNotExistException\":\n            throw await de_DoesNotExistExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_GetMaintenanceWindowExecutionTaskCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_GetMaintenanceWindowExecutionTaskCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetMaintenanceWindowExecutionTaskResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_GetMaintenanceWindowExecutionTaskCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"DoesNotExistException\":\n        case \"com.amazonaws.ssm#DoesNotExistException\":\n            throw await de_DoesNotExistExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_GetMaintenanceWindowExecutionTaskInvocationCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_GetMaintenanceWindowExecutionTaskInvocationCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetMaintenanceWindowExecutionTaskInvocationResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_GetMaintenanceWindowExecutionTaskInvocationCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"DoesNotExistException\":\n        case \"com.amazonaws.ssm#DoesNotExistException\":\n            throw await de_DoesNotExistExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_GetMaintenanceWindowTaskCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_GetMaintenanceWindowTaskCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetMaintenanceWindowTaskResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_GetMaintenanceWindowTaskCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"DoesNotExistException\":\n        case \"com.amazonaws.ssm#DoesNotExistException\":\n            throw await de_DoesNotExistExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_GetOpsItemCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_GetOpsItemCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetOpsItemResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_GetOpsItemCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"OpsItemAccessDeniedException\":\n        case \"com.amazonaws.ssm#OpsItemAccessDeniedException\":\n            throw await de_OpsItemAccessDeniedExceptionRes(parsedOutput, context);\n        case \"OpsItemNotFoundException\":\n        case \"com.amazonaws.ssm#OpsItemNotFoundException\":\n            throw await de_OpsItemNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_GetOpsMetadataCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_GetOpsMetadataCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_GetOpsMetadataCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"OpsMetadataInvalidArgumentException\":\n        case \"com.amazonaws.ssm#OpsMetadataInvalidArgumentException\":\n            throw await de_OpsMetadataInvalidArgumentExceptionRes(parsedOutput, context);\n        case \"OpsMetadataNotFoundException\":\n        case \"com.amazonaws.ssm#OpsMetadataNotFoundException\":\n            throw await de_OpsMetadataNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_GetOpsSummaryCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_GetOpsSummaryCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_GetOpsSummaryCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidAggregatorException\":\n        case \"com.amazonaws.ssm#InvalidAggregatorException\":\n            throw await de_InvalidAggregatorExceptionRes(parsedOutput, context);\n        case \"InvalidFilter\":\n        case \"com.amazonaws.ssm#InvalidFilter\":\n            throw await de_InvalidFilterRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        case \"InvalidTypeNameException\":\n        case \"com.amazonaws.ssm#InvalidTypeNameException\":\n            throw await de_InvalidTypeNameExceptionRes(parsedOutput, context);\n        case \"ResourceDataSyncNotFoundException\":\n        case \"com.amazonaws.ssm#ResourceDataSyncNotFoundException\":\n            throw await de_ResourceDataSyncNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_GetParameterCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_GetParameterCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetParameterResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_GetParameterCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidKeyId\":\n        case \"com.amazonaws.ssm#InvalidKeyId\":\n            throw await de_InvalidKeyIdRes(parsedOutput, context);\n        case \"ParameterNotFound\":\n        case \"com.amazonaws.ssm#ParameterNotFound\":\n            throw await de_ParameterNotFoundRes(parsedOutput, context);\n        case \"ParameterVersionNotFound\":\n        case \"com.amazonaws.ssm#ParameterVersionNotFound\":\n            throw await de_ParameterVersionNotFoundRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_GetParameterHistoryCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_GetParameterHistoryCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetParameterHistoryResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_GetParameterHistoryCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidKeyId\":\n        case \"com.amazonaws.ssm#InvalidKeyId\":\n            throw await de_InvalidKeyIdRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        case \"ParameterNotFound\":\n        case \"com.amazonaws.ssm#ParameterNotFound\":\n            throw await de_ParameterNotFoundRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_GetParametersCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_GetParametersCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetParametersResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_GetParametersCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidKeyId\":\n        case \"com.amazonaws.ssm#InvalidKeyId\":\n            throw await de_InvalidKeyIdRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_GetParametersByPathCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_GetParametersByPathCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetParametersByPathResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_GetParametersByPathCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidFilterKey\":\n        case \"com.amazonaws.ssm#InvalidFilterKey\":\n            throw await de_InvalidFilterKeyRes(parsedOutput, context);\n        case \"InvalidFilterOption\":\n        case \"com.amazonaws.ssm#InvalidFilterOption\":\n            throw await de_InvalidFilterOptionRes(parsedOutput, context);\n        case \"InvalidFilterValue\":\n        case \"com.amazonaws.ssm#InvalidFilterValue\":\n            throw await de_InvalidFilterValueRes(parsedOutput, context);\n        case \"InvalidKeyId\":\n        case \"com.amazonaws.ssm#InvalidKeyId\":\n            throw await de_InvalidKeyIdRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_GetPatchBaselineCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_GetPatchBaselineCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetPatchBaselineResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_GetPatchBaselineCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"DoesNotExistException\":\n        case \"com.amazonaws.ssm#DoesNotExistException\":\n            throw await de_DoesNotExistExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidResourceId\":\n        case \"com.amazonaws.ssm#InvalidResourceId\":\n            throw await de_InvalidResourceIdRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_GetPatchBaselineForPatchGroupCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_GetPatchBaselineForPatchGroupCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_GetPatchBaselineForPatchGroupCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_GetResourcePoliciesCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_GetResourcePoliciesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_GetResourcePoliciesCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"ResourcePolicyInvalidParameterException\":\n        case \"com.amazonaws.ssm#ResourcePolicyInvalidParameterException\":\n            throw await de_ResourcePolicyInvalidParameterExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_GetServiceSettingCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_GetServiceSettingCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetServiceSettingResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_GetServiceSettingCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"ServiceSettingNotFound\":\n        case \"com.amazonaws.ssm#ServiceSettingNotFound\":\n            throw await de_ServiceSettingNotFoundRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_LabelParameterVersionCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_LabelParameterVersionCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_LabelParameterVersionCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"ParameterNotFound\":\n        case \"com.amazonaws.ssm#ParameterNotFound\":\n            throw await de_ParameterNotFoundRes(parsedOutput, context);\n        case \"ParameterVersionLabelLimitExceeded\":\n        case \"com.amazonaws.ssm#ParameterVersionLabelLimitExceeded\":\n            throw await de_ParameterVersionLabelLimitExceededRes(parsedOutput, context);\n        case \"ParameterVersionNotFound\":\n        case \"com.amazonaws.ssm#ParameterVersionNotFound\":\n            throw await de_ParameterVersionNotFoundRes(parsedOutput, context);\n        case \"TooManyUpdates\":\n        case \"com.amazonaws.ssm#TooManyUpdates\":\n            throw await de_TooManyUpdatesRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_ListAssociationsCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_ListAssociationsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_ListAssociationsResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_ListAssociationsCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_ListAssociationVersionsCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_ListAssociationVersionsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_ListAssociationVersionsResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_ListAssociationVersionsCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"AssociationDoesNotExist\":\n        case \"com.amazonaws.ssm#AssociationDoesNotExist\":\n            throw await de_AssociationDoesNotExistRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_ListCommandInvocationsCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_ListCommandInvocationsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_ListCommandInvocationsResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_ListCommandInvocationsCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidCommandId\":\n        case \"com.amazonaws.ssm#InvalidCommandId\":\n            throw await de_InvalidCommandIdRes(parsedOutput, context);\n        case \"InvalidFilterKey\":\n        case \"com.amazonaws.ssm#InvalidFilterKey\":\n            throw await de_InvalidFilterKeyRes(parsedOutput, context);\n        case \"InvalidInstanceId\":\n        case \"com.amazonaws.ssm#InvalidInstanceId\":\n            throw await de_InvalidInstanceIdRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_ListCommandsCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_ListCommandsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_ListCommandsResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_ListCommandsCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidCommandId\":\n        case \"com.amazonaws.ssm#InvalidCommandId\":\n            throw await de_InvalidCommandIdRes(parsedOutput, context);\n        case \"InvalidFilterKey\":\n        case \"com.amazonaws.ssm#InvalidFilterKey\":\n            throw await de_InvalidFilterKeyRes(parsedOutput, context);\n        case \"InvalidInstanceId\":\n        case \"com.amazonaws.ssm#InvalidInstanceId\":\n            throw await de_InvalidInstanceIdRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_ListComplianceItemsCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_ListComplianceItemsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_ListComplianceItemsResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_ListComplianceItemsCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidFilter\":\n        case \"com.amazonaws.ssm#InvalidFilter\":\n            throw await de_InvalidFilterRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        case \"InvalidResourceId\":\n        case \"com.amazonaws.ssm#InvalidResourceId\":\n            throw await de_InvalidResourceIdRes(parsedOutput, context);\n        case \"InvalidResourceType\":\n        case \"com.amazonaws.ssm#InvalidResourceType\":\n            throw await de_InvalidResourceTypeRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_ListComplianceSummariesCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_ListComplianceSummariesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_ListComplianceSummariesCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidFilter\":\n        case \"com.amazonaws.ssm#InvalidFilter\":\n            throw await de_InvalidFilterRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_ListDocumentMetadataHistoryCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_ListDocumentMetadataHistoryCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_ListDocumentMetadataHistoryResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_ListDocumentMetadataHistoryCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidDocument\":\n        case \"com.amazonaws.ssm#InvalidDocument\":\n            throw await de_InvalidDocumentRes(parsedOutput, context);\n        case \"InvalidDocumentVersion\":\n        case \"com.amazonaws.ssm#InvalidDocumentVersion\":\n            throw await de_InvalidDocumentVersionRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_ListDocumentsCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_ListDocumentsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_ListDocumentsResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_ListDocumentsCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidFilterKey\":\n        case \"com.amazonaws.ssm#InvalidFilterKey\":\n            throw await de_InvalidFilterKeyRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_ListDocumentVersionsCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_ListDocumentVersionsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_ListDocumentVersionsResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_ListDocumentVersionsCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidDocument\":\n        case \"com.amazonaws.ssm#InvalidDocument\":\n            throw await de_InvalidDocumentRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_ListInventoryEntriesCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_ListInventoryEntriesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_ListInventoryEntriesCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidFilter\":\n        case \"com.amazonaws.ssm#InvalidFilter\":\n            throw await de_InvalidFilterRes(parsedOutput, context);\n        case \"InvalidInstanceId\":\n        case \"com.amazonaws.ssm#InvalidInstanceId\":\n            throw await de_InvalidInstanceIdRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        case \"InvalidTypeNameException\":\n        case \"com.amazonaws.ssm#InvalidTypeNameException\":\n            throw await de_InvalidTypeNameExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_ListOpsItemEventsCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_ListOpsItemEventsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_ListOpsItemEventsResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_ListOpsItemEventsCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"OpsItemInvalidParameterException\":\n        case \"com.amazonaws.ssm#OpsItemInvalidParameterException\":\n            throw await de_OpsItemInvalidParameterExceptionRes(parsedOutput, context);\n        case \"OpsItemLimitExceededException\":\n        case \"com.amazonaws.ssm#OpsItemLimitExceededException\":\n            throw await de_OpsItemLimitExceededExceptionRes(parsedOutput, context);\n        case \"OpsItemNotFoundException\":\n        case \"com.amazonaws.ssm#OpsItemNotFoundException\":\n            throw await de_OpsItemNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_ListOpsItemRelatedItemsCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_ListOpsItemRelatedItemsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_ListOpsItemRelatedItemsResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_ListOpsItemRelatedItemsCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"OpsItemInvalidParameterException\":\n        case \"com.amazonaws.ssm#OpsItemInvalidParameterException\":\n            throw await de_OpsItemInvalidParameterExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_ListOpsMetadataCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_ListOpsMetadataCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_ListOpsMetadataResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_ListOpsMetadataCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"OpsMetadataInvalidArgumentException\":\n        case \"com.amazonaws.ssm#OpsMetadataInvalidArgumentException\":\n            throw await de_OpsMetadataInvalidArgumentExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_ListResourceComplianceSummariesCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_ListResourceComplianceSummariesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_ListResourceComplianceSummariesResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_ListResourceComplianceSummariesCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidFilter\":\n        case \"com.amazonaws.ssm#InvalidFilter\":\n            throw await de_InvalidFilterRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_ListResourceDataSyncCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_ListResourceDataSyncCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_ListResourceDataSyncResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_ListResourceDataSyncCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        case \"ResourceDataSyncInvalidConfigurationException\":\n        case \"com.amazonaws.ssm#ResourceDataSyncInvalidConfigurationException\":\n            throw await de_ResourceDataSyncInvalidConfigurationExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_ListTagsForResourceCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_ListTagsForResourceCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_ListTagsForResourceCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidResourceId\":\n        case \"com.amazonaws.ssm#InvalidResourceId\":\n            throw await de_InvalidResourceIdRes(parsedOutput, context);\n        case \"InvalidResourceType\":\n        case \"com.amazonaws.ssm#InvalidResourceType\":\n            throw await de_InvalidResourceTypeRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_ModifyDocumentPermissionCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_ModifyDocumentPermissionCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_ModifyDocumentPermissionCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"DocumentLimitExceeded\":\n        case \"com.amazonaws.ssm#DocumentLimitExceeded\":\n            throw await de_DocumentLimitExceededRes(parsedOutput, context);\n        case \"DocumentPermissionLimit\":\n        case \"com.amazonaws.ssm#DocumentPermissionLimit\":\n            throw await de_DocumentPermissionLimitRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidDocument\":\n        case \"com.amazonaws.ssm#InvalidDocument\":\n            throw await de_InvalidDocumentRes(parsedOutput, context);\n        case \"InvalidPermissionType\":\n        case \"com.amazonaws.ssm#InvalidPermissionType\":\n            throw await de_InvalidPermissionTypeRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_PutComplianceItemsCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_PutComplianceItemsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_PutComplianceItemsCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"ComplianceTypeCountLimitExceededException\":\n        case \"com.amazonaws.ssm#ComplianceTypeCountLimitExceededException\":\n            throw await de_ComplianceTypeCountLimitExceededExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidItemContentException\":\n        case \"com.amazonaws.ssm#InvalidItemContentException\":\n            throw await de_InvalidItemContentExceptionRes(parsedOutput, context);\n        case \"InvalidResourceId\":\n        case \"com.amazonaws.ssm#InvalidResourceId\":\n            throw await de_InvalidResourceIdRes(parsedOutput, context);\n        case \"InvalidResourceType\":\n        case \"com.amazonaws.ssm#InvalidResourceType\":\n            throw await de_InvalidResourceTypeRes(parsedOutput, context);\n        case \"ItemSizeLimitExceededException\":\n        case \"com.amazonaws.ssm#ItemSizeLimitExceededException\":\n            throw await de_ItemSizeLimitExceededExceptionRes(parsedOutput, context);\n        case \"TotalSizeLimitExceededException\":\n        case \"com.amazonaws.ssm#TotalSizeLimitExceededException\":\n            throw await de_TotalSizeLimitExceededExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_PutInventoryCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_PutInventoryCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_PutInventoryCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"CustomSchemaCountLimitExceededException\":\n        case \"com.amazonaws.ssm#CustomSchemaCountLimitExceededException\":\n            throw await de_CustomSchemaCountLimitExceededExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidInstanceId\":\n        case \"com.amazonaws.ssm#InvalidInstanceId\":\n            throw await de_InvalidInstanceIdRes(parsedOutput, context);\n        case \"InvalidInventoryItemContextException\":\n        case \"com.amazonaws.ssm#InvalidInventoryItemContextException\":\n            throw await de_InvalidInventoryItemContextExceptionRes(parsedOutput, context);\n        case \"InvalidItemContentException\":\n        case \"com.amazonaws.ssm#InvalidItemContentException\":\n            throw await de_InvalidItemContentExceptionRes(parsedOutput, context);\n        case \"InvalidTypeNameException\":\n        case \"com.amazonaws.ssm#InvalidTypeNameException\":\n            throw await de_InvalidTypeNameExceptionRes(parsedOutput, context);\n        case \"ItemContentMismatchException\":\n        case \"com.amazonaws.ssm#ItemContentMismatchException\":\n            throw await de_ItemContentMismatchExceptionRes(parsedOutput, context);\n        case \"ItemSizeLimitExceededException\":\n        case \"com.amazonaws.ssm#ItemSizeLimitExceededException\":\n            throw await de_ItemSizeLimitExceededExceptionRes(parsedOutput, context);\n        case \"SubTypeCountLimitExceededException\":\n        case \"com.amazonaws.ssm#SubTypeCountLimitExceededException\":\n            throw await de_SubTypeCountLimitExceededExceptionRes(parsedOutput, context);\n        case \"TotalSizeLimitExceededException\":\n        case \"com.amazonaws.ssm#TotalSizeLimitExceededException\":\n            throw await de_TotalSizeLimitExceededExceptionRes(parsedOutput, context);\n        case \"UnsupportedInventoryItemContextException\":\n        case \"com.amazonaws.ssm#UnsupportedInventoryItemContextException\":\n            throw await de_UnsupportedInventoryItemContextExceptionRes(parsedOutput, context);\n        case \"UnsupportedInventorySchemaVersionException\":\n        case \"com.amazonaws.ssm#UnsupportedInventorySchemaVersionException\":\n            throw await de_UnsupportedInventorySchemaVersionExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_PutParameterCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_PutParameterCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_PutParameterCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"HierarchyLevelLimitExceededException\":\n        case \"com.amazonaws.ssm#HierarchyLevelLimitExceededException\":\n            throw await de_HierarchyLevelLimitExceededExceptionRes(parsedOutput, context);\n        case \"HierarchyTypeMismatchException\":\n        case \"com.amazonaws.ssm#HierarchyTypeMismatchException\":\n            throw await de_HierarchyTypeMismatchExceptionRes(parsedOutput, context);\n        case \"IncompatiblePolicyException\":\n        case \"com.amazonaws.ssm#IncompatiblePolicyException\":\n            throw await de_IncompatiblePolicyExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidAllowedPatternException\":\n        case \"com.amazonaws.ssm#InvalidAllowedPatternException\":\n            throw await de_InvalidAllowedPatternExceptionRes(parsedOutput, context);\n        case \"InvalidKeyId\":\n        case \"com.amazonaws.ssm#InvalidKeyId\":\n            throw await de_InvalidKeyIdRes(parsedOutput, context);\n        case \"InvalidPolicyAttributeException\":\n        case \"com.amazonaws.ssm#InvalidPolicyAttributeException\":\n            throw await de_InvalidPolicyAttributeExceptionRes(parsedOutput, context);\n        case \"InvalidPolicyTypeException\":\n        case \"com.amazonaws.ssm#InvalidPolicyTypeException\":\n            throw await de_InvalidPolicyTypeExceptionRes(parsedOutput, context);\n        case \"ParameterAlreadyExists\":\n        case \"com.amazonaws.ssm#ParameterAlreadyExists\":\n            throw await de_ParameterAlreadyExistsRes(parsedOutput, context);\n        case \"ParameterLimitExceeded\":\n        case \"com.amazonaws.ssm#ParameterLimitExceeded\":\n            throw await de_ParameterLimitExceededRes(parsedOutput, context);\n        case \"ParameterMaxVersionLimitExceeded\":\n        case \"com.amazonaws.ssm#ParameterMaxVersionLimitExceeded\":\n            throw await de_ParameterMaxVersionLimitExceededRes(parsedOutput, context);\n        case \"ParameterPatternMismatchException\":\n        case \"com.amazonaws.ssm#ParameterPatternMismatchException\":\n            throw await de_ParameterPatternMismatchExceptionRes(parsedOutput, context);\n        case \"PoliciesLimitExceededException\":\n        case \"com.amazonaws.ssm#PoliciesLimitExceededException\":\n            throw await de_PoliciesLimitExceededExceptionRes(parsedOutput, context);\n        case \"TooManyUpdates\":\n        case \"com.amazonaws.ssm#TooManyUpdates\":\n            throw await de_TooManyUpdatesRes(parsedOutput, context);\n        case \"UnsupportedParameterType\":\n        case \"com.amazonaws.ssm#UnsupportedParameterType\":\n            throw await de_UnsupportedParameterTypeRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_PutResourcePolicyCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_PutResourcePolicyCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_PutResourcePolicyCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"ResourcePolicyConflictException\":\n        case \"com.amazonaws.ssm#ResourcePolicyConflictException\":\n            throw await de_ResourcePolicyConflictExceptionRes(parsedOutput, context);\n        case \"ResourcePolicyInvalidParameterException\":\n        case \"com.amazonaws.ssm#ResourcePolicyInvalidParameterException\":\n            throw await de_ResourcePolicyInvalidParameterExceptionRes(parsedOutput, context);\n        case \"ResourcePolicyLimitExceededException\":\n        case \"com.amazonaws.ssm#ResourcePolicyLimitExceededException\":\n            throw await de_ResourcePolicyLimitExceededExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_RegisterDefaultPatchBaselineCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_RegisterDefaultPatchBaselineCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_RegisterDefaultPatchBaselineCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"DoesNotExistException\":\n        case \"com.amazonaws.ssm#DoesNotExistException\":\n            throw await de_DoesNotExistExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidResourceId\":\n        case \"com.amazonaws.ssm#InvalidResourceId\":\n            throw await de_InvalidResourceIdRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_RegisterPatchBaselineForPatchGroupCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_RegisterPatchBaselineForPatchGroupCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_RegisterPatchBaselineForPatchGroupCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"AlreadyExistsException\":\n        case \"com.amazonaws.ssm#AlreadyExistsException\":\n            throw await de_AlreadyExistsExceptionRes(parsedOutput, context);\n        case \"DoesNotExistException\":\n        case \"com.amazonaws.ssm#DoesNotExistException\":\n            throw await de_DoesNotExistExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidResourceId\":\n        case \"com.amazonaws.ssm#InvalidResourceId\":\n            throw await de_InvalidResourceIdRes(parsedOutput, context);\n        case \"ResourceLimitExceededException\":\n        case \"com.amazonaws.ssm#ResourceLimitExceededException\":\n            throw await de_ResourceLimitExceededExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_RegisterTargetWithMaintenanceWindowCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_RegisterTargetWithMaintenanceWindowCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_RegisterTargetWithMaintenanceWindowCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"DoesNotExistException\":\n        case \"com.amazonaws.ssm#DoesNotExistException\":\n            throw await de_DoesNotExistExceptionRes(parsedOutput, context);\n        case \"IdempotentParameterMismatch\":\n        case \"com.amazonaws.ssm#IdempotentParameterMismatch\":\n            throw await de_IdempotentParameterMismatchRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"ResourceLimitExceededException\":\n        case \"com.amazonaws.ssm#ResourceLimitExceededException\":\n            throw await de_ResourceLimitExceededExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_RegisterTaskWithMaintenanceWindowCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_RegisterTaskWithMaintenanceWindowCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_RegisterTaskWithMaintenanceWindowCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"DoesNotExistException\":\n        case \"com.amazonaws.ssm#DoesNotExistException\":\n            throw await de_DoesNotExistExceptionRes(parsedOutput, context);\n        case \"FeatureNotAvailableException\":\n        case \"com.amazonaws.ssm#FeatureNotAvailableException\":\n            throw await de_FeatureNotAvailableExceptionRes(parsedOutput, context);\n        case \"IdempotentParameterMismatch\":\n        case \"com.amazonaws.ssm#IdempotentParameterMismatch\":\n            throw await de_IdempotentParameterMismatchRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"ResourceLimitExceededException\":\n        case \"com.amazonaws.ssm#ResourceLimitExceededException\":\n            throw await de_ResourceLimitExceededExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_RemoveTagsFromResourceCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_RemoveTagsFromResourceCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_RemoveTagsFromResourceCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidResourceId\":\n        case \"com.amazonaws.ssm#InvalidResourceId\":\n            throw await de_InvalidResourceIdRes(parsedOutput, context);\n        case \"InvalidResourceType\":\n        case \"com.amazonaws.ssm#InvalidResourceType\":\n            throw await de_InvalidResourceTypeRes(parsedOutput, context);\n        case \"TooManyUpdates\":\n        case \"com.amazonaws.ssm#TooManyUpdates\":\n            throw await de_TooManyUpdatesRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_ResetServiceSettingCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_ResetServiceSettingCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_ResetServiceSettingResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_ResetServiceSettingCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"ServiceSettingNotFound\":\n        case \"com.amazonaws.ssm#ServiceSettingNotFound\":\n            throw await de_ServiceSettingNotFoundRes(parsedOutput, context);\n        case \"TooManyUpdates\":\n        case \"com.amazonaws.ssm#TooManyUpdates\":\n            throw await de_TooManyUpdatesRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_ResumeSessionCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_ResumeSessionCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_ResumeSessionCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"DoesNotExistException\":\n        case \"com.amazonaws.ssm#DoesNotExistException\":\n            throw await de_DoesNotExistExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_SendAutomationSignalCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_SendAutomationSignalCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_SendAutomationSignalCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"AutomationExecutionNotFoundException\":\n        case \"com.amazonaws.ssm#AutomationExecutionNotFoundException\":\n            throw await de_AutomationExecutionNotFoundExceptionRes(parsedOutput, context);\n        case \"AutomationStepNotFoundException\":\n        case \"com.amazonaws.ssm#AutomationStepNotFoundException\":\n            throw await de_AutomationStepNotFoundExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidAutomationSignalException\":\n        case \"com.amazonaws.ssm#InvalidAutomationSignalException\":\n            throw await de_InvalidAutomationSignalExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_SendCommandCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_SendCommandCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_SendCommandResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_SendCommandCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"DuplicateInstanceId\":\n        case \"com.amazonaws.ssm#DuplicateInstanceId\":\n            throw await de_DuplicateInstanceIdRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidDocument\":\n        case \"com.amazonaws.ssm#InvalidDocument\":\n            throw await de_InvalidDocumentRes(parsedOutput, context);\n        case \"InvalidDocumentVersion\":\n        case \"com.amazonaws.ssm#InvalidDocumentVersion\":\n            throw await de_InvalidDocumentVersionRes(parsedOutput, context);\n        case \"InvalidInstanceId\":\n        case \"com.amazonaws.ssm#InvalidInstanceId\":\n            throw await de_InvalidInstanceIdRes(parsedOutput, context);\n        case \"InvalidNotificationConfig\":\n        case \"com.amazonaws.ssm#InvalidNotificationConfig\":\n            throw await de_InvalidNotificationConfigRes(parsedOutput, context);\n        case \"InvalidOutputFolder\":\n        case \"com.amazonaws.ssm#InvalidOutputFolder\":\n            throw await de_InvalidOutputFolderRes(parsedOutput, context);\n        case \"InvalidParameters\":\n        case \"com.amazonaws.ssm#InvalidParameters\":\n            throw await de_InvalidParametersRes(parsedOutput, context);\n        case \"InvalidRole\":\n        case \"com.amazonaws.ssm#InvalidRole\":\n            throw await de_InvalidRoleRes(parsedOutput, context);\n        case \"MaxDocumentSizeExceeded\":\n        case \"com.amazonaws.ssm#MaxDocumentSizeExceeded\":\n            throw await de_MaxDocumentSizeExceededRes(parsedOutput, context);\n        case \"UnsupportedPlatformType\":\n        case \"com.amazonaws.ssm#UnsupportedPlatformType\":\n            throw await de_UnsupportedPlatformTypeRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_StartAssociationsOnceCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_StartAssociationsOnceCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_StartAssociationsOnceCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"AssociationDoesNotExist\":\n        case \"com.amazonaws.ssm#AssociationDoesNotExist\":\n            throw await de_AssociationDoesNotExistRes(parsedOutput, context);\n        case \"InvalidAssociation\":\n        case \"com.amazonaws.ssm#InvalidAssociation\":\n            throw await de_InvalidAssociationRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_StartAutomationExecutionCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_StartAutomationExecutionCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_StartAutomationExecutionCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"AutomationDefinitionNotFoundException\":\n        case \"com.amazonaws.ssm#AutomationDefinitionNotFoundException\":\n            throw await de_AutomationDefinitionNotFoundExceptionRes(parsedOutput, context);\n        case \"AutomationDefinitionVersionNotFoundException\":\n        case \"com.amazonaws.ssm#AutomationDefinitionVersionNotFoundException\":\n            throw await de_AutomationDefinitionVersionNotFoundExceptionRes(parsedOutput, context);\n        case \"AutomationExecutionLimitExceededException\":\n        case \"com.amazonaws.ssm#AutomationExecutionLimitExceededException\":\n            throw await de_AutomationExecutionLimitExceededExceptionRes(parsedOutput, context);\n        case \"IdempotentParameterMismatch\":\n        case \"com.amazonaws.ssm#IdempotentParameterMismatch\":\n            throw await de_IdempotentParameterMismatchRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidAutomationExecutionParametersException\":\n        case \"com.amazonaws.ssm#InvalidAutomationExecutionParametersException\":\n            throw await de_InvalidAutomationExecutionParametersExceptionRes(parsedOutput, context);\n        case \"InvalidTarget\":\n        case \"com.amazonaws.ssm#InvalidTarget\":\n            throw await de_InvalidTargetRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_StartChangeRequestExecutionCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_StartChangeRequestExecutionCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_StartChangeRequestExecutionCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"AutomationDefinitionNotApprovedException\":\n        case \"com.amazonaws.ssm#AutomationDefinitionNotApprovedException\":\n            throw await de_AutomationDefinitionNotApprovedExceptionRes(parsedOutput, context);\n        case \"AutomationDefinitionNotFoundException\":\n        case \"com.amazonaws.ssm#AutomationDefinitionNotFoundException\":\n            throw await de_AutomationDefinitionNotFoundExceptionRes(parsedOutput, context);\n        case \"AutomationDefinitionVersionNotFoundException\":\n        case \"com.amazonaws.ssm#AutomationDefinitionVersionNotFoundException\":\n            throw await de_AutomationDefinitionVersionNotFoundExceptionRes(parsedOutput, context);\n        case \"AutomationExecutionLimitExceededException\":\n        case \"com.amazonaws.ssm#AutomationExecutionLimitExceededException\":\n            throw await de_AutomationExecutionLimitExceededExceptionRes(parsedOutput, context);\n        case \"IdempotentParameterMismatch\":\n        case \"com.amazonaws.ssm#IdempotentParameterMismatch\":\n            throw await de_IdempotentParameterMismatchRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidAutomationExecutionParametersException\":\n        case \"com.amazonaws.ssm#InvalidAutomationExecutionParametersException\":\n            throw await de_InvalidAutomationExecutionParametersExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_StartSessionCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_StartSessionCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_StartSessionCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidDocument\":\n        case \"com.amazonaws.ssm#InvalidDocument\":\n            throw await de_InvalidDocumentRes(parsedOutput, context);\n        case \"TargetNotConnected\":\n        case \"com.amazonaws.ssm#TargetNotConnected\":\n            throw await de_TargetNotConnectedRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_StopAutomationExecutionCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_StopAutomationExecutionCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_StopAutomationExecutionCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"AutomationExecutionNotFoundException\":\n        case \"com.amazonaws.ssm#AutomationExecutionNotFoundException\":\n            throw await de_AutomationExecutionNotFoundExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidAutomationStatusUpdateException\":\n        case \"com.amazonaws.ssm#InvalidAutomationStatusUpdateException\":\n            throw await de_InvalidAutomationStatusUpdateExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_TerminateSessionCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_TerminateSessionCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_TerminateSessionCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_UnlabelParameterVersionCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_UnlabelParameterVersionCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_UnlabelParameterVersionCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"ParameterNotFound\":\n        case \"com.amazonaws.ssm#ParameterNotFound\":\n            throw await de_ParameterNotFoundRes(parsedOutput, context);\n        case \"ParameterVersionNotFound\":\n        case \"com.amazonaws.ssm#ParameterVersionNotFound\":\n            throw await de_ParameterVersionNotFoundRes(parsedOutput, context);\n        case \"TooManyUpdates\":\n        case \"com.amazonaws.ssm#TooManyUpdates\":\n            throw await de_TooManyUpdatesRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_UpdateAssociationCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_UpdateAssociationCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_UpdateAssociationResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_UpdateAssociationCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"AssociationDoesNotExist\":\n        case \"com.amazonaws.ssm#AssociationDoesNotExist\":\n            throw await de_AssociationDoesNotExistRes(parsedOutput, context);\n        case \"AssociationVersionLimitExceeded\":\n        case \"com.amazonaws.ssm#AssociationVersionLimitExceeded\":\n            throw await de_AssociationVersionLimitExceededRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidAssociationVersion\":\n        case \"com.amazonaws.ssm#InvalidAssociationVersion\":\n            throw await de_InvalidAssociationVersionRes(parsedOutput, context);\n        case \"InvalidDocument\":\n        case \"com.amazonaws.ssm#InvalidDocument\":\n            throw await de_InvalidDocumentRes(parsedOutput, context);\n        case \"InvalidDocumentVersion\":\n        case \"com.amazonaws.ssm#InvalidDocumentVersion\":\n            throw await de_InvalidDocumentVersionRes(parsedOutput, context);\n        case \"InvalidOutputLocation\":\n        case \"com.amazonaws.ssm#InvalidOutputLocation\":\n            throw await de_InvalidOutputLocationRes(parsedOutput, context);\n        case \"InvalidParameters\":\n        case \"com.amazonaws.ssm#InvalidParameters\":\n            throw await de_InvalidParametersRes(parsedOutput, context);\n        case \"InvalidSchedule\":\n        case \"com.amazonaws.ssm#InvalidSchedule\":\n            throw await de_InvalidScheduleRes(parsedOutput, context);\n        case \"InvalidTarget\":\n        case \"com.amazonaws.ssm#InvalidTarget\":\n            throw await de_InvalidTargetRes(parsedOutput, context);\n        case \"InvalidTargetMaps\":\n        case \"com.amazonaws.ssm#InvalidTargetMaps\":\n            throw await de_InvalidTargetMapsRes(parsedOutput, context);\n        case \"InvalidUpdate\":\n        case \"com.amazonaws.ssm#InvalidUpdate\":\n            throw await de_InvalidUpdateRes(parsedOutput, context);\n        case \"TooManyUpdates\":\n        case \"com.amazonaws.ssm#TooManyUpdates\":\n            throw await de_TooManyUpdatesRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_UpdateAssociationStatusCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_UpdateAssociationStatusCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_UpdateAssociationStatusResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_UpdateAssociationStatusCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"AssociationDoesNotExist\":\n        case \"com.amazonaws.ssm#AssociationDoesNotExist\":\n            throw await de_AssociationDoesNotExistRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidDocument\":\n        case \"com.amazonaws.ssm#InvalidDocument\":\n            throw await de_InvalidDocumentRes(parsedOutput, context);\n        case \"InvalidInstanceId\":\n        case \"com.amazonaws.ssm#InvalidInstanceId\":\n            throw await de_InvalidInstanceIdRes(parsedOutput, context);\n        case \"StatusUnchanged\":\n        case \"com.amazonaws.ssm#StatusUnchanged\":\n            throw await de_StatusUnchangedRes(parsedOutput, context);\n        case \"TooManyUpdates\":\n        case \"com.amazonaws.ssm#TooManyUpdates\":\n            throw await de_TooManyUpdatesRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_UpdateDocumentCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_UpdateDocumentCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_UpdateDocumentResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_UpdateDocumentCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"DocumentVersionLimitExceeded\":\n        case \"com.amazonaws.ssm#DocumentVersionLimitExceeded\":\n            throw await de_DocumentVersionLimitExceededRes(parsedOutput, context);\n        case \"DuplicateDocumentContent\":\n        case \"com.amazonaws.ssm#DuplicateDocumentContent\":\n            throw await de_DuplicateDocumentContentRes(parsedOutput, context);\n        case \"DuplicateDocumentVersionName\":\n        case \"com.amazonaws.ssm#DuplicateDocumentVersionName\":\n            throw await de_DuplicateDocumentVersionNameRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidDocument\":\n        case \"com.amazonaws.ssm#InvalidDocument\":\n            throw await de_InvalidDocumentRes(parsedOutput, context);\n        case \"InvalidDocumentContent\":\n        case \"com.amazonaws.ssm#InvalidDocumentContent\":\n            throw await de_InvalidDocumentContentRes(parsedOutput, context);\n        case \"InvalidDocumentOperation\":\n        case \"com.amazonaws.ssm#InvalidDocumentOperation\":\n            throw await de_InvalidDocumentOperationRes(parsedOutput, context);\n        case \"InvalidDocumentSchemaVersion\":\n        case \"com.amazonaws.ssm#InvalidDocumentSchemaVersion\":\n            throw await de_InvalidDocumentSchemaVersionRes(parsedOutput, context);\n        case \"InvalidDocumentVersion\":\n        case \"com.amazonaws.ssm#InvalidDocumentVersion\":\n            throw await de_InvalidDocumentVersionRes(parsedOutput, context);\n        case \"MaxDocumentSizeExceeded\":\n        case \"com.amazonaws.ssm#MaxDocumentSizeExceeded\":\n            throw await de_MaxDocumentSizeExceededRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_UpdateDocumentDefaultVersionCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_UpdateDocumentDefaultVersionCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_UpdateDocumentDefaultVersionCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidDocument\":\n        case \"com.amazonaws.ssm#InvalidDocument\":\n            throw await de_InvalidDocumentRes(parsedOutput, context);\n        case \"InvalidDocumentSchemaVersion\":\n        case \"com.amazonaws.ssm#InvalidDocumentSchemaVersion\":\n            throw await de_InvalidDocumentSchemaVersionRes(parsedOutput, context);\n        case \"InvalidDocumentVersion\":\n        case \"com.amazonaws.ssm#InvalidDocumentVersion\":\n            throw await de_InvalidDocumentVersionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_UpdateDocumentMetadataCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_UpdateDocumentMetadataCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_UpdateDocumentMetadataCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidDocument\":\n        case \"com.amazonaws.ssm#InvalidDocument\":\n            throw await de_InvalidDocumentRes(parsedOutput, context);\n        case \"InvalidDocumentOperation\":\n        case \"com.amazonaws.ssm#InvalidDocumentOperation\":\n            throw await de_InvalidDocumentOperationRes(parsedOutput, context);\n        case \"InvalidDocumentVersion\":\n        case \"com.amazonaws.ssm#InvalidDocumentVersion\":\n            throw await de_InvalidDocumentVersionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_UpdateMaintenanceWindowCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_UpdateMaintenanceWindowCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_UpdateMaintenanceWindowCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"DoesNotExistException\":\n        case \"com.amazonaws.ssm#DoesNotExistException\":\n            throw await de_DoesNotExistExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_UpdateMaintenanceWindowTargetCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_UpdateMaintenanceWindowTargetCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_UpdateMaintenanceWindowTargetCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"DoesNotExistException\":\n        case \"com.amazonaws.ssm#DoesNotExistException\":\n            throw await de_DoesNotExistExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_UpdateMaintenanceWindowTaskCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_UpdateMaintenanceWindowTaskCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_UpdateMaintenanceWindowTaskResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_UpdateMaintenanceWindowTaskCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"DoesNotExistException\":\n        case \"com.amazonaws.ssm#DoesNotExistException\":\n            throw await de_DoesNotExistExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_UpdateManagedInstanceRoleCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_UpdateManagedInstanceRoleCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_UpdateManagedInstanceRoleCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidInstanceId\":\n        case \"com.amazonaws.ssm#InvalidInstanceId\":\n            throw await de_InvalidInstanceIdRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_UpdateOpsItemCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_UpdateOpsItemCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_UpdateOpsItemCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"OpsItemAccessDeniedException\":\n        case \"com.amazonaws.ssm#OpsItemAccessDeniedException\":\n            throw await de_OpsItemAccessDeniedExceptionRes(parsedOutput, context);\n        case \"OpsItemAlreadyExistsException\":\n        case \"com.amazonaws.ssm#OpsItemAlreadyExistsException\":\n            throw await de_OpsItemAlreadyExistsExceptionRes(parsedOutput, context);\n        case \"OpsItemConflictException\":\n        case \"com.amazonaws.ssm#OpsItemConflictException\":\n            throw await de_OpsItemConflictExceptionRes(parsedOutput, context);\n        case \"OpsItemInvalidParameterException\":\n        case \"com.amazonaws.ssm#OpsItemInvalidParameterException\":\n            throw await de_OpsItemInvalidParameterExceptionRes(parsedOutput, context);\n        case \"OpsItemLimitExceededException\":\n        case \"com.amazonaws.ssm#OpsItemLimitExceededException\":\n            throw await de_OpsItemLimitExceededExceptionRes(parsedOutput, context);\n        case \"OpsItemNotFoundException\":\n        case \"com.amazonaws.ssm#OpsItemNotFoundException\":\n            throw await de_OpsItemNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_UpdateOpsMetadataCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_UpdateOpsMetadataCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_UpdateOpsMetadataCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"OpsMetadataInvalidArgumentException\":\n        case \"com.amazonaws.ssm#OpsMetadataInvalidArgumentException\":\n            throw await de_OpsMetadataInvalidArgumentExceptionRes(parsedOutput, context);\n        case \"OpsMetadataKeyLimitExceededException\":\n        case \"com.amazonaws.ssm#OpsMetadataKeyLimitExceededException\":\n            throw await de_OpsMetadataKeyLimitExceededExceptionRes(parsedOutput, context);\n        case \"OpsMetadataNotFoundException\":\n        case \"com.amazonaws.ssm#OpsMetadataNotFoundException\":\n            throw await de_OpsMetadataNotFoundExceptionRes(parsedOutput, context);\n        case \"OpsMetadataTooManyUpdatesException\":\n        case \"com.amazonaws.ssm#OpsMetadataTooManyUpdatesException\":\n            throw await de_OpsMetadataTooManyUpdatesExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_UpdatePatchBaselineCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_UpdatePatchBaselineCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_UpdatePatchBaselineResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_UpdatePatchBaselineCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"DoesNotExistException\":\n        case \"com.amazonaws.ssm#DoesNotExistException\":\n            throw await de_DoesNotExistExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_UpdateResourceDataSyncCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_UpdateResourceDataSyncCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_UpdateResourceDataSyncCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"ResourceDataSyncConflictException\":\n        case \"com.amazonaws.ssm#ResourceDataSyncConflictException\":\n            throw await de_ResourceDataSyncConflictExceptionRes(parsedOutput, context);\n        case \"ResourceDataSyncInvalidConfigurationException\":\n        case \"com.amazonaws.ssm#ResourceDataSyncInvalidConfigurationException\":\n            throw await de_ResourceDataSyncInvalidConfigurationExceptionRes(parsedOutput, context);\n        case \"ResourceDataSyncNotFoundException\":\n        case \"com.amazonaws.ssm#ResourceDataSyncNotFoundException\":\n            throw await de_ResourceDataSyncNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_UpdateServiceSettingCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_UpdateServiceSettingCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_UpdateServiceSettingCommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"ServiceSettingNotFound\":\n        case \"com.amazonaws.ssm#ServiceSettingNotFound\":\n            throw await de_ServiceSettingNotFoundRes(parsedOutput, context);\n        case \"TooManyUpdates\":\n        case \"com.amazonaws.ssm#TooManyUpdates\":\n            throw await de_TooManyUpdatesRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst de_AlreadyExistsExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.AlreadyExistsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_AssociatedInstancesRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.AssociatedInstances({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_AssociationAlreadyExistsRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.AssociationAlreadyExists({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_AssociationDoesNotExistRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.AssociationDoesNotExist({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_AssociationExecutionDoesNotExistRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.AssociationExecutionDoesNotExist({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_AssociationLimitExceededRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.AssociationLimitExceeded({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_AssociationVersionLimitExceededRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_2__WEBPACK_IMPORTED_MODULE_3__.AssociationVersionLimitExceeded({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_AutomationDefinitionNotApprovedExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.AutomationDefinitionNotApprovedException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_AutomationDefinitionNotFoundExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.AutomationDefinitionNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_AutomationDefinitionVersionNotFoundExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.AutomationDefinitionVersionNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_AutomationExecutionLimitExceededExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.AutomationExecutionLimitExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_AutomationExecutionNotFoundExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.AutomationExecutionNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_AutomationStepNotFoundExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.AutomationStepNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_ComplianceTypeCountLimitExceededExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.ComplianceTypeCountLimitExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_CustomSchemaCountLimitExceededExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.CustomSchemaCountLimitExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_DocumentAlreadyExistsRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.DocumentAlreadyExists({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_DocumentLimitExceededRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.DocumentLimitExceeded({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_DocumentPermissionLimitRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.DocumentPermissionLimit({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_DocumentVersionLimitExceededRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_2__WEBPACK_IMPORTED_MODULE_3__.DocumentVersionLimitExceeded({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_DoesNotExistExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.DoesNotExistException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_DuplicateDocumentContentRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_2__WEBPACK_IMPORTED_MODULE_3__.DuplicateDocumentContent({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_DuplicateDocumentVersionNameRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_2__WEBPACK_IMPORTED_MODULE_3__.DuplicateDocumentVersionName({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_DuplicateInstanceIdRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.DuplicateInstanceId({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_FeatureNotAvailableExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.FeatureNotAvailableException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_HierarchyLevelLimitExceededExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.HierarchyLevelLimitExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_HierarchyTypeMismatchExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.HierarchyTypeMismatchException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_IdempotentParameterMismatchRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.IdempotentParameterMismatch({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_IncompatiblePolicyExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.IncompatiblePolicyException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InternalServerErrorRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.InternalServerError({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InvalidActivationRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.InvalidActivation({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InvalidActivationIdRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.InvalidActivationId({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InvalidAggregatorExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.InvalidAggregatorException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InvalidAllowedPatternExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.InvalidAllowedPatternException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InvalidAssociationRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.InvalidAssociation({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InvalidAssociationVersionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.InvalidAssociationVersion({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InvalidAutomationExecutionParametersExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.InvalidAutomationExecutionParametersException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InvalidAutomationSignalExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.InvalidAutomationSignalException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InvalidAutomationStatusUpdateExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.InvalidAutomationStatusUpdateException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InvalidCommandIdRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.InvalidCommandId({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InvalidDeleteInventoryParametersExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.InvalidDeleteInventoryParametersException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InvalidDeletionIdExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.InvalidDeletionIdException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InvalidDocumentRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.InvalidDocument({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InvalidDocumentContentRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.InvalidDocumentContent({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InvalidDocumentOperationRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.InvalidDocumentOperation({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InvalidDocumentSchemaVersionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.InvalidDocumentSchemaVersion({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InvalidDocumentTypeRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.InvalidDocumentType({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InvalidDocumentVersionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.InvalidDocumentVersion({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InvalidFilterRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.InvalidFilter({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InvalidFilterKeyRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.InvalidFilterKey({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InvalidFilterOptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.InvalidFilterOption({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InvalidFilterValueRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.InvalidFilterValue({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InvalidInstanceIdRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.InvalidInstanceId({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InvalidInstanceInformationFilterValueRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.InvalidInstanceInformationFilterValue({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InvalidInventoryGroupExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.InvalidInventoryGroupException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InvalidInventoryItemContextExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.InvalidInventoryItemContextException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InvalidInventoryRequestExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.InvalidInventoryRequestException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InvalidItemContentExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.InvalidItemContentException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InvalidKeyIdRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.InvalidKeyId({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InvalidNextTokenRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.InvalidNextToken({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InvalidNotificationConfigRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.InvalidNotificationConfig({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InvalidOptionExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.InvalidOptionException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InvalidOutputFolderRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.InvalidOutputFolder({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InvalidOutputLocationRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.InvalidOutputLocation({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InvalidParametersRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.InvalidParameters({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InvalidPermissionTypeRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.InvalidPermissionType({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InvalidPluginNameRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.InvalidPluginName({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InvalidPolicyAttributeExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.InvalidPolicyAttributeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InvalidPolicyTypeExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.InvalidPolicyTypeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InvalidResourceIdRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.InvalidResourceId({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InvalidResourceTypeRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.InvalidResourceType({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InvalidResultAttributeExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.InvalidResultAttributeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InvalidRoleRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.InvalidRole({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InvalidScheduleRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.InvalidSchedule({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InvalidTagRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.InvalidTag({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InvalidTargetRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.InvalidTarget({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InvalidTargetMapsRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.InvalidTargetMaps({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InvalidTypeNameExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.InvalidTypeNameException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InvalidUpdateRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_2__WEBPACK_IMPORTED_MODULE_3__.InvalidUpdate({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InvocationDoesNotExistRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.InvocationDoesNotExist({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_ItemContentMismatchExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.ItemContentMismatchException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_ItemSizeLimitExceededExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.ItemSizeLimitExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_MaxDocumentSizeExceededRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.MaxDocumentSizeExceeded({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_OpsItemAccessDeniedExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.OpsItemAccessDeniedException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_OpsItemAlreadyExistsExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.OpsItemAlreadyExistsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_OpsItemConflictExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.OpsItemConflictException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_OpsItemInvalidParameterExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.OpsItemInvalidParameterException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_OpsItemLimitExceededExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.OpsItemLimitExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_OpsItemNotFoundExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.OpsItemNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_OpsItemRelatedItemAlreadyExistsExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.OpsItemRelatedItemAlreadyExistsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_OpsItemRelatedItemAssociationNotFoundExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.OpsItemRelatedItemAssociationNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_OpsMetadataAlreadyExistsExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.OpsMetadataAlreadyExistsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_OpsMetadataInvalidArgumentExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.OpsMetadataInvalidArgumentException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_OpsMetadataKeyLimitExceededExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_2__WEBPACK_IMPORTED_MODULE_3__.OpsMetadataKeyLimitExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_OpsMetadataLimitExceededExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.OpsMetadataLimitExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_OpsMetadataNotFoundExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.OpsMetadataNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_OpsMetadataTooManyUpdatesExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.OpsMetadataTooManyUpdatesException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_ParameterAlreadyExistsRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.ParameterAlreadyExists({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_ParameterLimitExceededRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.ParameterLimitExceeded({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_ParameterMaxVersionLimitExceededRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.ParameterMaxVersionLimitExceeded({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_ParameterNotFoundRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.ParameterNotFound({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_ParameterPatternMismatchExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.ParameterPatternMismatchException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_ParameterVersionLabelLimitExceededRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.ParameterVersionLabelLimitExceeded({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_ParameterVersionNotFoundRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.ParameterVersionNotFound({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_PoliciesLimitExceededExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.PoliciesLimitExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_ResourceDataSyncAlreadyExistsExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.ResourceDataSyncAlreadyExistsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_ResourceDataSyncConflictExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_2__WEBPACK_IMPORTED_MODULE_3__.ResourceDataSyncConflictException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_ResourceDataSyncCountExceededExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.ResourceDataSyncCountExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_ResourceDataSyncInvalidConfigurationExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.ResourceDataSyncInvalidConfigurationException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_ResourceDataSyncNotFoundExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.ResourceDataSyncNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_ResourceInUseExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.ResourceInUseException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_ResourceLimitExceededExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.ResourceLimitExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_ResourcePolicyConflictExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.ResourcePolicyConflictException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_ResourcePolicyInvalidParameterExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.ResourcePolicyInvalidParameterException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_ResourcePolicyLimitExceededExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.ResourcePolicyLimitExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_ServiceSettingNotFoundRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.ServiceSettingNotFound({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_StatusUnchangedRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_2__WEBPACK_IMPORTED_MODULE_3__.StatusUnchanged({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_SubTypeCountLimitExceededExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.SubTypeCountLimitExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_TargetInUseExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.TargetInUseException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_TargetNotConnectedRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.TargetNotConnected({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_TooManyTagsErrorRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.TooManyTagsError({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_TooManyUpdatesRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.TooManyUpdates({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_TotalSizeLimitExceededExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.TotalSizeLimitExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_UnsupportedCalendarExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.UnsupportedCalendarException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_UnsupportedFeatureRequiredExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.UnsupportedFeatureRequiredException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_UnsupportedInventoryItemContextExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.UnsupportedInventoryItemContextException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_UnsupportedInventorySchemaVersionExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.UnsupportedInventorySchemaVersionException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_UnsupportedOperatingSystemRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.UnsupportedOperatingSystem({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_UnsupportedParameterTypeRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_1__WEBPACK_IMPORTED_MODULE_4__.UnsupportedParameterType({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_UnsupportedPlatformTypeRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(body);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.UnsupportedPlatformType({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst se_AssociationStatus = (input, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(input, {\n        AdditionalInfo: [],\n        Date: (_)=>Math.round(_.getTime() / 1000),\n        Message: [],\n        Name: []\n    });\n};\nconst se_ComplianceExecutionSummary = (input, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(input, {\n        ExecutionId: [],\n        ExecutionTime: (_)=>Math.round(_.getTime() / 1000),\n        ExecutionType: []\n    });\n};\nconst se_CreateActivationRequest = (input, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(input, {\n        DefaultInstanceName: [],\n        Description: [],\n        ExpirationDate: (_)=>Math.round(_.getTime() / 1000),\n        IamRole: [],\n        RegistrationLimit: [],\n        RegistrationMetadata: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        Tags: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json\n    });\n};\nconst se_CreateMaintenanceWindowRequest = (input, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(input, {\n        AllowUnassociatedTargets: [],\n        ClientToken: [\n            true,\n            (_)=>_ ?? (0,uuid__WEBPACK_IMPORTED_MODULE_5__[\"default\"])()\n        ],\n        Cutoff: [],\n        Description: [],\n        Duration: [],\n        EndDate: [],\n        Name: [],\n        Schedule: [],\n        ScheduleOffset: [],\n        ScheduleTimezone: [],\n        StartDate: [],\n        Tags: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json\n    });\n};\nconst se_CreateOpsItemRequest = (input, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(input, {\n        AccountId: [],\n        ActualEndTime: (_)=>Math.round(_.getTime() / 1000),\n        ActualStartTime: (_)=>Math.round(_.getTime() / 1000),\n        Category: [],\n        Description: [],\n        Notifications: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        OperationalData: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        OpsItemType: [],\n        PlannedEndTime: (_)=>Math.round(_.getTime() / 1000),\n        PlannedStartTime: (_)=>Math.round(_.getTime() / 1000),\n        Priority: [],\n        RelatedOpsItems: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        Severity: [],\n        Source: [],\n        Tags: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        Title: []\n    });\n};\nconst se_CreatePatchBaselineRequest = (input, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(input, {\n        ApprovalRules: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        ApprovedPatches: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        ApprovedPatchesComplianceLevel: [],\n        ApprovedPatchesEnableNonSecurity: [],\n        ClientToken: [\n            true,\n            (_)=>_ ?? (0,uuid__WEBPACK_IMPORTED_MODULE_5__[\"default\"])()\n        ],\n        Description: [],\n        GlobalFilters: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        Name: [],\n        OperatingSystem: [],\n        RejectedPatches: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        RejectedPatchesAction: [],\n        Sources: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        Tags: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json\n    });\n};\nconst se_DeleteInventoryRequest = (input, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(input, {\n        ClientToken: [\n            true,\n            (_)=>_ ?? (0,uuid__WEBPACK_IMPORTED_MODULE_5__[\"default\"])()\n        ],\n        DryRun: [],\n        SchemaDeleteOption: [],\n        TypeName: []\n    });\n};\nconst se_GetInventoryRequest = (input, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(input, {\n        Aggregators: (_)=>se_InventoryAggregatorList(_, context),\n        Filters: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        MaxResults: [],\n        NextToken: [],\n        ResultAttributes: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json\n    });\n};\nconst se_GetOpsSummaryRequest = (input, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(input, {\n        Aggregators: (_)=>se_OpsAggregatorList(_, context),\n        Filters: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        MaxResults: [],\n        NextToken: [],\n        ResultAttributes: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        SyncName: []\n    });\n};\nconst se_InventoryAggregator = (input, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(input, {\n        Aggregators: (_)=>se_InventoryAggregatorList(_, context),\n        Expression: [],\n        Groups: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json\n    });\n};\nconst se_InventoryAggregatorList = (input, context)=>{\n    return input.filter((e)=>e != null).map((entry)=>{\n        return se_InventoryAggregator(entry, context);\n    });\n};\nconst se_MaintenanceWindowLambdaParameters = (input, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(input, {\n        ClientContext: [],\n        Payload: context.base64Encoder,\n        Qualifier: []\n    });\n};\nconst se_MaintenanceWindowTaskInvocationParameters = (input, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(input, {\n        Automation: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        Lambda: (_)=>se_MaintenanceWindowLambdaParameters(_, context),\n        RunCommand: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        StepFunctions: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json\n    });\n};\nconst se_OpsAggregator = (input, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(input, {\n        AggregatorType: [],\n        Aggregators: (_)=>se_OpsAggregatorList(_, context),\n        AttributeName: [],\n        Filters: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        TypeName: [],\n        Values: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json\n    });\n};\nconst se_OpsAggregatorList = (input, context)=>{\n    return input.filter((e)=>e != null).map((entry)=>{\n        return se_OpsAggregator(entry, context);\n    });\n};\nconst se_PutComplianceItemsRequest = (input, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(input, {\n        ComplianceType: [],\n        ExecutionSummary: (_)=>se_ComplianceExecutionSummary(_, context),\n        ItemContentHash: [],\n        Items: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        ResourceId: [],\n        ResourceType: [],\n        UploadType: []\n    });\n};\nconst se_RegisterTargetWithMaintenanceWindowRequest = (input, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(input, {\n        ClientToken: [\n            true,\n            (_)=>_ ?? (0,uuid__WEBPACK_IMPORTED_MODULE_5__[\"default\"])()\n        ],\n        Description: [],\n        Name: [],\n        OwnerInformation: [],\n        ResourceType: [],\n        Targets: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        WindowId: []\n    });\n};\nconst se_RegisterTaskWithMaintenanceWindowRequest = (input, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(input, {\n        AlarmConfiguration: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        ClientToken: [\n            true,\n            (_)=>_ ?? (0,uuid__WEBPACK_IMPORTED_MODULE_5__[\"default\"])()\n        ],\n        CutoffBehavior: [],\n        Description: [],\n        LoggingInfo: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        MaxConcurrency: [],\n        MaxErrors: [],\n        Name: [],\n        Priority: [],\n        ServiceRoleArn: [],\n        Targets: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        TaskArn: [],\n        TaskInvocationParameters: (_)=>se_MaintenanceWindowTaskInvocationParameters(_, context),\n        TaskParameters: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        TaskType: [],\n        WindowId: []\n    });\n};\nconst se_StartChangeRequestExecutionRequest = (input, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(input, {\n        AutoApprove: [],\n        ChangeDetails: [],\n        ChangeRequestName: [],\n        ClientToken: [],\n        DocumentName: [],\n        DocumentVersion: [],\n        Parameters: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        Runbooks: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        ScheduledEndTime: (_)=>Math.round(_.getTime() / 1000),\n        ScheduledTime: (_)=>Math.round(_.getTime() / 1000),\n        Tags: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json\n    });\n};\nconst se_UpdateAssociationStatusRequest = (input, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(input, {\n        AssociationStatus: (_)=>se_AssociationStatus(_, context),\n        InstanceId: [],\n        Name: []\n    });\n};\nconst se_UpdateMaintenanceWindowTaskRequest = (input, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(input, {\n        AlarmConfiguration: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        CutoffBehavior: [],\n        Description: [],\n        LoggingInfo: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        MaxConcurrency: [],\n        MaxErrors: [],\n        Name: [],\n        Priority: [],\n        Replace: [],\n        ServiceRoleArn: [],\n        Targets: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        TaskArn: [],\n        TaskInvocationParameters: (_)=>se_MaintenanceWindowTaskInvocationParameters(_, context),\n        TaskParameters: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        WindowId: [],\n        WindowTaskId: []\n    });\n};\nconst se_UpdateOpsItemRequest = (input, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(input, {\n        ActualEndTime: (_)=>Math.round(_.getTime() / 1000),\n        ActualStartTime: (_)=>Math.round(_.getTime() / 1000),\n        Category: [],\n        Description: [],\n        Notifications: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        OperationalData: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        OperationalDataToDelete: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        OpsItemArn: [],\n        OpsItemId: [],\n        PlannedEndTime: (_)=>Math.round(_.getTime() / 1000),\n        PlannedStartTime: (_)=>Math.round(_.getTime() / 1000),\n        Priority: [],\n        RelatedOpsItems: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        Severity: [],\n        Status: [],\n        Title: []\n    });\n};\nconst de_Activation = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        ActivationId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        CreatedDate: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        DefaultInstanceName: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Description: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        ExpirationDate: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        Expired: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectBoolean,\n        IamRole: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        RegistrationLimit: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectInt32,\n        RegistrationsCount: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectInt32,\n        Tags: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json\n    });\n};\nconst de_ActivationList = (output, context)=>{\n    const retVal = (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_Activation(entry, context);\n    });\n    return retVal;\n};\nconst de_Association = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        AssociationId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        AssociationName: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        AssociationVersion: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        DocumentVersion: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        InstanceId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        LastExecutionDate: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        Name: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Overview: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        ScheduleExpression: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        ScheduleOffset: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectInt32,\n        TargetMaps: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        Targets: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json\n    });\n};\nconst de_AssociationDescription = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        AlarmConfiguration: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        ApplyOnlyAtCronInterval: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectBoolean,\n        AssociationId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        AssociationName: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        AssociationVersion: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        AutomationTargetParameterName: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        CalendarNames: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        ComplianceSeverity: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Date: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        DocumentVersion: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        InstanceId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        LastExecutionDate: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        LastSuccessfulExecutionDate: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        LastUpdateAssociationDate: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        MaxConcurrency: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        MaxErrors: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Name: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        OutputLocation: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        Overview: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        Parameters: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        ScheduleExpression: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        ScheduleOffset: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectInt32,\n        Status: (_)=>de_AssociationStatus(_, context),\n        SyncCompliance: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        TargetLocations: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        TargetMaps: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        Targets: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        TriggeredAlarms: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json\n    });\n};\nconst de_AssociationDescriptionList = (output, context)=>{\n    const retVal = (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_AssociationDescription(entry, context);\n    });\n    return retVal;\n};\nconst de_AssociationExecution = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        AlarmConfiguration: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        AssociationId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        AssociationVersion: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        CreatedTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        DetailedStatus: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        ExecutionId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        LastExecutionDate: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        ResourceCountByStatus: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Status: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        TriggeredAlarms: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json\n    });\n};\nconst de_AssociationExecutionsList = (output, context)=>{\n    const retVal = (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_AssociationExecution(entry, context);\n    });\n    return retVal;\n};\nconst de_AssociationExecutionTarget = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        AssociationId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        AssociationVersion: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        DetailedStatus: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        ExecutionId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        LastExecutionDate: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        OutputSource: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        ResourceId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        ResourceType: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Status: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_AssociationExecutionTargetsList = (output, context)=>{\n    const retVal = (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_AssociationExecutionTarget(entry, context);\n    });\n    return retVal;\n};\nconst de_AssociationList = (output, context)=>{\n    const retVal = (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_Association(entry, context);\n    });\n    return retVal;\n};\nconst de_AssociationStatus = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        AdditionalInfo: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Date: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        Message: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Name: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_AssociationVersionInfo = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        ApplyOnlyAtCronInterval: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectBoolean,\n        AssociationId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        AssociationName: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        AssociationVersion: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        CalendarNames: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        ComplianceSeverity: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        CreatedDate: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        DocumentVersion: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        MaxConcurrency: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        MaxErrors: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Name: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        OutputLocation: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        Parameters: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        ScheduleExpression: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        ScheduleOffset: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectInt32,\n        SyncCompliance: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        TargetLocations: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        TargetMaps: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        Targets: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json\n    });\n};\nconst de_AssociationVersionList = (output, context)=>{\n    const retVal = (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_AssociationVersionInfo(entry, context);\n    });\n    return retVal;\n};\nconst de_AutomationExecution = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        AlarmConfiguration: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        AssociationId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        AutomationExecutionId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        AutomationExecutionStatus: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        AutomationSubtype: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        ChangeRequestName: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        CurrentAction: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        CurrentStepName: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        DocumentName: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        DocumentVersion: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        ExecutedBy: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        ExecutionEndTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        ExecutionStartTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        FailureMessage: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        MaxConcurrency: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        MaxErrors: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Mode: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        OpsItemId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Outputs: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        Parameters: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        ParentAutomationExecutionId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        ProgressCounters: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        ResolvedTargets: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        Runbooks: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        ScheduledTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        StepExecutions: (_)=>de_StepExecutionList(_, context),\n        StepExecutionsTruncated: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectBoolean,\n        Target: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        TargetLocations: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        TargetMaps: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        TargetParameterName: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Targets: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        TriggeredAlarms: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json\n    });\n};\nconst de_AutomationExecutionMetadata = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        AlarmConfiguration: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        AssociationId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        AutomationExecutionId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        AutomationExecutionStatus: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        AutomationSubtype: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        AutomationType: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        ChangeRequestName: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        CurrentAction: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        CurrentStepName: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        DocumentName: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        DocumentVersion: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        ExecutedBy: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        ExecutionEndTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        ExecutionStartTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        FailureMessage: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        LogFile: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        MaxConcurrency: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        MaxErrors: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Mode: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        OpsItemId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Outputs: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        ParentAutomationExecutionId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        ResolvedTargets: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        Runbooks: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        ScheduledTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        Target: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        TargetMaps: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        TargetParameterName: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Targets: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        TriggeredAlarms: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json\n    });\n};\nconst de_AutomationExecutionMetadataList = (output, context)=>{\n    const retVal = (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_AutomationExecutionMetadata(entry, context);\n    });\n    return retVal;\n};\nconst de_Command = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        AlarmConfiguration: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        CloudWatchOutputConfig: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        CommandId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Comment: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        CompletedCount: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectInt32,\n        DeliveryTimedOutCount: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectInt32,\n        DocumentName: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        DocumentVersion: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        ErrorCount: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectInt32,\n        ExpiresAfter: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        InstanceIds: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        MaxConcurrency: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        MaxErrors: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        NotificationConfig: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        OutputS3BucketName: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        OutputS3KeyPrefix: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        OutputS3Region: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Parameters: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        RequestedDateTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        ServiceRole: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Status: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        StatusDetails: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        TargetCount: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectInt32,\n        Targets: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        TimeoutSeconds: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectInt32,\n        TriggeredAlarms: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json\n    });\n};\nconst de_CommandInvocation = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        CloudWatchOutputConfig: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        CommandId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        CommandPlugins: (_)=>de_CommandPluginList(_, context),\n        Comment: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        DocumentName: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        DocumentVersion: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        InstanceId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        InstanceName: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        NotificationConfig: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        RequestedDateTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        ServiceRole: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        StandardErrorUrl: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        StandardOutputUrl: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Status: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        StatusDetails: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        TraceOutput: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_CommandInvocationList = (output, context)=>{\n    const retVal = (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_CommandInvocation(entry, context);\n    });\n    return retVal;\n};\nconst de_CommandList = (output, context)=>{\n    const retVal = (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_Command(entry, context);\n    });\n    return retVal;\n};\nconst de_CommandPlugin = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        Name: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Output: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        OutputS3BucketName: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        OutputS3KeyPrefix: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        OutputS3Region: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        ResponseCode: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectInt32,\n        ResponseFinishDateTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        ResponseStartDateTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        StandardErrorUrl: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        StandardOutputUrl: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Status: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        StatusDetails: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_CommandPluginList = (output, context)=>{\n    const retVal = (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_CommandPlugin(entry, context);\n    });\n    return retVal;\n};\nconst de_ComplianceExecutionSummary = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        ExecutionId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        ExecutionTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        ExecutionType: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_ComplianceItem = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        ComplianceType: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Details: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        ExecutionSummary: (_)=>de_ComplianceExecutionSummary(_, context),\n        Id: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        ResourceId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        ResourceType: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Severity: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Status: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Title: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_ComplianceItemList = (output, context)=>{\n    const retVal = (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_ComplianceItem(entry, context);\n    });\n    return retVal;\n};\nconst de_CreateAssociationBatchResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        Failed: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        Successful: (_)=>de_AssociationDescriptionList(_, context)\n    });\n};\nconst de_CreateAssociationResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        AssociationDescription: (_)=>de_AssociationDescription(_, context)\n    });\n};\nconst de_CreateDocumentResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        DocumentDescription: (_)=>de_DocumentDescription(_, context)\n    });\n};\nconst de_DescribeActivationsResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        ActivationList: (_)=>de_ActivationList(_, context),\n        NextToken: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_DescribeAssociationExecutionsResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        AssociationExecutions: (_)=>de_AssociationExecutionsList(_, context),\n        NextToken: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_DescribeAssociationExecutionTargetsResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        AssociationExecutionTargets: (_)=>de_AssociationExecutionTargetsList(_, context),\n        NextToken: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_DescribeAssociationResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        AssociationDescription: (_)=>de_AssociationDescription(_, context)\n    });\n};\nconst de_DescribeAutomationExecutionsResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        AutomationExecutionMetadataList: (_)=>de_AutomationExecutionMetadataList(_, context),\n        NextToken: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_DescribeAutomationStepExecutionsResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        NextToken: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        StepExecutions: (_)=>de_StepExecutionList(_, context)\n    });\n};\nconst de_DescribeAvailablePatchesResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        NextToken: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Patches: (_)=>de_PatchList(_, context)\n    });\n};\nconst de_DescribeDocumentResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        Document: (_)=>de_DocumentDescription(_, context)\n    });\n};\nconst de_DescribeEffectivePatchesForPatchBaselineResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        EffectivePatches: (_)=>de_EffectivePatchList(_, context),\n        NextToken: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_DescribeInstanceAssociationsStatusResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        InstanceAssociationStatusInfos: (_)=>de_InstanceAssociationStatusInfos(_, context),\n        NextToken: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_DescribeInstanceInformationResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        InstanceInformationList: (_)=>de_InstanceInformationList(_, context),\n        NextToken: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_DescribeInstancePatchesResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        NextToken: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Patches: (_)=>de_PatchComplianceDataList(_, context)\n    });\n};\nconst de_DescribeInstancePatchStatesForPatchGroupResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        InstancePatchStates: (_)=>de_InstancePatchStatesList(_, context),\n        NextToken: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_DescribeInstancePatchStatesResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        InstancePatchStates: (_)=>de_InstancePatchStateList(_, context),\n        NextToken: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_DescribeInventoryDeletionsResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        InventoryDeletions: (_)=>de_InventoryDeletionsList(_, context),\n        NextToken: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_DescribeMaintenanceWindowExecutionsResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        NextToken: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        WindowExecutions: (_)=>de_MaintenanceWindowExecutionList(_, context)\n    });\n};\nconst de_DescribeMaintenanceWindowExecutionTaskInvocationsResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        NextToken: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        WindowExecutionTaskInvocationIdentities: (_)=>de_MaintenanceWindowExecutionTaskInvocationIdentityList(_, context)\n    });\n};\nconst de_DescribeMaintenanceWindowExecutionTasksResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        NextToken: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        WindowExecutionTaskIdentities: (_)=>de_MaintenanceWindowExecutionTaskIdentityList(_, context)\n    });\n};\nconst de_DescribeOpsItemsResponse = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        NextToken: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        OpsItemSummaries: (_)=>de_OpsItemSummaries(_, context)\n    });\n};\nconst de_DescribeParametersResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        NextToken: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Parameters: (_)=>de_ParameterMetadataList(_, context)\n    });\n};\nconst de_DescribeSessionsResponse = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        NextToken: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Sessions: (_)=>de_SessionList(_, context)\n    });\n};\nconst de_DocumentDescription = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        ApprovedVersion: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        AttachmentsInformation: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        Author: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Category: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        CategoryEnum: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        CreatedDate: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        DefaultVersion: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Description: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        DisplayName: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        DocumentFormat: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        DocumentType: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        DocumentVersion: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Hash: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        HashType: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        LatestVersion: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Name: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Owner: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Parameters: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        PendingReviewVersion: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        PlatformTypes: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        Requires: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        ReviewInformation: (_)=>de_ReviewInformationList(_, context),\n        ReviewStatus: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        SchemaVersion: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Sha1: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Status: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        StatusInformation: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Tags: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        TargetType: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        VersionName: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_DocumentIdentifier = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        Author: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        CreatedDate: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        DisplayName: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        DocumentFormat: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        DocumentType: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        DocumentVersion: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Name: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Owner: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        PlatformTypes: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        Requires: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        ReviewStatus: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        SchemaVersion: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Tags: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        TargetType: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        VersionName: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_DocumentIdentifierList = (output, context)=>{\n    const retVal = (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_DocumentIdentifier(entry, context);\n    });\n    return retVal;\n};\nconst de_DocumentMetadataResponseInfo = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        ReviewerResponse: (_)=>de_DocumentReviewerResponseList(_, context)\n    });\n};\nconst de_DocumentReviewerResponseList = (output, context)=>{\n    const retVal = (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_DocumentReviewerResponseSource(entry, context);\n    });\n    return retVal;\n};\nconst de_DocumentReviewerResponseSource = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        Comment: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        CreateTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        ReviewStatus: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Reviewer: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        UpdatedTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_)))\n    });\n};\nconst de_DocumentVersionInfo = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        CreatedDate: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        DisplayName: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        DocumentFormat: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        DocumentVersion: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        IsDefaultVersion: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectBoolean,\n        Name: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        ReviewStatus: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Status: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        StatusInformation: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        VersionName: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_DocumentVersionList = (output, context)=>{\n    const retVal = (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_DocumentVersionInfo(entry, context);\n    });\n    return retVal;\n};\nconst de_EffectivePatch = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        Patch: (_)=>de_Patch(_, context),\n        PatchStatus: (_)=>de_PatchStatus(_, context)\n    });\n};\nconst de_EffectivePatchList = (output, context)=>{\n    const retVal = (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_EffectivePatch(entry, context);\n    });\n    return retVal;\n};\nconst de_GetAutomationExecutionResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        AutomationExecution: (_)=>de_AutomationExecution(_, context)\n    });\n};\nconst de_GetDocumentResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        AttachmentsContent: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        Content: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        CreatedDate: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        DisplayName: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        DocumentFormat: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        DocumentType: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        DocumentVersion: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Name: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Requires: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        ReviewStatus: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Status: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        StatusInformation: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        VersionName: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_GetMaintenanceWindowExecutionResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        EndTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        StartTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        Status: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        StatusDetails: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        TaskIds: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        WindowExecutionId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_GetMaintenanceWindowExecutionTaskInvocationResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        EndTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        ExecutionId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        InvocationId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        OwnerInformation: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Parameters: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        StartTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        Status: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        StatusDetails: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        TaskExecutionId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        TaskType: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        WindowExecutionId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        WindowTargetId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_GetMaintenanceWindowExecutionTaskResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        AlarmConfiguration: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        EndTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        MaxConcurrency: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        MaxErrors: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Priority: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectInt32,\n        ServiceRole: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        StartTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        Status: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        StatusDetails: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        TaskArn: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        TaskExecutionId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        TaskParameters: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        TriggeredAlarms: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        Type: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        WindowExecutionId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_GetMaintenanceWindowResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        AllowUnassociatedTargets: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectBoolean,\n        CreatedDate: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        Cutoff: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectInt32,\n        Description: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Duration: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectInt32,\n        Enabled: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectBoolean,\n        EndDate: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        ModifiedDate: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        Name: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        NextExecutionTime: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Schedule: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        ScheduleOffset: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectInt32,\n        ScheduleTimezone: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        StartDate: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        WindowId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_GetMaintenanceWindowTaskResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        AlarmConfiguration: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        CutoffBehavior: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Description: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        LoggingInfo: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        MaxConcurrency: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        MaxErrors: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Name: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Priority: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectInt32,\n        ServiceRoleArn: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Targets: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        TaskArn: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        TaskInvocationParameters: (_)=>de_MaintenanceWindowTaskInvocationParameters(_, context),\n        TaskParameters: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        TaskType: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        WindowId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        WindowTaskId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_GetOpsItemResponse = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        OpsItem: (_)=>de_OpsItem(_, context)\n    });\n};\nconst de_GetParameterHistoryResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        NextToken: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Parameters: (_)=>de_ParameterHistoryList(_, context)\n    });\n};\nconst de_GetParameterResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        Parameter: (_)=>de_Parameter(_, context)\n    });\n};\nconst de_GetParametersByPathResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        NextToken: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Parameters: (_)=>de_ParameterList(_, context)\n    });\n};\nconst de_GetParametersResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        InvalidParameters: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        Parameters: (_)=>de_ParameterList(_, context)\n    });\n};\nconst de_GetPatchBaselineResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        ApprovalRules: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        ApprovedPatches: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        ApprovedPatchesComplianceLevel: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        ApprovedPatchesEnableNonSecurity: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectBoolean,\n        BaselineId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        CreatedDate: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        Description: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        GlobalFilters: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        ModifiedDate: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        Name: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        OperatingSystem: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        PatchGroups: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        RejectedPatches: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        RejectedPatchesAction: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Sources: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json\n    });\n};\nconst de_GetServiceSettingResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        ServiceSetting: (_)=>de_ServiceSetting(_, context)\n    });\n};\nconst de_InstanceAssociationStatusInfo = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        AssociationId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        AssociationName: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        AssociationVersion: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        DetailedStatus: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        DocumentVersion: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        ErrorCode: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        ExecutionDate: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        ExecutionSummary: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        InstanceId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Name: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        OutputUrl: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        Status: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_InstanceAssociationStatusInfos = (output, context)=>{\n    const retVal = (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_InstanceAssociationStatusInfo(entry, context);\n    });\n    return retVal;\n};\nconst de_InstanceInformation = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        ActivationId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        AgentVersion: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        AssociationOverview: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        AssociationStatus: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        ComputerName: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        IPAddress: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        IamRole: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        InstanceId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        IsLatestVersion: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectBoolean,\n        LastAssociationExecutionDate: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        LastPingDateTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        LastSuccessfulAssociationExecutionDate: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        Name: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        PingStatus: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        PlatformName: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        PlatformType: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        PlatformVersion: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        RegistrationDate: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        ResourceType: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        SourceId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        SourceType: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_InstanceInformationList = (output, context)=>{\n    const retVal = (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_InstanceInformation(entry, context);\n    });\n    return retVal;\n};\nconst de_InstancePatchState = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        BaselineId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        CriticalNonCompliantCount: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectInt32,\n        FailedCount: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectInt32,\n        InstallOverrideList: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        InstalledCount: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectInt32,\n        InstalledOtherCount: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectInt32,\n        InstalledPendingRebootCount: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectInt32,\n        InstalledRejectedCount: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectInt32,\n        InstanceId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        LastNoRebootInstallOperationTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        MissingCount: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectInt32,\n        NotApplicableCount: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectInt32,\n        Operation: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        OperationEndTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        OperationStartTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        OtherNonCompliantCount: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectInt32,\n        OwnerInformation: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        PatchGroup: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        RebootOption: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        SecurityNonCompliantCount: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectInt32,\n        SnapshotId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        UnreportedNotApplicableCount: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectInt32\n    });\n};\nconst de_InstancePatchStateList = (output, context)=>{\n    const retVal = (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_InstancePatchState(entry, context);\n    });\n    return retVal;\n};\nconst de_InstancePatchStatesList = (output, context)=>{\n    const retVal = (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_InstancePatchState(entry, context);\n    });\n    return retVal;\n};\nconst de_InventoryDeletionsList = (output, context)=>{\n    const retVal = (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_InventoryDeletionStatusItem(entry, context);\n    });\n    return retVal;\n};\nconst de_InventoryDeletionStatusItem = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        DeletionId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        DeletionStartTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        DeletionSummary: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        LastStatus: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        LastStatusMessage: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        LastStatusUpdateTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        TypeName: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_ListAssociationsResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        Associations: (_)=>de_AssociationList(_, context),\n        NextToken: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_ListAssociationVersionsResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        AssociationVersions: (_)=>de_AssociationVersionList(_, context),\n        NextToken: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_ListCommandInvocationsResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        CommandInvocations: (_)=>de_CommandInvocationList(_, context),\n        NextToken: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_ListCommandsResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        Commands: (_)=>de_CommandList(_, context),\n        NextToken: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_ListComplianceItemsResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        ComplianceItems: (_)=>de_ComplianceItemList(_, context),\n        NextToken: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_ListDocumentMetadataHistoryResponse = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        Author: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        DocumentVersion: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Metadata: (_)=>de_DocumentMetadataResponseInfo(_, context),\n        Name: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        NextToken: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_ListDocumentsResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        DocumentIdentifiers: (_)=>de_DocumentIdentifierList(_, context),\n        NextToken: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_ListDocumentVersionsResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        DocumentVersions: (_)=>de_DocumentVersionList(_, context),\n        NextToken: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_ListOpsItemEventsResponse = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        NextToken: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Summaries: (_)=>de_OpsItemEventSummaries(_, context)\n    });\n};\nconst de_ListOpsItemRelatedItemsResponse = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        NextToken: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Summaries: (_)=>de_OpsItemRelatedItemSummaries(_, context)\n    });\n};\nconst de_ListOpsMetadataResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        NextToken: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        OpsMetadataList: (_)=>de_OpsMetadataList(_, context)\n    });\n};\nconst de_ListResourceComplianceSummariesResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        NextToken: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        ResourceComplianceSummaryItems: (_)=>de_ResourceComplianceSummaryItemList(_, context)\n    });\n};\nconst de_ListResourceDataSyncResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        NextToken: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        ResourceDataSyncItems: (_)=>de_ResourceDataSyncItemList(_, context)\n    });\n};\nconst de_MaintenanceWindowExecution = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        EndTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        StartTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        Status: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        StatusDetails: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        WindowExecutionId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        WindowId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_MaintenanceWindowExecutionList = (output, context)=>{\n    const retVal = (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_MaintenanceWindowExecution(entry, context);\n    });\n    return retVal;\n};\nconst de_MaintenanceWindowExecutionTaskIdentity = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        AlarmConfiguration: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        EndTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        StartTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        Status: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        StatusDetails: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        TaskArn: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        TaskExecutionId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        TaskType: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        TriggeredAlarms: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        WindowExecutionId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_MaintenanceWindowExecutionTaskIdentityList = (output, context)=>{\n    const retVal = (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_MaintenanceWindowExecutionTaskIdentity(entry, context);\n    });\n    return retVal;\n};\nconst de_MaintenanceWindowExecutionTaskInvocationIdentity = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        EndTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        ExecutionId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        InvocationId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        OwnerInformation: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Parameters: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        StartTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        Status: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        StatusDetails: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        TaskExecutionId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        TaskType: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        WindowExecutionId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        WindowTargetId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_MaintenanceWindowExecutionTaskInvocationIdentityList = (output, context)=>{\n    const retVal = (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_MaintenanceWindowExecutionTaskInvocationIdentity(entry, context);\n    });\n    return retVal;\n};\nconst de_MaintenanceWindowLambdaParameters = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        ClientContext: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Payload: context.base64Decoder,\n        Qualifier: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_MaintenanceWindowTaskInvocationParameters = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        Automation: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        Lambda: (_)=>de_MaintenanceWindowLambdaParameters(_, context),\n        RunCommand: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        StepFunctions: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json\n    });\n};\nconst de_OpsItem = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        ActualEndTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        ActualStartTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        Category: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        CreatedBy: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        CreatedTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        Description: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        LastModifiedBy: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        LastModifiedTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        Notifications: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        OperationalData: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        OpsItemArn: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        OpsItemId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        OpsItemType: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        PlannedEndTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        PlannedStartTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        Priority: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectInt32,\n        RelatedOpsItems: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        Severity: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Source: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Status: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Title: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Version: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_OpsItemEventSummaries = (output, context)=>{\n    const retVal = (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_OpsItemEventSummary(entry, context);\n    });\n    return retVal;\n};\nconst de_OpsItemEventSummary = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        CreatedBy: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        CreatedTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        Detail: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        DetailType: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        EventId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        OpsItemId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Source: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_OpsItemRelatedItemSummaries = (output, context)=>{\n    const retVal = (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_OpsItemRelatedItemSummary(entry, context);\n    });\n    return retVal;\n};\nconst de_OpsItemRelatedItemSummary = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        AssociationId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        AssociationType: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        CreatedBy: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        CreatedTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        LastModifiedBy: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        LastModifiedTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        OpsItemId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        ResourceType: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        ResourceUri: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_OpsItemSummaries = (output, context)=>{\n    const retVal = (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_OpsItemSummary(entry, context);\n    });\n    return retVal;\n};\nconst de_OpsItemSummary = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        ActualEndTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        ActualStartTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        Category: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        CreatedBy: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        CreatedTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        LastModifiedBy: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        LastModifiedTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        OperationalData: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        OpsItemId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        OpsItemType: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        PlannedEndTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        PlannedStartTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        Priority: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectInt32,\n        Severity: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Source: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Status: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Title: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_OpsMetadata = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        CreationDate: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        LastModifiedDate: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        LastModifiedUser: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        OpsMetadataArn: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        ResourceId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_OpsMetadataList = (output, context)=>{\n    const retVal = (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_OpsMetadata(entry, context);\n    });\n    return retVal;\n};\nconst de_Parameter = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        ARN: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        DataType: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        LastModifiedDate: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        Name: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Selector: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        SourceResult: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Type: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Value: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Version: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectLong\n    });\n};\nconst de_ParameterHistory = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        AllowedPattern: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        DataType: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Description: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        KeyId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Labels: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        LastModifiedDate: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        LastModifiedUser: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Name: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Policies: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        Tier: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Type: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Value: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Version: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectLong\n    });\n};\nconst de_ParameterHistoryList = (output, context)=>{\n    const retVal = (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_ParameterHistory(entry, context);\n    });\n    return retVal;\n};\nconst de_ParameterList = (output, context)=>{\n    const retVal = (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_Parameter(entry, context);\n    });\n    return retVal;\n};\nconst de_ParameterMetadata = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        AllowedPattern: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        DataType: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Description: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        KeyId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        LastModifiedDate: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        LastModifiedUser: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Name: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Policies: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        Tier: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Type: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Version: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectLong\n    });\n};\nconst de_ParameterMetadataList = (output, context)=>{\n    const retVal = (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_ParameterMetadata(entry, context);\n    });\n    return retVal;\n};\nconst de_Patch = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        AdvisoryIds: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        Arch: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        BugzillaIds: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        CVEIds: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        Classification: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        ContentUrl: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Description: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Epoch: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectInt32,\n        Id: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        KbNumber: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Language: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        MsrcNumber: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        MsrcSeverity: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Name: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Product: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        ProductFamily: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Release: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        ReleaseDate: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        Repository: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Severity: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Title: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Vendor: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Version: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_PatchComplianceData = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        CVEIds: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Classification: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        InstalledTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        KBId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Severity: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        State: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Title: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_PatchComplianceDataList = (output, context)=>{\n    const retVal = (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_PatchComplianceData(entry, context);\n    });\n    return retVal;\n};\nconst de_PatchList = (output, context)=>{\n    const retVal = (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_Patch(entry, context);\n    });\n    return retVal;\n};\nconst de_PatchStatus = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        ApprovalDate: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        ComplianceLevel: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        DeploymentStatus: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_ResetServiceSettingResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        ServiceSetting: (_)=>de_ServiceSetting(_, context)\n    });\n};\nconst de_ResourceComplianceSummaryItem = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        ComplianceType: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        CompliantSummary: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        ExecutionSummary: (_)=>de_ComplianceExecutionSummary(_, context),\n        NonCompliantSummary: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        OverallSeverity: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        ResourceId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        ResourceType: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Status: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_ResourceComplianceSummaryItemList = (output, context)=>{\n    const retVal = (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_ResourceComplianceSummaryItem(entry, context);\n    });\n    return retVal;\n};\nconst de_ResourceDataSyncItem = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        LastStatus: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        LastSuccessfulSyncTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        LastSyncStatusMessage: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        LastSyncTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        S3Destination: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        SyncCreatedTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        SyncLastModifiedTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        SyncName: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        SyncSource: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        SyncType: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_ResourceDataSyncItemList = (output, context)=>{\n    const retVal = (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_ResourceDataSyncItem(entry, context);\n    });\n    return retVal;\n};\nconst de_ReviewInformation = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        ReviewedTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        Reviewer: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Status: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_ReviewInformationList = (output, context)=>{\n    const retVal = (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_ReviewInformation(entry, context);\n    });\n    return retVal;\n};\nconst de_SendCommandResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        Command: (_)=>de_Command(_, context)\n    });\n};\nconst de_ServiceSetting = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        ARN: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        LastModifiedDate: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        LastModifiedUser: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        SettingId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        SettingValue: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Status: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_Session = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        Details: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        DocumentName: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        EndDate: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        MaxSessionDuration: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        OutputUrl: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        Owner: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Reason: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        SessionId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        StartDate: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        Status: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Target: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_SessionList = (output, context)=>{\n    const retVal = (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_Session(entry, context);\n    });\n    return retVal;\n};\nconst de_StepExecution = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        Action: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        ExecutionEndTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        ExecutionStartTime: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        FailureDetails: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        FailureMessage: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Inputs: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        IsCritical: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectBoolean,\n        IsEnd: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectBoolean,\n        MaxAttempts: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectInt32,\n        NextStep: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        OnFailure: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Outputs: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        OverriddenParameters: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        Response: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        ResponseCode: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        StepExecutionId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        StepName: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        StepStatus: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        TargetLocation: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        Targets: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        TimeoutSeconds: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectLong,\n        TriggeredAlarms: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        ValidNextSteps: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json\n    });\n};\nconst de_StepExecutionList = (output, context)=>{\n    const retVal = (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_StepExecution(entry, context);\n    });\n    return retVal;\n};\nconst de_UpdateAssociationResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        AssociationDescription: (_)=>de_AssociationDescription(_, context)\n    });\n};\nconst de_UpdateAssociationStatusResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        AssociationDescription: (_)=>de_AssociationDescription(_, context)\n    });\n};\nconst de_UpdateDocumentResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        DocumentDescription: (_)=>de_DocumentDescription(_, context)\n    });\n};\nconst de_UpdateMaintenanceWindowTaskResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        AlarmConfiguration: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        CutoffBehavior: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Description: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        LoggingInfo: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        MaxConcurrency: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        MaxErrors: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Name: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Priority: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectInt32,\n        ServiceRoleArn: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Targets: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        TaskArn: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        TaskInvocationParameters: (_)=>de_MaintenanceWindowTaskInvocationParameters(_, context),\n        TaskParameters: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        WindowId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        WindowTaskId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n};\nconst de_UpdatePatchBaselineResult = (output, context)=>{\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(output, {\n        ApprovalRules: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        ApprovedPatches: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        ApprovedPatchesComplianceLevel: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        ApprovedPatchesEnableNonSecurity: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectBoolean,\n        BaselineId: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        CreatedDate: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        Description: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        GlobalFilters: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        ModifiedDate: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseEpochTimestamp)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNumber)(_))),\n        Name: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        OperatingSystem: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        RejectedPatches: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json,\n        RejectedPatchesAction: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        Sources: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json\n    });\n};\nconst deserializeMetadata = (output)=>({\n        httpStatusCode: output.statusCode,\n        requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n        extendedRequestId: output.headers[\"x-amz-id-2\"],\n        cfId: output.headers[\"x-amz-cf-id\"]\n    });\nconst collectBodyString = (streamBody, context)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.collectBody)(streamBody, context).then((body)=>context.utf8Encoder(body));\nconst throwDefaultError = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.withBaseException)(_models_SSMServiceException__WEBPACK_IMPORTED_MODULE_6__.SSMServiceException);\nconst buildHttpRpcRequest = async (context, headers, path, resolvedHostname, body)=>{\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const contents = {\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        path: basePath.endsWith(\"/\") ? basePath.slice(0, -1) + path : basePath + path,\n        headers\n    };\n    if (resolvedHostname !== undefined) {\n        contents.hostname = resolvedHostname;\n    }\n    if (body !== undefined) {\n        contents.body = body;\n    }\n    return new _smithy_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest(contents);\n};\nfunction sharedHeaders(operation) {\n    return {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": `AmazonSSM.${operation}`\n    };\n}\nconst parseBody = (streamBody, context)=>collectBodyString(streamBody, context).then((encoded)=>{\n        if (encoded.length) {\n            return JSON.parse(encoded);\n        }\n        return {};\n    });\nconst parseErrorBody = async (errorBody, context)=>{\n    const value = await parseBody(errorBody, context);\n    value.message = value.message ?? value.Message;\n    return value;\n};\nconst loadRestJsonErrorCode = (output, data)=>{\n    const findKey = (object, key)=>Object.keys(object).find((k)=>k.toLowerCase() === key.toLowerCase());\n    const sanitizeErrorCode = (rawValue)=>{\n        let cleanValue = rawValue;\n        if (typeof cleanValue === \"number\") {\n            cleanValue = cleanValue.toString();\n        }\n        if (cleanValue.indexOf(\",\") >= 0) {\n            cleanValue = cleanValue.split(\",\")[0];\n        }\n        if (cleanValue.indexOf(\":\") >= 0) {\n            cleanValue = cleanValue.split(\":\")[0];\n        }\n        if (cleanValue.indexOf(\"#\") >= 0) {\n            cleanValue = cleanValue.split(\"#\")[1];\n        }\n        return cleanValue;\n    };\n    const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n    if (headerKey !== undefined) {\n        return sanitizeErrorCode(output.headers[headerKey]);\n    }\n    if (data.code !== undefined) {\n        return sanitizeErrorCode(data.code);\n    }\n    if (data[\"__type\"] !== undefined) {\n        return sanitizeErrorCode(data[\"__type\"]);\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/protocols/Aws_json1_1.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/runtimeConfig.js":
/*!**********************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/runtimeConfig.js ***!
  \**********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getRuntimeConfig: () => (/* binding */ getRuntimeConfig)\n/* harmony export */ });\n/* harmony import */ var _package_json__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../package.json */ \"(rsc)/../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/package.json\");\n/* harmony import */ var _aws_sdk_client_sts__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @aws-sdk/client-sts */ \"(rsc)/../../node_modules/.pnpm/@aws-sdk+client-sts@3.451.0/node_modules/@aws-sdk/client-sts/dist-es/defaultRoleAssumers.js\");\n/* harmony import */ var _aws_sdk_core__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @aws-sdk/core */ \"(rsc)/../../node_modules/.pnpm/@aws-sdk+core@3.451.0/node_modules/@aws-sdk/core/dist-es/client/emitWarningIfUnsupportedVersion.js\");\n/* harmony import */ var _aws_sdk_credential_provider_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/credential-provider-node */ \"(rsc)/../../node_modules/.pnpm/@aws-sdk+credential-provider-node@3.451.0/node_modules/@aws-sdk/credential-provider-node/dist-es/index.js\");\n/* harmony import */ var _aws_sdk_util_user_agent_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/util-user-agent-node */ \"(rsc)/../../node_modules/.pnpm/@aws-sdk+util-user-agent-node@3.451.0_aws-crt@1.19.0/node_modules/@aws-sdk/util-user-agent-node/dist-es/index.js\");\n/* harmony import */ var _smithy_config_resolver__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @smithy/config-resolver */ \"(rsc)/../../node_modules/.pnpm/@smithy+config-resolver@2.0.18/node_modules/@smithy/config-resolver/dist-es/index.js\");\n/* harmony import */ var _smithy_hash_node__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @smithy/hash-node */ \"(rsc)/../../node_modules/.pnpm/@smithy+hash-node@2.0.15/node_modules/@smithy/hash-node/dist-es/index.js\");\n/* harmony import */ var _smithy_middleware_retry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @smithy/middleware-retry */ \"(rsc)/../../node_modules/.pnpm/@smithy+middleware-retry@2.0.20/node_modules/@smithy/middleware-retry/dist-es/index.js\");\n/* harmony import */ var _smithy_node_config_provider__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @smithy/node-config-provider */ \"(rsc)/../../node_modules/.pnpm/@smithy+node-config-provider@2.1.5/node_modules/@smithy/node-config-provider/dist-es/index.js\");\n/* harmony import */ var _smithy_node_http_handler__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @smithy/node-http-handler */ \"(rsc)/../../node_modules/.pnpm/@smithy+node-http-handler@2.1.9/node_modules/@smithy/node-http-handler/dist-es/index.js\");\n/* harmony import */ var _smithy_util_body_length_node__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @smithy/util-body-length-node */ \"(rsc)/../../node_modules/.pnpm/@smithy+util-body-length-node@2.1.0/node_modules/@smithy/util-body-length-node/dist-es/index.js\");\n/* harmony import */ var _smithy_util_retry__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @smithy/util-retry */ \"(rsc)/../../node_modules/.pnpm/@smithy+util-retry@2.0.6/node_modules/@smithy/util-retry/dist-es/index.js\");\n/* harmony import */ var _runtimeConfig_shared__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./runtimeConfig.shared */ \"(rsc)/../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/runtimeConfig.shared.js\");\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @smithy/smithy-client */ \"(rsc)/../../node_modules/.pnpm/@smithy+smithy-client@2.1.15/node_modules/@smithy/smithy-client/dist-es/index.js\");\n/* harmony import */ var _smithy_util_defaults_mode_node__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @smithy/util-defaults-mode-node */ \"(rsc)/../../node_modules/.pnpm/@smithy+util-defaults-mode-node@2.0.25/node_modules/@smithy/util-defaults-mode-node/dist-es/index.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst getRuntimeConfig = (config)=>{\n    (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_9__.emitWarningIfUnsupportedVersion)(process.version);\n    const defaultsMode = (0,_smithy_util_defaults_mode_node__WEBPACK_IMPORTED_MODULE_10__.resolveDefaultsModeConfig)(config);\n    const defaultConfigProvider = ()=>defaultsMode().then(_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_9__.loadConfigsForDefaultMode);\n    const clientSharedValues = (0,_runtimeConfig_shared__WEBPACK_IMPORTED_MODULE_11__.getRuntimeConfig)(config);\n    (0,_aws_sdk_core__WEBPACK_IMPORTED_MODULE_12__.emitWarningIfUnsupportedVersion)(process.version);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? _smithy_util_body_length_node__WEBPACK_IMPORTED_MODULE_7__.calculateBodyLength,\n        credentialDefaultProvider: config?.credentialDefaultProvider ?? (0,_aws_sdk_client_sts__WEBPACK_IMPORTED_MODULE_13__.decorateDefaultCredentialProvider)(_aws_sdk_credential_provider_node__WEBPACK_IMPORTED_MODULE_0__.defaultProvider),\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ?? (0,_aws_sdk_util_user_agent_node__WEBPACK_IMPORTED_MODULE_1__.defaultUserAgent)({\n            serviceId: clientSharedValues.serviceId,\n            clientVersion: _package_json__WEBPACK_IMPORTED_MODULE_14__.version\n        }),\n        maxAttempts: config?.maxAttempts ?? (0,_smithy_node_config_provider__WEBPACK_IMPORTED_MODULE_5__.loadConfig)(_smithy_middleware_retry__WEBPACK_IMPORTED_MODULE_4__.NODE_MAX_ATTEMPT_CONFIG_OPTIONS),\n        region: config?.region ?? (0,_smithy_node_config_provider__WEBPACK_IMPORTED_MODULE_5__.loadConfig)(_smithy_config_resolver__WEBPACK_IMPORTED_MODULE_2__.NODE_REGION_CONFIG_OPTIONS, _smithy_config_resolver__WEBPACK_IMPORTED_MODULE_2__.NODE_REGION_CONFIG_FILE_OPTIONS),\n        requestHandler: config?.requestHandler ?? new _smithy_node_http_handler__WEBPACK_IMPORTED_MODULE_6__.NodeHttpHandler(defaultConfigProvider),\n        retryMode: config?.retryMode ?? (0,_smithy_node_config_provider__WEBPACK_IMPORTED_MODULE_5__.loadConfig)({\n            ..._smithy_middleware_retry__WEBPACK_IMPORTED_MODULE_4__.NODE_RETRY_MODE_CONFIG_OPTIONS,\n            default: async ()=>(await defaultConfigProvider()).retryMode || _smithy_util_retry__WEBPACK_IMPORTED_MODULE_8__.DEFAULT_RETRY_MODE\n        }),\n        sha256: config?.sha256 ?? _smithy_hash_node__WEBPACK_IMPORTED_MODULE_3__.Hash.bind(null, \"sha256\"),\n        streamCollector: config?.streamCollector ?? _smithy_node_http_handler__WEBPACK_IMPORTED_MODULE_6__.streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? (0,_smithy_node_config_provider__WEBPACK_IMPORTED_MODULE_5__.loadConfig)(_smithy_config_resolver__WEBPACK_IMPORTED_MODULE_2__.NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS),\n        useFipsEndpoint: config?.useFipsEndpoint ?? (0,_smithy_node_config_provider__WEBPACK_IMPORTED_MODULE_5__.loadConfig)(_smithy_config_resolver__WEBPACK_IMPORTED_MODULE_2__.NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS)\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0Bhd3Mtc2RrK2NsaWVudC1zc21AMy40NTEuMC9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY2xpZW50LXNzbS9kaXN0LWVzL3J1bnRpbWVDb25maWcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUEwQztBQUM4QjtBQUNXO0FBQ2M7QUFDaEM7QUFDeUg7QUFDako7QUFDa0U7QUFDL0I7QUFDbUI7QUFDM0I7QUFDWjtBQUM0QjtBQUNsQjtBQUNVO0FBQ0o7QUFDakUsTUFBTXFCLG1CQUFtQixDQUFDSTtJQUM3QnZCLHNGQUErQkEsQ0FBQ3dCLFFBQVFDLE9BQU87SUFDL0MsTUFBTUMsZUFBZUosMkZBQXlCQSxDQUFDQztJQUMvQyxNQUFNSSx3QkFBd0IsSUFBTUQsZUFBZUUsSUFBSSxDQUFDUCw0RUFBeUJBO0lBQ2pGLE1BQU1RLHFCQUFxQlQsd0VBQXNCQSxDQUFDRztJQUNsRHRCLCtFQUFlQSxDQUFDdUIsUUFBUUMsT0FBTztJQUMvQixPQUFPO1FBQ0gsR0FBR0ksa0JBQWtCO1FBQ3JCLEdBQUdOLE1BQU07UUFDVE8sU0FBUztRQUNUSjtRQUNBSyxtQkFBbUJSLFFBQVFRLHFCQUFxQmQsOEVBQW1CQTtRQUNuRWQsMkJBQTJCb0IsUUFBUXBCLDZCQUE2QkosdUZBQWlDQSxDQUFDSSw4RUFBeUJBO1FBQzNINkIsMEJBQTBCVCxRQUFRUyw0QkFDOUI1QiwrRUFBZ0JBLENBQUM7WUFBRTZCLFdBQVdKLG1CQUFtQkksU0FBUztZQUFFQyxlQUFlcEMsbURBQW1CO1FBQUM7UUFDbkdxQyxhQUFhWixRQUFRWSxlQUFldEIsd0VBQWNBLENBQUNILHFGQUErQkE7UUFDbEYwQixRQUFRYixRQUFRYSxVQUFVdkIsd0VBQWNBLENBQUNQLCtFQUEwQkEsRUFBRUQsb0ZBQStCQTtRQUNwR2dDLGdCQUFnQmQsUUFBUWMsa0JBQWtCLElBQUl0QixzRUFBY0EsQ0FBQ1k7UUFDN0RXLFdBQVdmLFFBQVFlLGFBQ2Z6Qix3RUFBY0EsQ0FBQztZQUNYLEdBQUdGLG9GQUE4QjtZQUNqQzRCLFNBQVMsVUFBWSxDQUFDLE1BQU1aLHVCQUFzQixFQUFHVyxTQUFTLElBQUlwQixrRUFBa0JBO1FBQ3hGO1FBQ0pzQixRQUFRakIsUUFBUWlCLFVBQVUvQixtREFBSUEsQ0FBQ2dDLElBQUksQ0FBQyxNQUFNO1FBQzFDekIsaUJBQWlCTyxRQUFRUCxtQkFBbUJBLHNFQUFlQTtRQUMzRDBCLHNCQUFzQm5CLFFBQVFtQix3QkFBd0I3Qix3RUFBY0EsQ0FBQ04sK0ZBQTBDQTtRQUMvR29DLGlCQUFpQnBCLFFBQVFvQixtQkFBbUI5Qix3RUFBY0EsQ0FBQ0wsMEZBQXFDQTtJQUNwRztBQUNKLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWIvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0Bhd3Mtc2RrK2NsaWVudC1zc21AMy40NTEuMC9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY2xpZW50LXNzbS9kaXN0LWVzL3J1bnRpbWVDb25maWcuanM/OWZkOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcGFja2FnZUluZm8gZnJvbSBcIi4uL3BhY2thZ2UuanNvblwiO1xuaW1wb3J0IHsgZGVjb3JhdGVEZWZhdWx0Q3JlZGVudGlhbFByb3ZpZGVyIH0gZnJvbSBcIkBhd3Mtc2RrL2NsaWVudC1zdHNcIjtcbmltcG9ydCB7IGVtaXRXYXJuaW5nSWZVbnN1cHBvcnRlZFZlcnNpb24gYXMgYXdzQ2hlY2tWZXJzaW9uIH0gZnJvbSBcIkBhd3Mtc2RrL2NvcmVcIjtcbmltcG9ydCB7IGRlZmF1bHRQcm92aWRlciBhcyBjcmVkZW50aWFsRGVmYXVsdFByb3ZpZGVyIH0gZnJvbSBcIkBhd3Mtc2RrL2NyZWRlbnRpYWwtcHJvdmlkZXItbm9kZVwiO1xuaW1wb3J0IHsgZGVmYXVsdFVzZXJBZ2VudCB9IGZyb20gXCJAYXdzLXNkay91dGlsLXVzZXItYWdlbnQtbm9kZVwiO1xuaW1wb3J0IHsgTk9ERV9SRUdJT05fQ09ORklHX0ZJTEVfT1BUSU9OUywgTk9ERV9SRUdJT05fQ09ORklHX09QVElPTlMsIE5PREVfVVNFX0RVQUxTVEFDS19FTkRQT0lOVF9DT05GSUdfT1BUSU9OUywgTk9ERV9VU0VfRklQU19FTkRQT0lOVF9DT05GSUdfT1BUSU9OUywgfSBmcm9tIFwiQHNtaXRoeS9jb25maWctcmVzb2x2ZXJcIjtcbmltcG9ydCB7IEhhc2ggfSBmcm9tIFwiQHNtaXRoeS9oYXNoLW5vZGVcIjtcbmltcG9ydCB7IE5PREVfTUFYX0FUVEVNUFRfQ09ORklHX09QVElPTlMsIE5PREVfUkVUUllfTU9ERV9DT05GSUdfT1BUSU9OUyB9IGZyb20gXCJAc21pdGh5L21pZGRsZXdhcmUtcmV0cnlcIjtcbmltcG9ydCB7IGxvYWRDb25maWcgYXMgbG9hZE5vZGVDb25maWcgfSBmcm9tIFwiQHNtaXRoeS9ub2RlLWNvbmZpZy1wcm92aWRlclwiO1xuaW1wb3J0IHsgTm9kZUh0dHBIYW5kbGVyIGFzIFJlcXVlc3RIYW5kbGVyLCBzdHJlYW1Db2xsZWN0b3IgfSBmcm9tIFwiQHNtaXRoeS9ub2RlLWh0dHAtaGFuZGxlclwiO1xuaW1wb3J0IHsgY2FsY3VsYXRlQm9keUxlbmd0aCB9IGZyb20gXCJAc21pdGh5L3V0aWwtYm9keS1sZW5ndGgtbm9kZVwiO1xuaW1wb3J0IHsgREVGQVVMVF9SRVRSWV9NT0RFIH0gZnJvbSBcIkBzbWl0aHkvdXRpbC1yZXRyeVwiO1xuaW1wb3J0IHsgZ2V0UnVudGltZUNvbmZpZyBhcyBnZXRTaGFyZWRSdW50aW1lQ29uZmlnIH0gZnJvbSBcIi4vcnVudGltZUNvbmZpZy5zaGFyZWRcIjtcbmltcG9ydCB7IGxvYWRDb25maWdzRm9yRGVmYXVsdE1vZGUgfSBmcm9tIFwiQHNtaXRoeS9zbWl0aHktY2xpZW50XCI7XG5pbXBvcnQgeyByZXNvbHZlRGVmYXVsdHNNb2RlQ29uZmlnIH0gZnJvbSBcIkBzbWl0aHkvdXRpbC1kZWZhdWx0cy1tb2RlLW5vZGVcIjtcbmltcG9ydCB7IGVtaXRXYXJuaW5nSWZVbnN1cHBvcnRlZFZlcnNpb24gfSBmcm9tIFwiQHNtaXRoeS9zbWl0aHktY2xpZW50XCI7XG5leHBvcnQgY29uc3QgZ2V0UnVudGltZUNvbmZpZyA9IChjb25maWcpID0+IHtcbiAgICBlbWl0V2FybmluZ0lmVW5zdXBwb3J0ZWRWZXJzaW9uKHByb2Nlc3MudmVyc2lvbik7XG4gICAgY29uc3QgZGVmYXVsdHNNb2RlID0gcmVzb2x2ZURlZmF1bHRzTW9kZUNvbmZpZyhjb25maWcpO1xuICAgIGNvbnN0IGRlZmF1bHRDb25maWdQcm92aWRlciA9ICgpID0+IGRlZmF1bHRzTW9kZSgpLnRoZW4obG9hZENvbmZpZ3NGb3JEZWZhdWx0TW9kZSk7XG4gICAgY29uc3QgY2xpZW50U2hhcmVkVmFsdWVzID0gZ2V0U2hhcmVkUnVudGltZUNvbmZpZyhjb25maWcpO1xuICAgIGF3c0NoZWNrVmVyc2lvbihwcm9jZXNzLnZlcnNpb24pO1xuICAgIHJldHVybiB7XG4gICAgICAgIC4uLmNsaWVudFNoYXJlZFZhbHVlcyxcbiAgICAgICAgLi4uY29uZmlnLFxuICAgICAgICBydW50aW1lOiBcIm5vZGVcIixcbiAgICAgICAgZGVmYXVsdHNNb2RlLFxuICAgICAgICBib2R5TGVuZ3RoQ2hlY2tlcjogY29uZmlnPy5ib2R5TGVuZ3RoQ2hlY2tlciA/PyBjYWxjdWxhdGVCb2R5TGVuZ3RoLFxuICAgICAgICBjcmVkZW50aWFsRGVmYXVsdFByb3ZpZGVyOiBjb25maWc/LmNyZWRlbnRpYWxEZWZhdWx0UHJvdmlkZXIgPz8gZGVjb3JhdGVEZWZhdWx0Q3JlZGVudGlhbFByb3ZpZGVyKGNyZWRlbnRpYWxEZWZhdWx0UHJvdmlkZXIpLFxuICAgICAgICBkZWZhdWx0VXNlckFnZW50UHJvdmlkZXI6IGNvbmZpZz8uZGVmYXVsdFVzZXJBZ2VudFByb3ZpZGVyID8/XG4gICAgICAgICAgICBkZWZhdWx0VXNlckFnZW50KHsgc2VydmljZUlkOiBjbGllbnRTaGFyZWRWYWx1ZXMuc2VydmljZUlkLCBjbGllbnRWZXJzaW9uOiBwYWNrYWdlSW5mby52ZXJzaW9uIH0pLFxuICAgICAgICBtYXhBdHRlbXB0czogY29uZmlnPy5tYXhBdHRlbXB0cyA/PyBsb2FkTm9kZUNvbmZpZyhOT0RFX01BWF9BVFRFTVBUX0NPTkZJR19PUFRJT05TKSxcbiAgICAgICAgcmVnaW9uOiBjb25maWc/LnJlZ2lvbiA/PyBsb2FkTm9kZUNvbmZpZyhOT0RFX1JFR0lPTl9DT05GSUdfT1BUSU9OUywgTk9ERV9SRUdJT05fQ09ORklHX0ZJTEVfT1BUSU9OUyksXG4gICAgICAgIHJlcXVlc3RIYW5kbGVyOiBjb25maWc/LnJlcXVlc3RIYW5kbGVyID8/IG5ldyBSZXF1ZXN0SGFuZGxlcihkZWZhdWx0Q29uZmlnUHJvdmlkZXIpLFxuICAgICAgICByZXRyeU1vZGU6IGNvbmZpZz8ucmV0cnlNb2RlID8/XG4gICAgICAgICAgICBsb2FkTm9kZUNvbmZpZyh7XG4gICAgICAgICAgICAgICAgLi4uTk9ERV9SRVRSWV9NT0RFX0NPTkZJR19PUFRJT05TLFxuICAgICAgICAgICAgICAgIGRlZmF1bHQ6IGFzeW5jICgpID0+IChhd2FpdCBkZWZhdWx0Q29uZmlnUHJvdmlkZXIoKSkucmV0cnlNb2RlIHx8IERFRkFVTFRfUkVUUllfTU9ERSxcbiAgICAgICAgICAgIH0pLFxuICAgICAgICBzaGEyNTY6IGNvbmZpZz8uc2hhMjU2ID8/IEhhc2guYmluZChudWxsLCBcInNoYTI1NlwiKSxcbiAgICAgICAgc3RyZWFtQ29sbGVjdG9yOiBjb25maWc/LnN0cmVhbUNvbGxlY3RvciA/PyBzdHJlYW1Db2xsZWN0b3IsXG4gICAgICAgIHVzZUR1YWxzdGFja0VuZHBvaW50OiBjb25maWc/LnVzZUR1YWxzdGFja0VuZHBvaW50ID8/IGxvYWROb2RlQ29uZmlnKE5PREVfVVNFX0RVQUxTVEFDS19FTkRQT0lOVF9DT05GSUdfT1BUSU9OUyksXG4gICAgICAgIHVzZUZpcHNFbmRwb2ludDogY29uZmlnPy51c2VGaXBzRW5kcG9pbnQgPz8gbG9hZE5vZGVDb25maWcoTk9ERV9VU0VfRklQU19FTkRQT0lOVF9DT05GSUdfT1BUSU9OUyksXG4gICAgfTtcbn07XG4iXSwibmFtZXMiOlsicGFja2FnZUluZm8iLCJkZWNvcmF0ZURlZmF1bHRDcmVkZW50aWFsUHJvdmlkZXIiLCJlbWl0V2FybmluZ0lmVW5zdXBwb3J0ZWRWZXJzaW9uIiwiYXdzQ2hlY2tWZXJzaW9uIiwiZGVmYXVsdFByb3ZpZGVyIiwiY3JlZGVudGlhbERlZmF1bHRQcm92aWRlciIsImRlZmF1bHRVc2VyQWdlbnQiLCJOT0RFX1JFR0lPTl9DT05GSUdfRklMRV9PUFRJT05TIiwiTk9ERV9SRUdJT05fQ09ORklHX09QVElPTlMiLCJOT0RFX1VTRV9EVUFMU1RBQ0tfRU5EUE9JTlRfQ09ORklHX09QVElPTlMiLCJOT0RFX1VTRV9GSVBTX0VORFBPSU5UX0NPTkZJR19PUFRJT05TIiwiSGFzaCIsIk5PREVfTUFYX0FUVEVNUFRfQ09ORklHX09QVElPTlMiLCJOT0RFX1JFVFJZX01PREVfQ09ORklHX09QVElPTlMiLCJsb2FkQ29uZmlnIiwibG9hZE5vZGVDb25maWciLCJOb2RlSHR0cEhhbmRsZXIiLCJSZXF1ZXN0SGFuZGxlciIsInN0cmVhbUNvbGxlY3RvciIsImNhbGN1bGF0ZUJvZHlMZW5ndGgiLCJERUZBVUxUX1JFVFJZX01PREUiLCJnZXRSdW50aW1lQ29uZmlnIiwiZ2V0U2hhcmVkUnVudGltZUNvbmZpZyIsImxvYWRDb25maWdzRm9yRGVmYXVsdE1vZGUiLCJyZXNvbHZlRGVmYXVsdHNNb2RlQ29uZmlnIiwiY29uZmlnIiwicHJvY2VzcyIsInZlcnNpb24iLCJkZWZhdWx0c01vZGUiLCJkZWZhdWx0Q29uZmlnUHJvdmlkZXIiLCJ0aGVuIiwiY2xpZW50U2hhcmVkVmFsdWVzIiwicnVudGltZSIsImJvZHlMZW5ndGhDaGVja2VyIiwiZGVmYXVsdFVzZXJBZ2VudFByb3ZpZGVyIiwic2VydmljZUlkIiwiY2xpZW50VmVyc2lvbiIsIm1heEF0dGVtcHRzIiwicmVnaW9uIiwicmVxdWVzdEhhbmRsZXIiLCJyZXRyeU1vZGUiLCJkZWZhdWx0Iiwic2hhMjU2IiwiYmluZCIsInVzZUR1YWxzdGFja0VuZHBvaW50IiwidXNlRmlwc0VuZHBvaW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/runtimeConfig.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/runtimeConfig.shared.js":
/*!*****************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/runtimeConfig.shared.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getRuntimeConfig: () => (/* binding */ getRuntimeConfig)\n/* harmony export */ });\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @smithy/smithy-client */ \"(rsc)/../../node_modules/.pnpm/@smithy+smithy-client@2.1.15/node_modules/@smithy/smithy-client/dist-es/index.js\");\n/* harmony import */ var _smithy_url_parser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @smithy/url-parser */ \"(rsc)/../../node_modules/.pnpm/@smithy+url-parser@2.0.13/node_modules/@smithy/url-parser/dist-es/index.js\");\n/* harmony import */ var _smithy_util_base64__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @smithy/util-base64 */ \"(rsc)/../../node_modules/.pnpm/@smithy+util-base64@2.0.1/node_modules/@smithy/util-base64/dist-es/index.js\");\n/* harmony import */ var _smithy_util_utf8__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @smithy/util-utf8 */ \"(rsc)/../../node_modules/.pnpm/@smithy+util-utf8@2.0.2/node_modules/@smithy/util-utf8/dist-es/index.js\");\n/* harmony import */ var _endpoint_endpointResolver__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./endpoint/endpointResolver */ \"(rsc)/../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/endpoint/endpointResolver.js\");\n\n\n\n\n\nconst getRuntimeConfig = (config)=>{\n    return {\n        apiVersion: \"2014-11-06\",\n        base64Decoder: config?.base64Decoder ?? _smithy_util_base64__WEBPACK_IMPORTED_MODULE_2__.fromBase64,\n        base64Encoder: config?.base64Encoder ?? _smithy_util_base64__WEBPACK_IMPORTED_MODULE_2__.toBase64,\n        disableHostPrefix: config?.disableHostPrefix ?? false,\n        endpointProvider: config?.endpointProvider ?? _endpoint_endpointResolver__WEBPACK_IMPORTED_MODULE_4__.defaultEndpointResolver,\n        extensions: config?.extensions ?? [],\n        logger: config?.logger ?? new _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.NoOpLogger(),\n        serviceId: config?.serviceId ?? \"SSM\",\n        urlParser: config?.urlParser ?? _smithy_url_parser__WEBPACK_IMPORTED_MODULE_1__.parseUrl,\n        utf8Decoder: config?.utf8Decoder ?? _smithy_util_utf8__WEBPACK_IMPORTED_MODULE_3__.fromUtf8,\n        utf8Encoder: config?.utf8Encoder ?? _smithy_util_utf8__WEBPACK_IMPORTED_MODULE_3__.toUtf8\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0Bhd3Mtc2RrK2NsaWVudC1zc21AMy40NTEuMC9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY2xpZW50LXNzbS9kaXN0LWVzL3J1bnRpbWVDb25maWcuc2hhcmVkLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFtRDtBQUNMO0FBQ2E7QUFDTjtBQUNpQjtBQUMvRCxNQUFNTyxtQkFBbUIsQ0FBQ0M7SUFDN0IsT0FBTztRQUNIQyxZQUFZO1FBQ1pDLGVBQWVGLFFBQVFFLGlCQUFpQlIsMkRBQVVBO1FBQ2xEUyxlQUFlSCxRQUFRRyxpQkFBaUJSLHlEQUFRQTtRQUNoRFMsbUJBQW1CSixRQUFRSSxxQkFBcUI7UUFDaERDLGtCQUFrQkwsUUFBUUssb0JBQW9CUCwrRUFBdUJBO1FBQ3JFUSxZQUFZTixRQUFRTSxjQUFjLEVBQUU7UUFDcENDLFFBQVFQLFFBQVFPLFVBQVUsSUFBSWYsNkRBQVVBO1FBQ3hDZ0IsV0FBV1IsUUFBUVEsYUFBYTtRQUNoQ0MsV0FBV1QsUUFBUVMsYUFBYWhCLHdEQUFRQTtRQUN4Q2lCLGFBQWFWLFFBQVFVLGVBQWVkLHVEQUFRQTtRQUM1Q2UsYUFBYVgsUUFBUVcsZUFBZWQscURBQU1BO0lBQzlDO0FBQ0osRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQGF3cy1zZGsrY2xpZW50LXNzbUAzLjQ1MS4wL25vZGVfbW9kdWxlcy9AYXdzLXNkay9jbGllbnQtc3NtL2Rpc3QtZXMvcnVudGltZUNvbmZpZy5zaGFyZWQuanM/NjVlZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOb09wTG9nZ2VyIH0gZnJvbSBcIkBzbWl0aHkvc21pdGh5LWNsaWVudFwiO1xuaW1wb3J0IHsgcGFyc2VVcmwgfSBmcm9tIFwiQHNtaXRoeS91cmwtcGFyc2VyXCI7XG5pbXBvcnQgeyBmcm9tQmFzZTY0LCB0b0Jhc2U2NCB9IGZyb20gXCJAc21pdGh5L3V0aWwtYmFzZTY0XCI7XG5pbXBvcnQgeyBmcm9tVXRmOCwgdG9VdGY4IH0gZnJvbSBcIkBzbWl0aHkvdXRpbC11dGY4XCI7XG5pbXBvcnQgeyBkZWZhdWx0RW5kcG9pbnRSZXNvbHZlciB9IGZyb20gXCIuL2VuZHBvaW50L2VuZHBvaW50UmVzb2x2ZXJcIjtcbmV4cG9ydCBjb25zdCBnZXRSdW50aW1lQ29uZmlnID0gKGNvbmZpZykgPT4ge1xuICAgIHJldHVybiB7XG4gICAgICAgIGFwaVZlcnNpb246IFwiMjAxNC0xMS0wNlwiLFxuICAgICAgICBiYXNlNjREZWNvZGVyOiBjb25maWc/LmJhc2U2NERlY29kZXIgPz8gZnJvbUJhc2U2NCxcbiAgICAgICAgYmFzZTY0RW5jb2RlcjogY29uZmlnPy5iYXNlNjRFbmNvZGVyID8/IHRvQmFzZTY0LFxuICAgICAgICBkaXNhYmxlSG9zdFByZWZpeDogY29uZmlnPy5kaXNhYmxlSG9zdFByZWZpeCA/PyBmYWxzZSxcbiAgICAgICAgZW5kcG9pbnRQcm92aWRlcjogY29uZmlnPy5lbmRwb2ludFByb3ZpZGVyID8/IGRlZmF1bHRFbmRwb2ludFJlc29sdmVyLFxuICAgICAgICBleHRlbnNpb25zOiBjb25maWc/LmV4dGVuc2lvbnMgPz8gW10sXG4gICAgICAgIGxvZ2dlcjogY29uZmlnPy5sb2dnZXIgPz8gbmV3IE5vT3BMb2dnZXIoKSxcbiAgICAgICAgc2VydmljZUlkOiBjb25maWc/LnNlcnZpY2VJZCA/PyBcIlNTTVwiLFxuICAgICAgICB1cmxQYXJzZXI6IGNvbmZpZz8udXJsUGFyc2VyID8/IHBhcnNlVXJsLFxuICAgICAgICB1dGY4RGVjb2RlcjogY29uZmlnPy51dGY4RGVjb2RlciA/PyBmcm9tVXRmOCxcbiAgICAgICAgdXRmOEVuY29kZXI6IGNvbmZpZz8udXRmOEVuY29kZXIgPz8gdG9VdGY4LFxuICAgIH07XG59O1xuIl0sIm5hbWVzIjpbIk5vT3BMb2dnZXIiLCJwYXJzZVVybCIsImZyb21CYXNlNjQiLCJ0b0Jhc2U2NCIsImZyb21VdGY4IiwidG9VdGY4IiwiZGVmYXVsdEVuZHBvaW50UmVzb2x2ZXIiLCJnZXRSdW50aW1lQ29uZmlnIiwiY29uZmlnIiwiYXBpVmVyc2lvbiIsImJhc2U2NERlY29kZXIiLCJiYXNlNjRFbmNvZGVyIiwiZGlzYWJsZUhvc3RQcmVmaXgiLCJlbmRwb2ludFByb3ZpZGVyIiwiZXh0ZW5zaW9ucyIsImxvZ2dlciIsInNlcnZpY2VJZCIsInVybFBhcnNlciIsInV0ZjhEZWNvZGVyIiwidXRmOEVuY29kZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/runtimeConfig.shared.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/runtimeExtensions.js":
/*!**************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/runtimeExtensions.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   resolveRuntimeExtensions: () => (/* binding */ resolveRuntimeExtensions)\n/* harmony export */ });\n/* harmony import */ var _aws_sdk_region_config_resolver__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/region-config-resolver */ \"(rsc)/../../node_modules/.pnpm/@aws-sdk+region-config-resolver@3.451.0/node_modules/@aws-sdk/region-config-resolver/dist-es/index.js\");\n/* harmony import */ var _smithy_protocol_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @smithy/protocol-http */ \"(rsc)/../../node_modules/.pnpm/@smithy+protocol-http@3.0.9/node_modules/@smithy/protocol-http/dist-es/index.js\");\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @smithy/smithy-client */ \"(rsc)/../../node_modules/.pnpm/@smithy+smithy-client@2.1.15/node_modules/@smithy/smithy-client/dist-es/index.js\");\n\n\n\nconst asPartial = (t)=>t;\nconst resolveRuntimeExtensions = (runtimeConfig, extensions)=>{\n    const extensionConfiguration = {\n        ...asPartial((0,_aws_sdk_region_config_resolver__WEBPACK_IMPORTED_MODULE_0__.getAwsRegionExtensionConfiguration)(runtimeConfig)),\n        ...asPartial((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_2__.getDefaultExtensionConfiguration)(runtimeConfig)),\n        ...asPartial((0,_smithy_protocol_http__WEBPACK_IMPORTED_MODULE_1__.getHttpHandlerExtensionConfiguration)(runtimeConfig))\n    };\n    extensions.forEach((extension)=>extension.configure(extensionConfiguration));\n    return {\n        ...runtimeConfig,\n        ...(0,_aws_sdk_region_config_resolver__WEBPACK_IMPORTED_MODULE_0__.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),\n        ...(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_2__.resolveDefaultRuntimeConfig)(extensionConfiguration),\n        ...(0,_smithy_protocol_http__WEBPACK_IMPORTED_MODULE_1__.resolveHttpHandlerRuntimeConfig)(extensionConfiguration)\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0Bhd3Mtc2RrK2NsaWVudC1zc21AMy40NTEuMC9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY2xpZW50LXNzbS9kaXN0LWVzL3J1bnRpbWVFeHRlbnNpb25zLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBOEg7QUFDaEI7QUFDUjtBQUN0RyxNQUFNTSxZQUFZLENBQUNDLElBQU1BO0FBQ2xCLE1BQU1DLDJCQUEyQixDQUFDQyxlQUFlQztJQUNwRCxNQUFNQyx5QkFBeUI7UUFDM0IsR0FBR0wsVUFBVU4sbUdBQWtDQSxDQUFDUyxlQUFlO1FBQy9ELEdBQUdILFVBQVVGLHVGQUFnQ0EsQ0FBQ0ssZUFBZTtRQUM3RCxHQUFHSCxVQUFVSiwyRkFBb0NBLENBQUNPLGVBQWU7SUFDckU7SUFDQUMsV0FBV0UsT0FBTyxDQUFDLENBQUNDLFlBQWNBLFVBQVVDLFNBQVMsQ0FBQ0g7SUFDdEQsT0FBTztRQUNILEdBQUdGLGFBQWE7UUFDaEIsR0FBR1IsdUdBQXNDQSxDQUFDVSx1QkFBdUI7UUFDakUsR0FBR04sa0ZBQTJCQSxDQUFDTSx1QkFBdUI7UUFDdEQsR0FBR1Isc0ZBQStCQSxDQUFDUSx1QkFBdUI7SUFDOUQ7QUFDSixFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9AYXdzLXNkaytjbGllbnQtc3NtQDMuNDUxLjAvbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL2NsaWVudC1zc20vZGlzdC1lcy9ydW50aW1lRXh0ZW5zaW9ucy5qcz8yODc4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldEF3c1JlZ2lvbkV4dGVuc2lvbkNvbmZpZ3VyYXRpb24sIHJlc29sdmVBd3NSZWdpb25FeHRlbnNpb25Db25maWd1cmF0aW9uLCB9IGZyb20gXCJAYXdzLXNkay9yZWdpb24tY29uZmlnLXJlc29sdmVyXCI7XG5pbXBvcnQgeyBnZXRIdHRwSGFuZGxlckV4dGVuc2lvbkNvbmZpZ3VyYXRpb24sIHJlc29sdmVIdHRwSGFuZGxlclJ1bnRpbWVDb25maWcgfSBmcm9tIFwiQHNtaXRoeS9wcm90b2NvbC1odHRwXCI7XG5pbXBvcnQgeyBnZXREZWZhdWx0RXh0ZW5zaW9uQ29uZmlndXJhdGlvbiwgcmVzb2x2ZURlZmF1bHRSdW50aW1lQ29uZmlnIH0gZnJvbSBcIkBzbWl0aHkvc21pdGh5LWNsaWVudFwiO1xuY29uc3QgYXNQYXJ0aWFsID0gKHQpID0+IHQ7XG5leHBvcnQgY29uc3QgcmVzb2x2ZVJ1bnRpbWVFeHRlbnNpb25zID0gKHJ1bnRpbWVDb25maWcsIGV4dGVuc2lvbnMpID0+IHtcbiAgICBjb25zdCBleHRlbnNpb25Db25maWd1cmF0aW9uID0ge1xuICAgICAgICAuLi5hc1BhcnRpYWwoZ2V0QXdzUmVnaW9uRXh0ZW5zaW9uQ29uZmlndXJhdGlvbihydW50aW1lQ29uZmlnKSksXG4gICAgICAgIC4uLmFzUGFydGlhbChnZXREZWZhdWx0RXh0ZW5zaW9uQ29uZmlndXJhdGlvbihydW50aW1lQ29uZmlnKSksXG4gICAgICAgIC4uLmFzUGFydGlhbChnZXRIdHRwSGFuZGxlckV4dGVuc2lvbkNvbmZpZ3VyYXRpb24ocnVudGltZUNvbmZpZykpLFxuICAgIH07XG4gICAgZXh0ZW5zaW9ucy5mb3JFYWNoKChleHRlbnNpb24pID0+IGV4dGVuc2lvbi5jb25maWd1cmUoZXh0ZW5zaW9uQ29uZmlndXJhdGlvbikpO1xuICAgIHJldHVybiB7XG4gICAgICAgIC4uLnJ1bnRpbWVDb25maWcsXG4gICAgICAgIC4uLnJlc29sdmVBd3NSZWdpb25FeHRlbnNpb25Db25maWd1cmF0aW9uKGV4dGVuc2lvbkNvbmZpZ3VyYXRpb24pLFxuICAgICAgICAuLi5yZXNvbHZlRGVmYXVsdFJ1bnRpbWVDb25maWcoZXh0ZW5zaW9uQ29uZmlndXJhdGlvbiksXG4gICAgICAgIC4uLnJlc29sdmVIdHRwSGFuZGxlclJ1bnRpbWVDb25maWcoZXh0ZW5zaW9uQ29uZmlndXJhdGlvbiksXG4gICAgfTtcbn07XG4iXSwibmFtZXMiOlsiZ2V0QXdzUmVnaW9uRXh0ZW5zaW9uQ29uZmlndXJhdGlvbiIsInJlc29sdmVBd3NSZWdpb25FeHRlbnNpb25Db25maWd1cmF0aW9uIiwiZ2V0SHR0cEhhbmRsZXJFeHRlbnNpb25Db25maWd1cmF0aW9uIiwicmVzb2x2ZUh0dHBIYW5kbGVyUnVudGltZUNvbmZpZyIsImdldERlZmF1bHRFeHRlbnNpb25Db25maWd1cmF0aW9uIiwicmVzb2x2ZURlZmF1bHRSdW50aW1lQ29uZmlnIiwiYXNQYXJ0aWFsIiwidCIsInJlc29sdmVSdW50aW1lRXh0ZW5zaW9ucyIsInJ1bnRpbWVDb25maWciLCJleHRlbnNpb25zIiwiZXh0ZW5zaW9uQ29uZmlndXJhdGlvbiIsImZvckVhY2giLCJleHRlbnNpb24iLCJjb25maWd1cmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/dist-es/runtimeExtensions.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/package.json":
/*!**********************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@aws-sdk+client-ssm@3.451.0/node_modules/@aws-sdk/client-ssm/package.json ***!
  \**********************************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse('{"name":"@aws-sdk/client-ssm","description":"AWS SDK for JavaScript Ssm Client for Node.js, Browser and React Native","version":"3.451.0","scripts":{"build":"concurrently \'yarn:build:cjs\' \'yarn:build:es\' \'yarn:build:types\'","build:cjs":"tsc -p tsconfig.cjs.json","build:docs":"typedoc","build:es":"tsc -p tsconfig.es.json","build:include:deps":"lerna run --scope $npm_package_name --include-dependencies build","build:types":"tsc -p tsconfig.types.json","build:types:downlevel":"downlevel-dts dist-types dist-types/ts3.4","clean":"rimraf ./dist-* && rimraf *.tsbuildinfo","extract:docs":"api-extractor run --local","generate:client":"node ../../scripts/generate-clients/single-service --solo ssm"},"main":"./dist-cjs/index.js","types":"./dist-types/index.d.ts","module":"./dist-es/index.js","sideEffects":false,"dependencies":{"@aws-crypto/sha256-browser":"3.0.0","@aws-crypto/sha256-js":"3.0.0","@aws-sdk/client-sts":"3.451.0","@aws-sdk/core":"3.451.0","@aws-sdk/credential-provider-node":"3.451.0","@aws-sdk/middleware-host-header":"3.451.0","@aws-sdk/middleware-logger":"3.451.0","@aws-sdk/middleware-recursion-detection":"3.451.0","@aws-sdk/middleware-signing":"3.451.0","@aws-sdk/middleware-user-agent":"3.451.0","@aws-sdk/region-config-resolver":"3.451.0","@aws-sdk/types":"3.451.0","@aws-sdk/util-endpoints":"3.451.0","@aws-sdk/util-user-agent-browser":"3.451.0","@aws-sdk/util-user-agent-node":"3.451.0","@smithy/config-resolver":"^2.0.18","@smithy/fetch-http-handler":"^2.2.6","@smithy/hash-node":"^2.0.15","@smithy/invalid-dependency":"^2.0.13","@smithy/middleware-content-length":"^2.0.15","@smithy/middleware-endpoint":"^2.2.0","@smithy/middleware-retry":"^2.0.20","@smithy/middleware-serde":"^2.0.13","@smithy/middleware-stack":"^2.0.7","@smithy/node-config-provider":"^2.1.5","@smithy/node-http-handler":"^2.1.9","@smithy/protocol-http":"^3.0.9","@smithy/smithy-client":"^2.1.15","@smithy/types":"^2.5.0","@smithy/url-parser":"^2.0.13","@smithy/util-base64":"^2.0.1","@smithy/util-body-length-browser":"^2.0.0","@smithy/util-body-length-node":"^2.1.0","@smithy/util-defaults-mode-browser":"^2.0.19","@smithy/util-defaults-mode-node":"^2.0.25","@smithy/util-endpoints":"^1.0.4","@smithy/util-retry":"^2.0.6","@smithy/util-utf8":"^2.0.2","@smithy/util-waiter":"^2.0.13","tslib":"^2.5.0","uuid":"^8.3.2"},"devDependencies":{"@smithy/service-client-documentation-generator":"^2.0.0","@tsconfig/node14":"1.0.3","@types/node":"^14.14.31","@types/uuid":"^8.3.0","concurrently":"7.0.0","downlevel-dts":"0.10.1","rimraf":"3.0.2","typedoc":"0.23.23","typescript":"~4.9.5"},"engines":{"node":">=14.0.0"},"typesVersions":{"<4.0":{"dist-types/*":["dist-types/ts3.4/*"]}},"files":["dist-*/**"],"author":{"name":"AWS SDK for JavaScript Team","url":"https://aws.amazon.com/javascript/"},"license":"Apache-2.0","browser":{"./dist-es/runtimeConfig":"./dist-es/runtimeConfig.browser"},"react-native":{"./dist-es/runtimeConfig":"./dist-es/runtimeConfig.native"},"homepage":"https://github.com/aws/aws-sdk-js-v3/tree/main/clients/client-ssm","repository":{"type":"git","url":"https://github.com/aws/aws-sdk-js-v3.git","directory":"clients/client-ssm"}}');

/***/ })

};
;